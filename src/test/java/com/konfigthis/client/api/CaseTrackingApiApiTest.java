/*
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CaseTrack;
import com.konfigthis.client.model.CaseTrackListResponse;
import com.konfigthis.client.model.CaseTrackRequest;
import com.konfigthis.client.model.CaseTrackSchedule;
import com.konfigthis.client.model.CaseUpdateRequest;
import java.time.OffsetDateTime;
import com.konfigthis.client.model.Success;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CaseTrackingApiApi
 */
@Disabled
public class CaseTrackingApiApiTest {

    private static CaseTrackingApiApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CaseTrackingApiApi(apiClient);
    }

    /**
     * Add Case Track for the requested Case Id.
     *
     * Track the specified case.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCaseTrackTest() throws ApiException {
        CaseUpdateRequest caseTrackParams = null;
        CaseTrackSchedule schedule = null;
        Success response = api.addCaseTrack(caseTrackParams, schedule)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Case Track for a requested Case Id.
     *
     * Retrieve case tracking information for the specified caseId value.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCaseTrackTest() throws ApiException {
        String caseId = null;
        CaseTrack response = api.getCaseTrack(caseId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Case Track list.
     *
     * Retrieve a list of all tracked cases.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCaseTrackListTest() throws ApiException {
        OffsetDateTime lastFetchDate = null;
        OffsetDateTime lastFetchDateWithUpdates = null;
        Integer pageNumber = null;
        CaseTrackListResponse response = api.getCaseTrackList()
                .lastFetchDate(lastFetchDate)
                .lastFetchDateWithUpdates(lastFetchDateWithUpdates)
                .pageNumber(pageNumber)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove Case Track for a specific Case Id.
     *
     * Remove Case Track for a specific Case Id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeCaseTrackByIdTest() throws ApiException {
        String caseId = null;
        Success response = api.removeCaseTrackById(caseId)
                .execute();
        // TODO: test validations
    }

}
