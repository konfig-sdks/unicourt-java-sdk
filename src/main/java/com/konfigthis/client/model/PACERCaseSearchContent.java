/*
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PACERCaseSearchContent
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PACERCaseSearchContent {
  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object = "PACERCaseSearchContent";

  public static final String SERIALIZED_NAME_PCL_BANKRUPTCY_CHAPTER = "pclBankruptcyChapter";
  @SerializedName(SERIALIZED_NAME_PCL_BANKRUPTCY_CHAPTER)
  private String pclBankruptcyChapter;

  public static final String SERIALIZED_NAME_PCL_CASE_ID = "pclCaseId";
  @SerializedName(SERIALIZED_NAME_PCL_CASE_ID)
  private Integer pclCaseId;

  public static final String SERIALIZED_NAME_PCL_CASE_LINK = "pclCaseLink";
  @SerializedName(SERIALIZED_NAME_PCL_CASE_LINK)
  private String pclCaseLink;

  public static final String SERIALIZED_NAME_PCL_CASE_NUMBER = "pclCaseNumber";
  @SerializedName(SERIALIZED_NAME_PCL_CASE_NUMBER)
  private Integer pclCaseNumber;

  public static final String SERIALIZED_NAME_PCL_CASE_NUMBER_FULL = "pclCaseNumberFull";
  @SerializedName(SERIALIZED_NAME_PCL_CASE_NUMBER_FULL)
  private String pclCaseNumberFull;

  public static final String SERIALIZED_NAME_PCL_CASE_OFFICE = "pclCaseOffice";
  @SerializedName(SERIALIZED_NAME_PCL_CASE_OFFICE)
  private String pclCaseOffice;

  public static final String SERIALIZED_NAME_PCL_CASE_TITLE = "pclCaseTitle";
  @SerializedName(SERIALIZED_NAME_PCL_CASE_TITLE)
  private String pclCaseTitle;

  public static final String SERIALIZED_NAME_PCL_CASE_TYPE = "pclCaseType";
  @SerializedName(SERIALIZED_NAME_PCL_CASE_TYPE)
  private String pclCaseType;

  public static final String SERIALIZED_NAME_PCL_CASE_YEAR = "pclCaseYear";
  @SerializedName(SERIALIZED_NAME_PCL_CASE_YEAR)
  private Integer pclCaseYear;

  public static final String SERIALIZED_NAME_PCL_CIVIL_CTO_NUMBER = "pclCivilCtoNumber";
  @SerializedName(SERIALIZED_NAME_PCL_CIVIL_CTO_NUMBER)
  private String pclCivilCtoNumber;

  public static final String SERIALIZED_NAME_PCL_CIVIL_DATE_DISPOSITION = "pclCivilDateDisposition";
  @SerializedName(SERIALIZED_NAME_PCL_CIVIL_DATE_DISPOSITION)
  private String pclCivilDateDisposition;

  public static final String SERIALIZED_NAME_PCL_CIVIL_DATE_INITIATED = "pclCivilDateInitiated";
  @SerializedName(SERIALIZED_NAME_PCL_CIVIL_DATE_INITIATED)
  private String pclCivilDateInitiated;

  public static final String SERIALIZED_NAME_PCL_CIVIL_DATE_TERMINATED = "pclCivilDateTerminated";
  @SerializedName(SERIALIZED_NAME_PCL_CIVIL_DATE_TERMINATED)
  private String pclCivilDateTerminated;

  public static final String SERIALIZED_NAME_PCL_CIVIL_STAT_DISPOSITION = "pclCivilStatDisposition";
  @SerializedName(SERIALIZED_NAME_PCL_CIVIL_STAT_DISPOSITION)
  private String pclCivilStatDisposition;

  public static final String SERIALIZED_NAME_PCL_CIVIL_STAT_INITIATED = "pclCivilStatInitiated";
  @SerializedName(SERIALIZED_NAME_PCL_CIVIL_STAT_INITIATED)
  private String pclCivilStatInitiated;

  public static final String SERIALIZED_NAME_PCL_CIVIL_STAT_TERMINATED = "pclCivilStatTerminated";
  @SerializedName(SERIALIZED_NAME_PCL_CIVIL_STAT_TERMINATED)
  private String pclCivilStatTerminated;

  public static final String SERIALIZED_NAME_PCL_CIVIL_TRANSFEREE = "pclCivilTransferee";
  @SerializedName(SERIALIZED_NAME_PCL_CIVIL_TRANSFEREE)
  private String pclCivilTransferee;

  public static final String SERIALIZED_NAME_PCL_COURT_ID = "pclCourtId";
  @SerializedName(SERIALIZED_NAME_PCL_COURT_ID)
  private String pclCourtId;

  public static final String SERIALIZED_NAME_PCL_DATE_DISCHARGED = "pclDateDischarged";
  @SerializedName(SERIALIZED_NAME_PCL_DATE_DISCHARGED)
  private String pclDateDischarged;

  public static final String SERIALIZED_NAME_PCL_DATE_DISMISSED = "pclDateDismissed";
  @SerializedName(SERIALIZED_NAME_PCL_DATE_DISMISSED)
  private String pclDateDismissed;

  public static final String SERIALIZED_NAME_PCL_DATE_FILED = "pclDateFiled";
  @SerializedName(SERIALIZED_NAME_PCL_DATE_FILED)
  private String pclDateFiled;

  public static final String SERIALIZED_NAME_PCL_DATE_REOPENED = "pclDateReopened";
  @SerializedName(SERIALIZED_NAME_PCL_DATE_REOPENED)
  private String pclDateReopened;

  public static final String SERIALIZED_NAME_PCL_DATE_TERMED = "pclDateTermed";
  @SerializedName(SERIALIZED_NAME_PCL_DATE_TERMED)
  private String pclDateTermed;

  public static final String SERIALIZED_NAME_PCL_DISPOSITION = "pclDisposition";
  @SerializedName(SERIALIZED_NAME_PCL_DISPOSITION)
  private String pclDisposition;

  public static final String SERIALIZED_NAME_PCL_DISPOSITION_METHOD = "pclDispositionMethod";
  @SerializedName(SERIALIZED_NAME_PCL_DISPOSITION_METHOD)
  private String pclDispositionMethod;

  public static final String SERIALIZED_NAME_PCL_JOINT_BANKRUPTCY_FLAG = "pclJointBankruptcyFlag";
  @SerializedName(SERIALIZED_NAME_PCL_JOINT_BANKRUPTCY_FLAG)
  private String pclJointBankruptcyFlag;

  public static final String SERIALIZED_NAME_PCL_JOINT_DISCHARGED_DATE = "pclJointDischargedDate";
  @SerializedName(SERIALIZED_NAME_PCL_JOINT_DISCHARGED_DATE)
  private String pclJointDischargedDate;

  public static final String SERIALIZED_NAME_PCL_JOINT_DISMISSED_DATE = "pclJointDismissedDate";
  @SerializedName(SERIALIZED_NAME_PCL_JOINT_DISMISSED_DATE)
  private String pclJointDismissedDate;

  public static final String SERIALIZED_NAME_PCL_JOINT_DISPOSITION_METHOD = "pclJointDispositionMethod";
  @SerializedName(SERIALIZED_NAME_PCL_JOINT_DISPOSITION_METHOD)
  private String pclJointDispositionMethod;

  public static final String SERIALIZED_NAME_PCL_JPML_NUMBER = "pclJpmlNumber";
  @SerializedName(SERIALIZED_NAME_PCL_JPML_NUMBER)
  private Integer pclJpmlNumber;

  /**
   * Link to case in the case management/electronic case files (CM/ECF) system at the court.
   */
  @JsonAdapter(PclJurisdictionTypeEnum.Adapter.class)
 public enum PclJurisdictionTypeEnum {
    APPELLATE("Appellate"),
    
    BANKRUPTCY("Bankruptcy"),
    
    CRIMINAL("Criminal"),
    
    CIVIL("Civil"),
    
    MULTI_DISTRICT_LITIGATION("Multi-district Litigation");

    private String value;

    PclJurisdictionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PclJurisdictionTypeEnum fromValue(String value) {
      for (PclJurisdictionTypeEnum b : PclJurisdictionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PclJurisdictionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PclJurisdictionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PclJurisdictionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PclJurisdictionTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PCL_JURISDICTION_TYPE = "pclJurisdictionType";
  @SerializedName(SERIALIZED_NAME_PCL_JURISDICTION_TYPE)
  private PclJurisdictionTypeEnum pclJurisdictionType;

  public static final String SERIALIZED_NAME_PCL_MDL_COURT_ID = "pclMdlCourtId";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_COURT_ID)
  private String pclMdlCourtId;

  public static final String SERIALIZED_NAME_PCL_MDL_DATE_ORDERED = "pclMdlDateOrdered";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_DATE_ORDERED)
  private String pclMdlDateOrdered;

  public static final String SERIALIZED_NAME_PCL_MDL_DATE_RECEIVED = "pclMdlDateReceived";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_DATE_RECEIVED)
  private String pclMdlDateReceived;

  public static final String SERIALIZED_NAME_PCL_MDL_EXTENSION = "pclMdlExtension";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_EXTENSION)
  private String pclMdlExtension;

  public static final String SERIALIZED_NAME_PCL_MDL_JUDGE_LAST_NAME = "pclMdlJudgeLastName";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_JUDGE_LAST_NAME)
  private String pclMdlJudgeLastName;

  public static final String SERIALIZED_NAME_PCL_MDL_LITTYPE = "pclMdlLittype";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_LITTYPE)
  private String pclMdlLittype;

  public static final String SERIALIZED_NAME_PCL_MDL_STATUS = "pclMdlStatus";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_STATUS)
  private String pclMdlStatus;

  public static final String SERIALIZED_NAME_PCL_MDL_TRANSFEREE = "pclMdlTransferee";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_TRANSFEREE)
  private String pclMdlTransferee;

  public static final String SERIALIZED_NAME_PCL_MDL_TRANSFEREE_DISTRICT = "pclMdlTransfereeDistrict";
  @SerializedName(SERIALIZED_NAME_PCL_MDL_TRANSFEREE_DISTRICT)
  private String pclMdlTransfereeDistrict;

  public static final String SERIALIZED_NAME_PCL_NATURE_OF_SUIT = "pclNatureOfSuit";
  @SerializedName(SERIALIZED_NAME_PCL_NATURE_OF_SUIT)
  private String pclNatureOfSuit;

  public PACERCaseSearchContent() {
  }

  public PACERCaseSearchContent _object(String _object) {
    
    
    if (_object != null && _object.length() < 22) {
      throw new IllegalArgumentException("Invalid value for _object. Length must be greater than or equal to 22.");
    }
    
    this._object = _object;
    return this;
  }

   /**
   * Name of the object
   * @return _object
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "PACERCaseSearchContent", required = true, value = "Name of the object")

  public String getObject() {
    return _object;
  }


  public void setObject(String _object) {
    
    
    if (_object != null && _object.length() < 22) {
      throw new IllegalArgumentException("Invalid value for _object. Length must be greater than or equal to 22.");
    }
    this._object = _object;
  }


  public PACERCaseSearchContent pclBankruptcyChapter(String pclBankruptcyChapter) {
    
    
    
    
    this.pclBankruptcyChapter = pclBankruptcyChapter;
    return this;
  }

   /**
   * This parameter represents the bankruptcy chapter of the case when it is present
   * @return pclBankruptcyChapter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "13", required = true, value = "This parameter represents the bankruptcy chapter of the case when it is present")

  public String getPclBankruptcyChapter() {
    return pclBankruptcyChapter;
  }


  public void setPclBankruptcyChapter(String pclBankruptcyChapter) {
    
    
    
    this.pclBankruptcyChapter = pclBankruptcyChapter;
  }


  public PACERCaseSearchContent pclCaseId(Integer pclCaseId) {
    
    
    
    
    this.pclCaseId = pclCaseId;
    return this;
  }

   /**
   * Sequentially generated number that identifies the case.
   * @return pclCaseId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "12569", required = true, value = "Sequentially generated number that identifies the case.")

  public Integer getPclCaseId() {
    return pclCaseId;
  }


  public void setPclCaseId(Integer pclCaseId) {
    
    
    
    this.pclCaseId = pclCaseId;
  }


  public PACERCaseSearchContent pclCaseLink(String pclCaseLink) {
    
    
    
    
    this.pclCaseLink = pclCaseLink;
    return this;
  }

   /**
   * Link to case in the case management/electronic case files (CM/ECF) system at the court.
   * @return pclCaseLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://ecf.jpml.uscourts.gov/cgi-bin/iqquerymenu.pl?375295", required = true, value = "Link to case in the case management/electronic case files (CM/ECF) system at the court.")

  public String getPclCaseLink() {
    return pclCaseLink;
  }


  public void setPclCaseLink(String pclCaseLink) {
    
    
    
    this.pclCaseLink = pclCaseLink;
  }


  public PACERCaseSearchContent pclCaseNumber(Integer pclCaseNumber) {
    
    
    
    
    this.pclCaseNumber = pclCaseNumber;
    return this;
  }

   /**
   * The sequence number of the case.
   * @return pclCaseNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "96", required = true, value = "The sequence number of the case.")

  public Integer getPclCaseNumber() {
    return pclCaseNumber;
  }


  public void setPclCaseNumber(Integer pclCaseNumber) {
    
    
    
    this.pclCaseNumber = pclCaseNumber;
  }


  public PACERCaseSearchContent pclCaseNumberFull(String pclCaseNumberFull) {
    
    
    
    
    this.pclCaseNumberFull = pclCaseNumberFull;
    return this;
  }

   /**
   * Case Number.
   * @return pclCaseNumberFull
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1:2002cv00096", required = true, value = "Case Number.")

  public String getPclCaseNumberFull() {
    return pclCaseNumberFull;
  }


  public void setPclCaseNumberFull(String pclCaseNumberFull) {
    
    
    
    this.pclCaseNumberFull = pclCaseNumberFull;
  }


  public PACERCaseSearchContent pclCaseOffice(String pclCaseOffice) {
    
    
    
    
    this.pclCaseOffice = pclCaseOffice;
    return this;
  }

   /**
   * The divisional office in which the case was filed.
   * @return pclCaseOffice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", required = true, value = "The divisional office in which the case was filed.")

  public String getPclCaseOffice() {
    return pclCaseOffice;
  }


  public void setPclCaseOffice(String pclCaseOffice) {
    
    
    
    this.pclCaseOffice = pclCaseOffice;
  }


  public PACERCaseSearchContent pclCaseTitle(String pclCaseTitle) {
    
    
    
    
    this.pclCaseTitle = pclCaseTitle;
    return this;
  }

   /**
   * Title of the case.
   * @return pclCaseTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "James Kelly v. Maria Poole", required = true, value = "Title of the case.")

  public String getPclCaseTitle() {
    return pclCaseTitle;
  }


  public void setPclCaseTitle(String pclCaseTitle) {
    
    
    
    this.pclCaseTitle = pclCaseTitle;
  }


  public PACERCaseSearchContent pclCaseType(String pclCaseType) {
    
    
    
    
    this.pclCaseType = pclCaseType;
    return this;
  }

   /**
   * Code that identifies the type of case.
   * @return pclCaseType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cv", required = true, value = "Code that identifies the type of case.")

  public String getPclCaseType() {
    return pclCaseType;
  }


  public void setPclCaseType(String pclCaseType) {
    
    
    
    this.pclCaseType = pclCaseType;
  }


  public PACERCaseSearchContent pclCaseYear(Integer pclCaseYear) {
    
    
    
    
    this.pclCaseYear = pclCaseYear;
    return this;
  }

   /**
   * The year in which the case falls. Could be two or four digit.
   * @return pclCaseYear
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2002", required = true, value = "The year in which the case falls. Could be two or four digit.")

  public Integer getPclCaseYear() {
    return pclCaseYear;
  }


  public void setPclCaseYear(Integer pclCaseYear) {
    
    
    
    this.pclCaseYear = pclCaseYear;
  }


  public PACERCaseSearchContent pclCivilCtoNumber(String pclCivilCtoNumber) {
    
    
    
    
    this.pclCivilCtoNumber = pclCivilCtoNumber;
    return this;
  }

   /**
   * This parameter represents the civil cto number of the case when it is present
   * @return pclCivilCtoNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "212", required = true, value = "This parameter represents the civil cto number of the case when it is present")

  public String getPclCivilCtoNumber() {
    return pclCivilCtoNumber;
  }


  public void setPclCivilCtoNumber(String pclCivilCtoNumber) {
    
    
    
    this.pclCivilCtoNumber = pclCivilCtoNumber;
  }


  public PACERCaseSearchContent pclCivilDateDisposition(String pclCivilDateDisposition) {
    
    
    
    
    this.pclCivilDateDisposition = pclCivilDateDisposition;
    return this;
  }

   /**
   * This parameter represents the civil disposition date of the case when it is present
   * @return pclCivilDateDisposition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2002-05-13T00:00:00.000Z", required = true, value = "This parameter represents the civil disposition date of the case when it is present")

  public String getPclCivilDateDisposition() {
    return pclCivilDateDisposition;
  }


  public void setPclCivilDateDisposition(String pclCivilDateDisposition) {
    
    
    
    this.pclCivilDateDisposition = pclCivilDateDisposition;
  }


  public PACERCaseSearchContent pclCivilDateInitiated(String pclCivilDateInitiated) {
    
    
    
    
    this.pclCivilDateInitiated = pclCivilDateInitiated;
    return this;
  }

   /**
   * This parameter represents the civil initiated date of the case when it is present
   * @return pclCivilDateInitiated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2002-04-25T00:00:00.000Z", required = true, value = "This parameter represents the civil initiated date of the case when it is present")

  public String getPclCivilDateInitiated() {
    return pclCivilDateInitiated;
  }


  public void setPclCivilDateInitiated(String pclCivilDateInitiated) {
    
    
    
    this.pclCivilDateInitiated = pclCivilDateInitiated;
  }


  public PACERCaseSearchContent pclCivilDateTerminated(String pclCivilDateTerminated) {
    
    
    
    
    this.pclCivilDateTerminated = pclCivilDateTerminated;
    return this;
  }

   /**
   * This parameter represents the civil terminated date of the case when it is present
   * @return pclCivilDateTerminated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2010-05-10T00:00:00.000Z", required = true, value = "This parameter represents the civil terminated date of the case when it is present")

  public String getPclCivilDateTerminated() {
    return pclCivilDateTerminated;
  }


  public void setPclCivilDateTerminated(String pclCivilDateTerminated) {
    
    
    
    this.pclCivilDateTerminated = pclCivilDateTerminated;
  }


  public PACERCaseSearchContent pclCivilStatDisposition(String pclCivilStatDisposition) {
    
    
    
    
    this.pclCivilStatDisposition = pclCivilStatDisposition;
    return this;
  }

   /**
   * This parameter represents the civil stat disposition of the case when it is present
   * @return pclCivilStatDisposition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CTO Final", required = true, value = "This parameter represents the civil stat disposition of the case when it is present")

  public String getPclCivilStatDisposition() {
    return pclCivilStatDisposition;
  }


  public void setPclCivilStatDisposition(String pclCivilStatDisposition) {
    
    
    
    this.pclCivilStatDisposition = pclCivilStatDisposition;
  }


  public PACERCaseSearchContent pclCivilStatInitiated(String pclCivilStatInitiated) {
    
    
    
    
    this.pclCivilStatInitiated = pclCivilStatInitiated;
    return this;
  }

   /**
   * This parameter represents the civil stat initiated of the case when it is present
   * @return pclCivilStatInitiated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CTO Filed", required = true, value = "This parameter represents the civil stat initiated of the case when it is present")

  public String getPclCivilStatInitiated() {
    return pclCivilStatInitiated;
  }


  public void setPclCivilStatInitiated(String pclCivilStatInitiated) {
    
    
    
    this.pclCivilStatInitiated = pclCivilStatInitiated;
  }


  public PACERCaseSearchContent pclCivilStatTerminated(String pclCivilStatTerminated) {
    
    
    
    
    this.pclCivilStatTerminated = pclCivilStatTerminated;
    return this;
  }

   /**
   * This parameter represents the civil stat terminated of the case when it is present
   * @return pclCivilStatTerminated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Closed", required = true, value = "This parameter represents the civil stat terminated of the case when it is present")

  public String getPclCivilStatTerminated() {
    return pclCivilStatTerminated;
  }


  public void setPclCivilStatTerminated(String pclCivilStatTerminated) {
    
    
    
    this.pclCivilStatTerminated = pclCivilStatTerminated;
  }


  public PACERCaseSearchContent pclCivilTransferee(String pclCivilTransferee) {
    
    
    
    
    this.pclCivilTransferee = pclCivilTransferee;
    return this;
  }

   /**
   * This parameter represents the civil transferee of the case when it is present
   * @return pclCivilTransferee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2006-69199", required = true, value = "This parameter represents the civil transferee of the case when it is present")

  public String getPclCivilTransferee() {
    return pclCivilTransferee;
  }


  public void setPclCivilTransferee(String pclCivilTransferee) {
    
    
    
    this.pclCivilTransferee = pclCivilTransferee;
  }


  public PACERCaseSearchContent pclCourtId(String pclCourtId) {
    
    
    
    
    this.pclCourtId = pclCourtId;
    return this;
  }

   /**
   * The general geographical region or specific court district. The court ID is the abbreviation of the court location combined with the court type (dc or bk). Please refer the Appendix B
   * @return pclCourtId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jpmldc", required = true, value = "The general geographical region or specific court district. The court ID is the abbreviation of the court location combined with the court type (dc or bk). Please refer the Appendix B")

  public String getPclCourtId() {
    return pclCourtId;
  }


  public void setPclCourtId(String pclCourtId) {
    
    
    
    this.pclCourtId = pclCourtId;
  }


  public PACERCaseSearchContent pclDateDischarged(String pclDateDischarged) {
    
    
    
    
    this.pclDateDischarged = pclDateDischarged;
    return this;
  }

   /**
   * This parameter represents the date discharged of the case when it is present
   * @return pclDateDischarged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2006-06-10T00:00:00.000Z", required = true, value = "This parameter represents the date discharged of the case when it is present")

  public String getPclDateDischarged() {
    return pclDateDischarged;
  }


  public void setPclDateDischarged(String pclDateDischarged) {
    
    
    
    this.pclDateDischarged = pclDateDischarged;
  }


  public PACERCaseSearchContent pclDateDismissed(String pclDateDismissed) {
    
    
    
    
    this.pclDateDismissed = pclDateDismissed;
    return this;
  }

   /**
   * This parameter represents the date dismissed of the case when it is present
   * @return pclDateDismissed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2006-05-20T00:00:00.000Z", required = true, value = "This parameter represents the date dismissed of the case when it is present")

  public String getPclDateDismissed() {
    return pclDateDismissed;
  }


  public void setPclDateDismissed(String pclDateDismissed) {
    
    
    
    this.pclDateDismissed = pclDateDismissed;
  }


  public PACERCaseSearchContent pclDateFiled(String pclDateFiled) {
    
    
    
    
    this.pclDateFiled = pclDateFiled;
    return this;
  }

   /**
   * Filing date of the case.
   * @return pclDateFiled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2002-08-15T00:00:00.000Z", required = true, value = "Filing date of the case.")

  public String getPclDateFiled() {
    return pclDateFiled;
  }


  public void setPclDateFiled(String pclDateFiled) {
    
    
    
    this.pclDateFiled = pclDateFiled;
  }


  public PACERCaseSearchContent pclDateReopened(String pclDateReopened) {
    
    
    
    
    this.pclDateReopened = pclDateReopened;
    return this;
  }

   /**
   * This parameter represents the date reopened of the case when it is present
   * @return pclDateReopened
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2007-06-10T00:00:00.000Z", required = true, value = "This parameter represents the date reopened of the case when it is present")

  public String getPclDateReopened() {
    return pclDateReopened;
  }


  public void setPclDateReopened(String pclDateReopened) {
    
    
    
    this.pclDateReopened = pclDateReopened;
  }


  public PACERCaseSearchContent pclDateTermed(String pclDateTermed) {
    
    
    
    
    this.pclDateTermed = pclDateTermed;
    return this;
  }

   /**
   * This parameter represents the date termed of the case when it is present
   * @return pclDateTermed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2006-07-10T00:00:00.000Z", required = true, value = "This parameter represents the date termed of the case when it is present")

  public String getPclDateTermed() {
    return pclDateTermed;
  }


  public void setPclDateTermed(String pclDateTermed) {
    
    
    
    this.pclDateTermed = pclDateTermed;
  }


  public PACERCaseSearchContent pclDisposition(String pclDisposition) {
    
    
    
    
    this.pclDisposition = pclDisposition;
    return this;
  }

   /**
   * This parameter represents the disposition of the case when it is present
   * @return pclDisposition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Dismissed for failure to pay filing fee", required = true, value = "This parameter represents the disposition of the case when it is present")

  public String getPclDisposition() {
    return pclDisposition;
  }


  public void setPclDisposition(String pclDisposition) {
    
    
    
    this.pclDisposition = pclDisposition;
  }


  public PACERCaseSearchContent pclDispositionMethod(String pclDispositionMethod) {
    
    
    
    
    this.pclDispositionMethod = pclDispositionMethod;
    return this;
  }

   /**
   * This parameter represents the disposition method of the case when it is present
   * @return pclDispositionMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Dismissed for failure to pay filing fee", required = true, value = "This parameter represents the disposition method of the case when it is present")

  public String getPclDispositionMethod() {
    return pclDispositionMethod;
  }


  public void setPclDispositionMethod(String pclDispositionMethod) {
    
    
    
    this.pclDispositionMethod = pclDispositionMethod;
  }


  public PACERCaseSearchContent pclJointBankruptcyFlag(String pclJointBankruptcyFlag) {
    
    
    
    
    this.pclJointBankruptcyFlag = pclJointBankruptcyFlag;
    return this;
  }

   /**
   * This parameter represents the joint bankruptcy flag of the case when it is present
   * @return pclJointBankruptcyFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "y", required = true, value = "This parameter represents the joint bankruptcy flag of the case when it is present")

  public String getPclJointBankruptcyFlag() {
    return pclJointBankruptcyFlag;
  }


  public void setPclJointBankruptcyFlag(String pclJointBankruptcyFlag) {
    
    
    
    this.pclJointBankruptcyFlag = pclJointBankruptcyFlag;
  }


  public PACERCaseSearchContent pclJointDischargedDate(String pclJointDischargedDate) {
    
    
    
    
    this.pclJointDischargedDate = pclJointDischargedDate;
    return this;
  }

   /**
   * This parameter represents the joint discharged date of the case when it is present
   * @return pclJointDischargedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2008-08-08T00:00:00.000Z", required = true, value = "This parameter represents the joint discharged date of the case when it is present")

  public String getPclJointDischargedDate() {
    return pclJointDischargedDate;
  }


  public void setPclJointDischargedDate(String pclJointDischargedDate) {
    
    
    
    this.pclJointDischargedDate = pclJointDischargedDate;
  }


  public PACERCaseSearchContent pclJointDismissedDate(String pclJointDismissedDate) {
    
    
    
    
    this.pclJointDismissedDate = pclJointDismissedDate;
    return this;
  }

   /**
   * This parameter represents the joint dismissed date of the case when it is present
   * @return pclJointDismissedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2008-08-08T00:00:00.000Z", required = true, value = "This parameter represents the joint dismissed date of the case when it is present")

  public String getPclJointDismissedDate() {
    return pclJointDismissedDate;
  }


  public void setPclJointDismissedDate(String pclJointDismissedDate) {
    
    
    
    this.pclJointDismissedDate = pclJointDismissedDate;
  }


  public PACERCaseSearchContent pclJointDispositionMethod(String pclJointDispositionMethod) {
    
    
    
    
    this.pclJointDispositionMethod = pclJointDispositionMethod;
    return this;
  }

   /**
   * This parameter represents the joint disposition method of the case when it is present
   * @return pclJointDispositionMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Hardship Discharge", required = true, value = "This parameter represents the joint disposition method of the case when it is present")

  public String getPclJointDispositionMethod() {
    return pclJointDispositionMethod;
  }


  public void setPclJointDispositionMethod(String pclJointDispositionMethod) {
    
    
    
    this.pclJointDispositionMethod = pclJointDispositionMethod;
  }


  public PACERCaseSearchContent pclJpmlNumber(Integer pclJpmlNumber) {
    
    
    
    
    this.pclJpmlNumber = pclJpmlNumber;
    return this;
  }

   /**
   * JPML Case Seed number.
   * @return pclJpmlNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "875", required = true, value = "JPML Case Seed number.")

  public Integer getPclJpmlNumber() {
    return pclJpmlNumber;
  }


  public void setPclJpmlNumber(Integer pclJpmlNumber) {
    
    
    
    this.pclJpmlNumber = pclJpmlNumber;
  }


  public PACERCaseSearchContent pclJurisdictionType(PclJurisdictionTypeEnum pclJurisdictionType) {
    
    
    
    
    this.pclJurisdictionType = pclJurisdictionType;
    return this;
  }

   /**
   * Link to case in the case management/electronic case files (CM/ECF) system at the court.
   * @return pclJurisdictionType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "APPELLATE", required = true, value = "Link to case in the case management/electronic case files (CM/ECF) system at the court.")

  public PclJurisdictionTypeEnum getPclJurisdictionType() {
    return pclJurisdictionType;
  }


  public void setPclJurisdictionType(PclJurisdictionTypeEnum pclJurisdictionType) {
    
    
    
    this.pclJurisdictionType = pclJurisdictionType;
  }


  public PACERCaseSearchContent pclMdlCourtId(String pclMdlCourtId) {
    
    
    
    
    this.pclMdlCourtId = pclMdlCourtId;
    return this;
  }

   /**
   * Which court does this mdl belongs too.
   * @return pclMdlCourtId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mssdce", required = true, value = "Which court does this mdl belongs too.")

  public String getPclMdlCourtId() {
    return pclMdlCourtId;
  }


  public void setPclMdlCourtId(String pclMdlCourtId) {
    
    
    
    this.pclMdlCourtId = pclMdlCourtId;
  }


  public PACERCaseSearchContent pclMdlDateOrdered(String pclMdlDateOrdered) {
    
    
    
    
    this.pclMdlDateOrdered = pclMdlDateOrdered;
    return this;
  }

   /**
   * This parameter represents the mdl date ordered of the case when it is present
   * @return pclMdlDateOrdered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2002-08-15T00:00:00.000Z", required = true, value = "This parameter represents the mdl date ordered of the case when it is present")

  public String getPclMdlDateOrdered() {
    return pclMdlDateOrdered;
  }


  public void setPclMdlDateOrdered(String pclMdlDateOrdered) {
    
    
    
    this.pclMdlDateOrdered = pclMdlDateOrdered;
  }


  public PACERCaseSearchContent pclMdlDateReceived(String pclMdlDateReceived) {
    
    
    
    
    this.pclMdlDateReceived = pclMdlDateReceived;
    return this;
  }

   /**
   * This parameter represents the mdl date received of the case when it is present
   * @return pclMdlDateReceived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2002-08-15T00:00:00.000Z", required = true, value = "This parameter represents the mdl date received of the case when it is present")

  public String getPclMdlDateReceived() {
    return pclMdlDateReceived;
  }


  public void setPclMdlDateReceived(String pclMdlDateReceived) {
    
    
    
    this.pclMdlDateReceived = pclMdlDateReceived;
  }


  public PACERCaseSearchContent pclMdlExtension(String pclMdlExtension) {
    
    
    
    
    this.pclMdlExtension = pclMdlExtension;
    return this;
  }

   /**
   * This parameter represents the mdl extension of the case when it is present
   * @return pclMdlExtension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "This parameter represents the mdl extension of the case when it is present")

  public String getPclMdlExtension() {
    return pclMdlExtension;
  }


  public void setPclMdlExtension(String pclMdlExtension) {
    
    
    
    this.pclMdlExtension = pclMdlExtension;
  }


  public PACERCaseSearchContent pclMdlJudgeLastName(String pclMdlJudgeLastName) {
    
    
    
    
    this.pclMdlJudgeLastName = pclMdlJudgeLastName;
    return this;
  }

   /**
   * This parameter represents the mdl judge lastname of the case when it is present
   * @return pclMdlJudgeLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "This parameter represents the mdl judge lastname of the case when it is present")

  public String getPclMdlJudgeLastName() {
    return pclMdlJudgeLastName;
  }


  public void setPclMdlJudgeLastName(String pclMdlJudgeLastName) {
    
    
    
    this.pclMdlJudgeLastName = pclMdlJudgeLastName;
  }


  public PACERCaseSearchContent pclMdlLittype(String pclMdlLittype) {
    
    
    
    
    this.pclMdlLittype = pclMdlLittype;
    return this;
  }

   /**
   * This parameter represents the mdl lit type of the case when it is present
   * @return pclMdlLittype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "This parameter represents the mdl lit type of the case when it is present")

  public String getPclMdlLittype() {
    return pclMdlLittype;
  }


  public void setPclMdlLittype(String pclMdlLittype) {
    
    
    
    this.pclMdlLittype = pclMdlLittype;
  }


  public PACERCaseSearchContent pclMdlStatus(String pclMdlStatus) {
    
    
    
    
    this.pclMdlStatus = pclMdlStatus;
    return this;
  }

   /**
   * This parameter represents the mdl status of the case when it is present
   * @return pclMdlStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "This parameter represents the mdl status of the case when it is present")

  public String getPclMdlStatus() {
    return pclMdlStatus;
  }


  public void setPclMdlStatus(String pclMdlStatus) {
    
    
    
    this.pclMdlStatus = pclMdlStatus;
  }


  public PACERCaseSearchContent pclMdlTransferee(String pclMdlTransferee) {
    
    
    
    
    this.pclMdlTransferee = pclMdlTransferee;
    return this;
  }

   /**
   * This parameter represents the mdl transferee of the case when it is present
   * @return pclMdlTransferee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "This parameter represents the mdl transferee of the case when it is present")

  public String getPclMdlTransferee() {
    return pclMdlTransferee;
  }


  public void setPclMdlTransferee(String pclMdlTransferee) {
    
    
    
    this.pclMdlTransferee = pclMdlTransferee;
  }


  public PACERCaseSearchContent pclMdlTransfereeDistrict(String pclMdlTransfereeDistrict) {
    
    
    
    
    this.pclMdlTransfereeDistrict = pclMdlTransfereeDistrict;
    return this;
  }

   /**
   * This parameter represents the mdl transferee district of the case when it is present
   * @return pclMdlTransfereeDistrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "This parameter represents the mdl transferee district of the case when it is present")

  public String getPclMdlTransfereeDistrict() {
    return pclMdlTransfereeDistrict;
  }


  public void setPclMdlTransfereeDistrict(String pclMdlTransfereeDistrict) {
    
    
    
    this.pclMdlTransfereeDistrict = pclMdlTransfereeDistrict;
  }


  public PACERCaseSearchContent pclNatureOfSuit(String pclNatureOfSuit) {
    
    
    
    
    this.pclNatureOfSuit = pclNatureOfSuit;
    return this;
  }

   /**
   * This parameter represents the nature of suit of the case when it is present
   * @return pclNatureOfSuit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "360", required = true, value = "This parameter represents the nature of suit of the case when it is present")

  public String getPclNatureOfSuit() {
    return pclNatureOfSuit;
  }


  public void setPclNatureOfSuit(String pclNatureOfSuit) {
    
    
    
    this.pclNatureOfSuit = pclNatureOfSuit;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PACERCaseSearchContent instance itself
   */
  public PACERCaseSearchContent putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PACERCaseSearchContent paCERCaseSearchContent = (PACERCaseSearchContent) o;
    return Objects.equals(this._object, paCERCaseSearchContent._object) &&
        Objects.equals(this.pclBankruptcyChapter, paCERCaseSearchContent.pclBankruptcyChapter) &&
        Objects.equals(this.pclCaseId, paCERCaseSearchContent.pclCaseId) &&
        Objects.equals(this.pclCaseLink, paCERCaseSearchContent.pclCaseLink) &&
        Objects.equals(this.pclCaseNumber, paCERCaseSearchContent.pclCaseNumber) &&
        Objects.equals(this.pclCaseNumberFull, paCERCaseSearchContent.pclCaseNumberFull) &&
        Objects.equals(this.pclCaseOffice, paCERCaseSearchContent.pclCaseOffice) &&
        Objects.equals(this.pclCaseTitle, paCERCaseSearchContent.pclCaseTitle) &&
        Objects.equals(this.pclCaseType, paCERCaseSearchContent.pclCaseType) &&
        Objects.equals(this.pclCaseYear, paCERCaseSearchContent.pclCaseYear) &&
        Objects.equals(this.pclCivilCtoNumber, paCERCaseSearchContent.pclCivilCtoNumber) &&
        Objects.equals(this.pclCivilDateDisposition, paCERCaseSearchContent.pclCivilDateDisposition) &&
        Objects.equals(this.pclCivilDateInitiated, paCERCaseSearchContent.pclCivilDateInitiated) &&
        Objects.equals(this.pclCivilDateTerminated, paCERCaseSearchContent.pclCivilDateTerminated) &&
        Objects.equals(this.pclCivilStatDisposition, paCERCaseSearchContent.pclCivilStatDisposition) &&
        Objects.equals(this.pclCivilStatInitiated, paCERCaseSearchContent.pclCivilStatInitiated) &&
        Objects.equals(this.pclCivilStatTerminated, paCERCaseSearchContent.pclCivilStatTerminated) &&
        Objects.equals(this.pclCivilTransferee, paCERCaseSearchContent.pclCivilTransferee) &&
        Objects.equals(this.pclCourtId, paCERCaseSearchContent.pclCourtId) &&
        Objects.equals(this.pclDateDischarged, paCERCaseSearchContent.pclDateDischarged) &&
        Objects.equals(this.pclDateDismissed, paCERCaseSearchContent.pclDateDismissed) &&
        Objects.equals(this.pclDateFiled, paCERCaseSearchContent.pclDateFiled) &&
        Objects.equals(this.pclDateReopened, paCERCaseSearchContent.pclDateReopened) &&
        Objects.equals(this.pclDateTermed, paCERCaseSearchContent.pclDateTermed) &&
        Objects.equals(this.pclDisposition, paCERCaseSearchContent.pclDisposition) &&
        Objects.equals(this.pclDispositionMethod, paCERCaseSearchContent.pclDispositionMethod) &&
        Objects.equals(this.pclJointBankruptcyFlag, paCERCaseSearchContent.pclJointBankruptcyFlag) &&
        Objects.equals(this.pclJointDischargedDate, paCERCaseSearchContent.pclJointDischargedDate) &&
        Objects.equals(this.pclJointDismissedDate, paCERCaseSearchContent.pclJointDismissedDate) &&
        Objects.equals(this.pclJointDispositionMethod, paCERCaseSearchContent.pclJointDispositionMethod) &&
        Objects.equals(this.pclJpmlNumber, paCERCaseSearchContent.pclJpmlNumber) &&
        Objects.equals(this.pclJurisdictionType, paCERCaseSearchContent.pclJurisdictionType) &&
        Objects.equals(this.pclMdlCourtId, paCERCaseSearchContent.pclMdlCourtId) &&
        Objects.equals(this.pclMdlDateOrdered, paCERCaseSearchContent.pclMdlDateOrdered) &&
        Objects.equals(this.pclMdlDateReceived, paCERCaseSearchContent.pclMdlDateReceived) &&
        Objects.equals(this.pclMdlExtension, paCERCaseSearchContent.pclMdlExtension) &&
        Objects.equals(this.pclMdlJudgeLastName, paCERCaseSearchContent.pclMdlJudgeLastName) &&
        Objects.equals(this.pclMdlLittype, paCERCaseSearchContent.pclMdlLittype) &&
        Objects.equals(this.pclMdlStatus, paCERCaseSearchContent.pclMdlStatus) &&
        Objects.equals(this.pclMdlTransferee, paCERCaseSearchContent.pclMdlTransferee) &&
        Objects.equals(this.pclMdlTransfereeDistrict, paCERCaseSearchContent.pclMdlTransfereeDistrict) &&
        Objects.equals(this.pclNatureOfSuit, paCERCaseSearchContent.pclNatureOfSuit)&&
        Objects.equals(this.additionalProperties, paCERCaseSearchContent.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_object, pclBankruptcyChapter, pclCaseId, pclCaseLink, pclCaseNumber, pclCaseNumberFull, pclCaseOffice, pclCaseTitle, pclCaseType, pclCaseYear, pclCivilCtoNumber, pclCivilDateDisposition, pclCivilDateInitiated, pclCivilDateTerminated, pclCivilStatDisposition, pclCivilStatInitiated, pclCivilStatTerminated, pclCivilTransferee, pclCourtId, pclDateDischarged, pclDateDismissed, pclDateFiled, pclDateReopened, pclDateTermed, pclDisposition, pclDispositionMethod, pclJointBankruptcyFlag, pclJointDischargedDate, pclJointDismissedDate, pclJointDispositionMethod, pclJpmlNumber, pclJurisdictionType, pclMdlCourtId, pclMdlDateOrdered, pclMdlDateReceived, pclMdlExtension, pclMdlJudgeLastName, pclMdlLittype, pclMdlStatus, pclMdlTransferee, pclMdlTransfereeDistrict, pclNatureOfSuit, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PACERCaseSearchContent {\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    pclBankruptcyChapter: ").append(toIndentedString(pclBankruptcyChapter)).append("\n");
    sb.append("    pclCaseId: ").append(toIndentedString(pclCaseId)).append("\n");
    sb.append("    pclCaseLink: ").append(toIndentedString(pclCaseLink)).append("\n");
    sb.append("    pclCaseNumber: ").append(toIndentedString(pclCaseNumber)).append("\n");
    sb.append("    pclCaseNumberFull: ").append(toIndentedString(pclCaseNumberFull)).append("\n");
    sb.append("    pclCaseOffice: ").append(toIndentedString(pclCaseOffice)).append("\n");
    sb.append("    pclCaseTitle: ").append(toIndentedString(pclCaseTitle)).append("\n");
    sb.append("    pclCaseType: ").append(toIndentedString(pclCaseType)).append("\n");
    sb.append("    pclCaseYear: ").append(toIndentedString(pclCaseYear)).append("\n");
    sb.append("    pclCivilCtoNumber: ").append(toIndentedString(pclCivilCtoNumber)).append("\n");
    sb.append("    pclCivilDateDisposition: ").append(toIndentedString(pclCivilDateDisposition)).append("\n");
    sb.append("    pclCivilDateInitiated: ").append(toIndentedString(pclCivilDateInitiated)).append("\n");
    sb.append("    pclCivilDateTerminated: ").append(toIndentedString(pclCivilDateTerminated)).append("\n");
    sb.append("    pclCivilStatDisposition: ").append(toIndentedString(pclCivilStatDisposition)).append("\n");
    sb.append("    pclCivilStatInitiated: ").append(toIndentedString(pclCivilStatInitiated)).append("\n");
    sb.append("    pclCivilStatTerminated: ").append(toIndentedString(pclCivilStatTerminated)).append("\n");
    sb.append("    pclCivilTransferee: ").append(toIndentedString(pclCivilTransferee)).append("\n");
    sb.append("    pclCourtId: ").append(toIndentedString(pclCourtId)).append("\n");
    sb.append("    pclDateDischarged: ").append(toIndentedString(pclDateDischarged)).append("\n");
    sb.append("    pclDateDismissed: ").append(toIndentedString(pclDateDismissed)).append("\n");
    sb.append("    pclDateFiled: ").append(toIndentedString(pclDateFiled)).append("\n");
    sb.append("    pclDateReopened: ").append(toIndentedString(pclDateReopened)).append("\n");
    sb.append("    pclDateTermed: ").append(toIndentedString(pclDateTermed)).append("\n");
    sb.append("    pclDisposition: ").append(toIndentedString(pclDisposition)).append("\n");
    sb.append("    pclDispositionMethod: ").append(toIndentedString(pclDispositionMethod)).append("\n");
    sb.append("    pclJointBankruptcyFlag: ").append(toIndentedString(pclJointBankruptcyFlag)).append("\n");
    sb.append("    pclJointDischargedDate: ").append(toIndentedString(pclJointDischargedDate)).append("\n");
    sb.append("    pclJointDismissedDate: ").append(toIndentedString(pclJointDismissedDate)).append("\n");
    sb.append("    pclJointDispositionMethod: ").append(toIndentedString(pclJointDispositionMethod)).append("\n");
    sb.append("    pclJpmlNumber: ").append(toIndentedString(pclJpmlNumber)).append("\n");
    sb.append("    pclJurisdictionType: ").append(toIndentedString(pclJurisdictionType)).append("\n");
    sb.append("    pclMdlCourtId: ").append(toIndentedString(pclMdlCourtId)).append("\n");
    sb.append("    pclMdlDateOrdered: ").append(toIndentedString(pclMdlDateOrdered)).append("\n");
    sb.append("    pclMdlDateReceived: ").append(toIndentedString(pclMdlDateReceived)).append("\n");
    sb.append("    pclMdlExtension: ").append(toIndentedString(pclMdlExtension)).append("\n");
    sb.append("    pclMdlJudgeLastName: ").append(toIndentedString(pclMdlJudgeLastName)).append("\n");
    sb.append("    pclMdlLittype: ").append(toIndentedString(pclMdlLittype)).append("\n");
    sb.append("    pclMdlStatus: ").append(toIndentedString(pclMdlStatus)).append("\n");
    sb.append("    pclMdlTransferee: ").append(toIndentedString(pclMdlTransferee)).append("\n");
    sb.append("    pclMdlTransfereeDistrict: ").append(toIndentedString(pclMdlTransfereeDistrict)).append("\n");
    sb.append("    pclNatureOfSuit: ").append(toIndentedString(pclNatureOfSuit)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("object");
    openapiFields.add("pclBankruptcyChapter");
    openapiFields.add("pclCaseId");
    openapiFields.add("pclCaseLink");
    openapiFields.add("pclCaseNumber");
    openapiFields.add("pclCaseNumberFull");
    openapiFields.add("pclCaseOffice");
    openapiFields.add("pclCaseTitle");
    openapiFields.add("pclCaseType");
    openapiFields.add("pclCaseYear");
    openapiFields.add("pclCivilCtoNumber");
    openapiFields.add("pclCivilDateDisposition");
    openapiFields.add("pclCivilDateInitiated");
    openapiFields.add("pclCivilDateTerminated");
    openapiFields.add("pclCivilStatDisposition");
    openapiFields.add("pclCivilStatInitiated");
    openapiFields.add("pclCivilStatTerminated");
    openapiFields.add("pclCivilTransferee");
    openapiFields.add("pclCourtId");
    openapiFields.add("pclDateDischarged");
    openapiFields.add("pclDateDismissed");
    openapiFields.add("pclDateFiled");
    openapiFields.add("pclDateReopened");
    openapiFields.add("pclDateTermed");
    openapiFields.add("pclDisposition");
    openapiFields.add("pclDispositionMethod");
    openapiFields.add("pclJointBankruptcyFlag");
    openapiFields.add("pclJointDischargedDate");
    openapiFields.add("pclJointDismissedDate");
    openapiFields.add("pclJointDispositionMethod");
    openapiFields.add("pclJpmlNumber");
    openapiFields.add("pclJurisdictionType");
    openapiFields.add("pclMdlCourtId");
    openapiFields.add("pclMdlDateOrdered");
    openapiFields.add("pclMdlDateReceived");
    openapiFields.add("pclMdlExtension");
    openapiFields.add("pclMdlJudgeLastName");
    openapiFields.add("pclMdlLittype");
    openapiFields.add("pclMdlStatus");
    openapiFields.add("pclMdlTransferee");
    openapiFields.add("pclMdlTransfereeDistrict");
    openapiFields.add("pclNatureOfSuit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("object");
    openapiRequiredFields.add("pclBankruptcyChapter");
    openapiRequiredFields.add("pclCaseId");
    openapiRequiredFields.add("pclCaseLink");
    openapiRequiredFields.add("pclCaseNumber");
    openapiRequiredFields.add("pclCaseNumberFull");
    openapiRequiredFields.add("pclCaseOffice");
    openapiRequiredFields.add("pclCaseTitle");
    openapiRequiredFields.add("pclCaseType");
    openapiRequiredFields.add("pclCaseYear");
    openapiRequiredFields.add("pclCivilCtoNumber");
    openapiRequiredFields.add("pclCivilDateDisposition");
    openapiRequiredFields.add("pclCivilDateInitiated");
    openapiRequiredFields.add("pclCivilDateTerminated");
    openapiRequiredFields.add("pclCivilStatDisposition");
    openapiRequiredFields.add("pclCivilStatInitiated");
    openapiRequiredFields.add("pclCivilStatTerminated");
    openapiRequiredFields.add("pclCivilTransferee");
    openapiRequiredFields.add("pclCourtId");
    openapiRequiredFields.add("pclDateDischarged");
    openapiRequiredFields.add("pclDateDismissed");
    openapiRequiredFields.add("pclDateFiled");
    openapiRequiredFields.add("pclDateReopened");
    openapiRequiredFields.add("pclDateTermed");
    openapiRequiredFields.add("pclDisposition");
    openapiRequiredFields.add("pclDispositionMethod");
    openapiRequiredFields.add("pclJointBankruptcyFlag");
    openapiRequiredFields.add("pclJointDischargedDate");
    openapiRequiredFields.add("pclJointDismissedDate");
    openapiRequiredFields.add("pclJointDispositionMethod");
    openapiRequiredFields.add("pclJpmlNumber");
    openapiRequiredFields.add("pclJurisdictionType");
    openapiRequiredFields.add("pclMdlCourtId");
    openapiRequiredFields.add("pclMdlDateOrdered");
    openapiRequiredFields.add("pclMdlDateReceived");
    openapiRequiredFields.add("pclMdlExtension");
    openapiRequiredFields.add("pclMdlJudgeLastName");
    openapiRequiredFields.add("pclMdlLittype");
    openapiRequiredFields.add("pclMdlStatus");
    openapiRequiredFields.add("pclMdlTransferee");
    openapiRequiredFields.add("pclMdlTransfereeDistrict");
    openapiRequiredFields.add("pclNatureOfSuit");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PACERCaseSearchContent
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PACERCaseSearchContent.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PACERCaseSearchContent is not found in the empty JSON string", PACERCaseSearchContent.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PACERCaseSearchContent.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
      if (!jsonObj.get("pclBankruptcyChapter").isJsonNull() && !jsonObj.get("pclBankruptcyChapter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclBankruptcyChapter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclBankruptcyChapter").toString()));
      }
      if (!jsonObj.get("pclCaseLink").isJsonNull() && !jsonObj.get("pclCaseLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCaseLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCaseLink").toString()));
      }
      if (!jsonObj.get("pclCaseNumberFull").isJsonNull() && !jsonObj.get("pclCaseNumberFull").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCaseNumberFull` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCaseNumberFull").toString()));
      }
      if (!jsonObj.get("pclCaseOffice").isJsonNull() && !jsonObj.get("pclCaseOffice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCaseOffice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCaseOffice").toString()));
      }
      if (!jsonObj.get("pclCaseTitle").isJsonNull() && !jsonObj.get("pclCaseTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCaseTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCaseTitle").toString()));
      }
      if (!jsonObj.get("pclCaseType").isJsonNull() && !jsonObj.get("pclCaseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCaseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCaseType").toString()));
      }
      if (!jsonObj.get("pclCivilCtoNumber").isJsonNull() && !jsonObj.get("pclCivilCtoNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCivilCtoNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCivilCtoNumber").toString()));
      }
      if (!jsonObj.get("pclCivilDateDisposition").isJsonNull() && !jsonObj.get("pclCivilDateDisposition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCivilDateDisposition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCivilDateDisposition").toString()));
      }
      if (!jsonObj.get("pclCivilDateInitiated").isJsonNull() && !jsonObj.get("pclCivilDateInitiated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCivilDateInitiated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCivilDateInitiated").toString()));
      }
      if (!jsonObj.get("pclCivilDateTerminated").isJsonNull() && !jsonObj.get("pclCivilDateTerminated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCivilDateTerminated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCivilDateTerminated").toString()));
      }
      if (!jsonObj.get("pclCivilStatDisposition").isJsonNull() && !jsonObj.get("pclCivilStatDisposition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCivilStatDisposition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCivilStatDisposition").toString()));
      }
      if (!jsonObj.get("pclCivilStatInitiated").isJsonNull() && !jsonObj.get("pclCivilStatInitiated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCivilStatInitiated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCivilStatInitiated").toString()));
      }
      if (!jsonObj.get("pclCivilStatTerminated").isJsonNull() && !jsonObj.get("pclCivilStatTerminated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCivilStatTerminated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCivilStatTerminated").toString()));
      }
      if (!jsonObj.get("pclCivilTransferee").isJsonNull() && !jsonObj.get("pclCivilTransferee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCivilTransferee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCivilTransferee").toString()));
      }
      if (!jsonObj.get("pclCourtId").isJsonNull() && !jsonObj.get("pclCourtId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclCourtId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclCourtId").toString()));
      }
      if (!jsonObj.get("pclDateDischarged").isJsonNull() && !jsonObj.get("pclDateDischarged").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclDateDischarged` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclDateDischarged").toString()));
      }
      if (!jsonObj.get("pclDateDismissed").isJsonNull() && !jsonObj.get("pclDateDismissed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclDateDismissed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclDateDismissed").toString()));
      }
      if (!jsonObj.get("pclDateFiled").isJsonNull() && !jsonObj.get("pclDateFiled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclDateFiled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclDateFiled").toString()));
      }
      if (!jsonObj.get("pclDateReopened").isJsonNull() && !jsonObj.get("pclDateReopened").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclDateReopened` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclDateReopened").toString()));
      }
      if (!jsonObj.get("pclDateTermed").isJsonNull() && !jsonObj.get("pclDateTermed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclDateTermed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclDateTermed").toString()));
      }
      if (!jsonObj.get("pclDisposition").isJsonNull() && !jsonObj.get("pclDisposition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclDisposition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclDisposition").toString()));
      }
      if (!jsonObj.get("pclDispositionMethod").isJsonNull() && !jsonObj.get("pclDispositionMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclDispositionMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclDispositionMethod").toString()));
      }
      if (!jsonObj.get("pclJointBankruptcyFlag").isJsonNull() && !jsonObj.get("pclJointBankruptcyFlag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclJointBankruptcyFlag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclJointBankruptcyFlag").toString()));
      }
      if (!jsonObj.get("pclJointDischargedDate").isJsonNull() && !jsonObj.get("pclJointDischargedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclJointDischargedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclJointDischargedDate").toString()));
      }
      if (!jsonObj.get("pclJointDismissedDate").isJsonNull() && !jsonObj.get("pclJointDismissedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclJointDismissedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclJointDismissedDate").toString()));
      }
      if (!jsonObj.get("pclJointDispositionMethod").isJsonNull() && !jsonObj.get("pclJointDispositionMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclJointDispositionMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclJointDispositionMethod").toString()));
      }
      if (!jsonObj.get("pclJurisdictionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclJurisdictionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclJurisdictionType").toString()));
      }
      if (!jsonObj.get("pclMdlCourtId").isJsonNull() && !jsonObj.get("pclMdlCourtId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlCourtId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlCourtId").toString()));
      }
      if (!jsonObj.get("pclMdlDateOrdered").isJsonNull() && !jsonObj.get("pclMdlDateOrdered").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlDateOrdered` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlDateOrdered").toString()));
      }
      if (!jsonObj.get("pclMdlDateReceived").isJsonNull() && !jsonObj.get("pclMdlDateReceived").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlDateReceived` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlDateReceived").toString()));
      }
      if (!jsonObj.get("pclMdlExtension").isJsonNull() && !jsonObj.get("pclMdlExtension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlExtension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlExtension").toString()));
      }
      if (!jsonObj.get("pclMdlJudgeLastName").isJsonNull() && !jsonObj.get("pclMdlJudgeLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlJudgeLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlJudgeLastName").toString()));
      }
      if (!jsonObj.get("pclMdlLittype").isJsonNull() && !jsonObj.get("pclMdlLittype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlLittype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlLittype").toString()));
      }
      if (!jsonObj.get("pclMdlStatus").isJsonNull() && !jsonObj.get("pclMdlStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlStatus").toString()));
      }
      if (!jsonObj.get("pclMdlTransferee").isJsonNull() && !jsonObj.get("pclMdlTransferee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlTransferee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlTransferee").toString()));
      }
      if (!jsonObj.get("pclMdlTransfereeDistrict").isJsonNull() && !jsonObj.get("pclMdlTransfereeDistrict").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclMdlTransfereeDistrict` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclMdlTransfereeDistrict").toString()));
      }
      if (!jsonObj.get("pclNatureOfSuit").isJsonNull() && !jsonObj.get("pclNatureOfSuit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pclNatureOfSuit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pclNatureOfSuit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PACERCaseSearchContent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PACERCaseSearchContent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PACERCaseSearchContent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PACERCaseSearchContent.class));

       return (TypeAdapter<T>) new TypeAdapter<PACERCaseSearchContent>() {
           @Override
           public void write(JsonWriter out, PACERCaseSearchContent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PACERCaseSearchContent read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PACERCaseSearchContent instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PACERCaseSearchContent given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PACERCaseSearchContent
  * @throws IOException if the JSON string is invalid with respect to PACERCaseSearchContent
  */
  public static PACERCaseSearchContent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PACERCaseSearchContent.class);
  }

 /**
  * Convert an instance of PACERCaseSearchContent to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

