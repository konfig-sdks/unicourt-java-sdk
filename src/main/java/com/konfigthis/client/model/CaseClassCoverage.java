/*
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CaseClass;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CaseClassCoverage
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CaseClassCoverage {
  public static final String SERIALIZED_NAME_CASE_CLASS = "caseClass";
  @SerializedName(SERIALIZED_NAME_CASE_CLASS)
  private CaseClass caseClass;

  public static final String SERIALIZED_NAME_CASE_COUNT = "caseCount";
  @SerializedName(SERIALIZED_NAME_CASE_COUNT)
  private Integer caseCount;

  public static final String SERIALIZED_NAME_CASE_DOCUMENT_IN_LIBRARY_COUNT = "caseDocumentInLibraryCount";
  @SerializedName(SERIALIZED_NAME_CASE_DOCUMENT_IN_LIBRARY_COUNT)
  private Integer caseDocumentInLibraryCount;

  public static final String SERIALIZED_NAME_CASE_DOCUMENT_IN_LIBRARY_IN_LAST_THIRTY_DAYS_COUNT = "caseDocumentInLibraryInLastThirtyDaysCount";
  @SerializedName(SERIALIZED_NAME_CASE_DOCUMENT_IN_LIBRARY_IN_LAST_THIRTY_DAYS_COUNT)
  private Integer caseDocumentInLibraryInLastThirtyDaysCount;

  public static final String SERIALIZED_NAME_CASES_IN_LAST_THIRTY_DAYS_COUNT = "casesInLastThirtyDaysCount";
  @SerializedName(SERIALIZED_NAME_CASES_IN_LAST_THIRTY_DAYS_COUNT)
  private Integer casesInLastThirtyDaysCount;

  public static final String SERIALIZED_NAME_COURT_SERVICE_STATUS_A_P_I = "courtServiceStatusAPI";
  @SerializedName(SERIALIZED_NAME_COURT_SERVICE_STATUS_A_P_I)
  private String courtServiceStatusAPI;

  public static final String SERIALIZED_NAME_FREE_CASE_DOCUMENT_COUNT = "freeCaseDocumentCount";
  @SerializedName(SERIALIZED_NAME_FREE_CASE_DOCUMENT_COUNT)
  private Integer freeCaseDocumentCount;

  public static final String SERIALIZED_NAME_FREE_CASE_DOCUMENTS_IN_LAST_THIRTY_DAYS_COUNT = "freeCaseDocumentsInLastThirtyDaysCount";
  @SerializedName(SERIALIZED_NAME_FREE_CASE_DOCUMENTS_IN_LAST_THIRTY_DAYS_COUNT)
  private Integer freeCaseDocumentsInLastThirtyDaysCount;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object = "CaseClassCoverage";

  public static final String SERIALIZED_NAME_PAID_CASE_DOCUMENT_COUNT = "paidCaseDocumentCount";
  @SerializedName(SERIALIZED_NAME_PAID_CASE_DOCUMENT_COUNT)
  private Integer paidCaseDocumentCount;

  public static final String SERIALIZED_NAME_PAID_CASE_DOCUMENTS_IN_LAST_THIRTY_DAYS_COUNT = "paidCaseDocumentsInLastThirtyDaysCount";
  @SerializedName(SERIALIZED_NAME_PAID_CASE_DOCUMENTS_IN_LAST_THIRTY_DAYS_COUNT)
  private Integer paidCaseDocumentsInLastThirtyDaysCount;

  public CaseClassCoverage() {
  }

  public CaseClassCoverage caseClass(CaseClass caseClass) {
    
    
    
    
    this.caseClass = caseClass;
    return this;
  }

   /**
   * Get caseClass
   * @return caseClass
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public CaseClass getCaseClass() {
    return caseClass;
  }


  public void setCaseClass(CaseClass caseClass) {
    
    
    
    this.caseClass = caseClass;
  }


  public CaseClassCoverage caseCount(Integer caseCount) {
    
    
    
    
    this.caseCount = caseCount;
    return this;
  }

   /**
   * Total Cases for a specific CourtLocation.
   * @return caseCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1480157", required = true, value = "Total Cases for a specific CourtLocation.")

  public Integer getCaseCount() {
    return caseCount;
  }


  public void setCaseCount(Integer caseCount) {
    
    
    
    this.caseCount = caseCount;
  }


  public CaseClassCoverage caseDocumentInLibraryCount(Integer caseDocumentInLibraryCount) {
    
    
    
    
    this.caseDocumentInLibraryCount = caseDocumentInLibraryCount;
    return this;
  }

   /**
   * Case Documents that were added to UniCourt Crowd Source Library for a specific CourtLocationy.
   * @return caseDocumentInLibraryCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1256", required = true, value = "Case Documents that were added to UniCourt Crowd Source Library for a specific CourtLocationy.")

  public Integer getCaseDocumentInLibraryCount() {
    return caseDocumentInLibraryCount;
  }


  public void setCaseDocumentInLibraryCount(Integer caseDocumentInLibraryCount) {
    
    
    
    this.caseDocumentInLibraryCount = caseDocumentInLibraryCount;
  }


  public CaseClassCoverage caseDocumentInLibraryInLastThirtyDaysCount(Integer caseDocumentInLibraryInLastThirtyDaysCount) {
    
    
    
    
    this.caseDocumentInLibraryInLastThirtyDaysCount = caseDocumentInLibraryInLastThirtyDaysCount;
    return this;
  }

   /**
   * Case Documents that were added to UniCourt Crowd Source Library for a specific CourtLocation in last 30 days.
   * @return caseDocumentInLibraryInLastThirtyDaysCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1480157", required = true, value = "Case Documents that were added to UniCourt Crowd Source Library for a specific CourtLocation in last 30 days.")

  public Integer getCaseDocumentInLibraryInLastThirtyDaysCount() {
    return caseDocumentInLibraryInLastThirtyDaysCount;
  }


  public void setCaseDocumentInLibraryInLastThirtyDaysCount(Integer caseDocumentInLibraryInLastThirtyDaysCount) {
    
    
    
    this.caseDocumentInLibraryInLastThirtyDaysCount = caseDocumentInLibraryInLastThirtyDaysCount;
  }


  public CaseClassCoverage casesInLastThirtyDaysCount(Integer casesInLastThirtyDaysCount) {
    
    
    
    
    this.casesInLastThirtyDaysCount = casesInLastThirtyDaysCount;
    return this;
  }

   /**
   * Cases in last 30 days that were added to UniCourt for a specific CourtLocation
   * @return casesInLastThirtyDaysCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "8889", required = true, value = "Cases in last 30 days that were added to UniCourt for a specific CourtLocation")

  public Integer getCasesInLastThirtyDaysCount() {
    return casesInLastThirtyDaysCount;
  }


  public void setCasesInLastThirtyDaysCount(Integer casesInLastThirtyDaysCount) {
    
    
    
    this.casesInLastThirtyDaysCount = casesInLastThirtyDaysCount;
  }


  public CaseClassCoverage courtServiceStatusAPI(String courtServiceStatusAPI) {
    
    
    if (courtServiceStatusAPI != null && courtServiceStatusAPI.length() < 50) {
      throw new IllegalArgumentException("Invalid value for courtServiceStatusAPI. Length must be greater than or equal to 50.");
    }
    
    this.courtServiceStatusAPI = courtServiceStatusAPI;
    return this;
  }

   /**
   * API Link to the Court Service status with filters of court and case class
   * @return courtServiceStatusAPI
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "https://enterpriseapi.unicourt.com/masterData/courtServiceStatus?q=((Court:(courtId:\"CORTV4vCEaKrhystBz\")) AND (CaseClass:(caseClassId:\"CSCLNjbKTN7Yfo2wdb\")))", required = true, value = "API Link to the Court Service status with filters of court and case class")

  public String getCourtServiceStatusAPI() {
    return courtServiceStatusAPI;
  }


  public void setCourtServiceStatusAPI(String courtServiceStatusAPI) {
    
    
    if (courtServiceStatusAPI != null && courtServiceStatusAPI.length() < 50) {
      throw new IllegalArgumentException("Invalid value for courtServiceStatusAPI. Length must be greater than or equal to 50.");
    }
    this.courtServiceStatusAPI = courtServiceStatusAPI;
  }


  public CaseClassCoverage freeCaseDocumentCount(Integer freeCaseDocumentCount) {
    
    
    
    
    this.freeCaseDocumentCount = freeCaseDocumentCount;
    return this;
  }

   /**
   * Free Case Documents for a specific CourtLocation.
   * @return freeCaseDocumentCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "12545", required = true, value = "Free Case Documents for a specific CourtLocation.")

  public Integer getFreeCaseDocumentCount() {
    return freeCaseDocumentCount;
  }


  public void setFreeCaseDocumentCount(Integer freeCaseDocumentCount) {
    
    
    
    this.freeCaseDocumentCount = freeCaseDocumentCount;
  }


  public CaseClassCoverage freeCaseDocumentsInLastThirtyDaysCount(Integer freeCaseDocumentsInLastThirtyDaysCount) {
    
    
    
    
    this.freeCaseDocumentsInLastThirtyDaysCount = freeCaseDocumentsInLastThirtyDaysCount;
    return this;
  }

   /**
   * Free Case Documents in last 30 days that were added to UniCourt for a specific CourtLocation.
   * @return freeCaseDocumentsInLastThirtyDaysCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "12545", required = true, value = "Free Case Documents in last 30 days that were added to UniCourt for a specific CourtLocation.")

  public Integer getFreeCaseDocumentsInLastThirtyDaysCount() {
    return freeCaseDocumentsInLastThirtyDaysCount;
  }


  public void setFreeCaseDocumentsInLastThirtyDaysCount(Integer freeCaseDocumentsInLastThirtyDaysCount) {
    
    
    
    this.freeCaseDocumentsInLastThirtyDaysCount = freeCaseDocumentsInLastThirtyDaysCount;
  }


  public CaseClassCoverage _object(String _object) {
    
    
    if (_object != null && _object.length() < 17) {
      throw new IllegalArgumentException("Invalid value for _object. Length must be greater than or equal to 17.");
    }
    
    this._object = _object;
    return this;
  }

   /**
   * Name of the object
   * @return _object
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "CaseClassCoverage", required = true, value = "Name of the object")

  public String getObject() {
    return _object;
  }


  public void setObject(String _object) {
    
    
    if (_object != null && _object.length() < 17) {
      throw new IllegalArgumentException("Invalid value for _object. Length must be greater than or equal to 17.");
    }
    this._object = _object;
  }


  public CaseClassCoverage paidCaseDocumentCount(Integer paidCaseDocumentCount) {
    
    
    
    
    this.paidCaseDocumentCount = paidCaseDocumentCount;
    return this;
  }

   /**
   * Paid Case Documents for a specific CourtLocation.
   * @return paidCaseDocumentCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "12545", required = true, value = "Paid Case Documents for a specific CourtLocation.")

  public Integer getPaidCaseDocumentCount() {
    return paidCaseDocumentCount;
  }


  public void setPaidCaseDocumentCount(Integer paidCaseDocumentCount) {
    
    
    
    this.paidCaseDocumentCount = paidCaseDocumentCount;
  }


  public CaseClassCoverage paidCaseDocumentsInLastThirtyDaysCount(Integer paidCaseDocumentsInLastThirtyDaysCount) {
    
    
    
    
    this.paidCaseDocumentsInLastThirtyDaysCount = paidCaseDocumentsInLastThirtyDaysCount;
    return this;
  }

   /**
   * Paid Case Documents in last 30 days that were added to UniCourt for a specific CourtLocation.
   * @return paidCaseDocumentsInLastThirtyDaysCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "125", required = true, value = "Paid Case Documents in last 30 days that were added to UniCourt for a specific CourtLocation.")

  public Integer getPaidCaseDocumentsInLastThirtyDaysCount() {
    return paidCaseDocumentsInLastThirtyDaysCount;
  }


  public void setPaidCaseDocumentsInLastThirtyDaysCount(Integer paidCaseDocumentsInLastThirtyDaysCount) {
    
    
    
    this.paidCaseDocumentsInLastThirtyDaysCount = paidCaseDocumentsInLastThirtyDaysCount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CaseClassCoverage instance itself
   */
  public CaseClassCoverage putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseClassCoverage caseClassCoverage = (CaseClassCoverage) o;
    return Objects.equals(this.caseClass, caseClassCoverage.caseClass) &&
        Objects.equals(this.caseCount, caseClassCoverage.caseCount) &&
        Objects.equals(this.caseDocumentInLibraryCount, caseClassCoverage.caseDocumentInLibraryCount) &&
        Objects.equals(this.caseDocumentInLibraryInLastThirtyDaysCount, caseClassCoverage.caseDocumentInLibraryInLastThirtyDaysCount) &&
        Objects.equals(this.casesInLastThirtyDaysCount, caseClassCoverage.casesInLastThirtyDaysCount) &&
        Objects.equals(this.courtServiceStatusAPI, caseClassCoverage.courtServiceStatusAPI) &&
        Objects.equals(this.freeCaseDocumentCount, caseClassCoverage.freeCaseDocumentCount) &&
        Objects.equals(this.freeCaseDocumentsInLastThirtyDaysCount, caseClassCoverage.freeCaseDocumentsInLastThirtyDaysCount) &&
        Objects.equals(this._object, caseClassCoverage._object) &&
        Objects.equals(this.paidCaseDocumentCount, caseClassCoverage.paidCaseDocumentCount) &&
        Objects.equals(this.paidCaseDocumentsInLastThirtyDaysCount, caseClassCoverage.paidCaseDocumentsInLastThirtyDaysCount)&&
        Objects.equals(this.additionalProperties, caseClassCoverage.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caseClass, caseCount, caseDocumentInLibraryCount, caseDocumentInLibraryInLastThirtyDaysCount, casesInLastThirtyDaysCount, courtServiceStatusAPI, freeCaseDocumentCount, freeCaseDocumentsInLastThirtyDaysCount, _object, paidCaseDocumentCount, paidCaseDocumentsInLastThirtyDaysCount, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseClassCoverage {\n");
    sb.append("    caseClass: ").append(toIndentedString(caseClass)).append("\n");
    sb.append("    caseCount: ").append(toIndentedString(caseCount)).append("\n");
    sb.append("    caseDocumentInLibraryCount: ").append(toIndentedString(caseDocumentInLibraryCount)).append("\n");
    sb.append("    caseDocumentInLibraryInLastThirtyDaysCount: ").append(toIndentedString(caseDocumentInLibraryInLastThirtyDaysCount)).append("\n");
    sb.append("    casesInLastThirtyDaysCount: ").append(toIndentedString(casesInLastThirtyDaysCount)).append("\n");
    sb.append("    courtServiceStatusAPI: ").append(toIndentedString(courtServiceStatusAPI)).append("\n");
    sb.append("    freeCaseDocumentCount: ").append(toIndentedString(freeCaseDocumentCount)).append("\n");
    sb.append("    freeCaseDocumentsInLastThirtyDaysCount: ").append(toIndentedString(freeCaseDocumentsInLastThirtyDaysCount)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    paidCaseDocumentCount: ").append(toIndentedString(paidCaseDocumentCount)).append("\n");
    sb.append("    paidCaseDocumentsInLastThirtyDaysCount: ").append(toIndentedString(paidCaseDocumentsInLastThirtyDaysCount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("caseClass");
    openapiFields.add("caseCount");
    openapiFields.add("caseDocumentInLibraryCount");
    openapiFields.add("caseDocumentInLibraryInLastThirtyDaysCount");
    openapiFields.add("casesInLastThirtyDaysCount");
    openapiFields.add("courtServiceStatusAPI");
    openapiFields.add("freeCaseDocumentCount");
    openapiFields.add("freeCaseDocumentsInLastThirtyDaysCount");
    openapiFields.add("object");
    openapiFields.add("paidCaseDocumentCount");
    openapiFields.add("paidCaseDocumentsInLastThirtyDaysCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("caseClass");
    openapiRequiredFields.add("caseCount");
    openapiRequiredFields.add("caseDocumentInLibraryCount");
    openapiRequiredFields.add("caseDocumentInLibraryInLastThirtyDaysCount");
    openapiRequiredFields.add("casesInLastThirtyDaysCount");
    openapiRequiredFields.add("courtServiceStatusAPI");
    openapiRequiredFields.add("freeCaseDocumentCount");
    openapiRequiredFields.add("freeCaseDocumentsInLastThirtyDaysCount");
    openapiRequiredFields.add("object");
    openapiRequiredFields.add("paidCaseDocumentCount");
    openapiRequiredFields.add("paidCaseDocumentsInLastThirtyDaysCount");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CaseClassCoverage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CaseClassCoverage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CaseClassCoverage is not found in the empty JSON string", CaseClassCoverage.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CaseClassCoverage.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `caseClass`
      CaseClass.validateJsonObject(jsonObj.getAsJsonObject("caseClass"));
      if (!jsonObj.get("courtServiceStatusAPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `courtServiceStatusAPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("courtServiceStatusAPI").toString()));
      }
      if (!jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CaseClassCoverage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CaseClassCoverage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CaseClassCoverage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CaseClassCoverage.class));

       return (TypeAdapter<T>) new TypeAdapter<CaseClassCoverage>() {
           @Override
           public void write(JsonWriter out, CaseClassCoverage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CaseClassCoverage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CaseClassCoverage instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CaseClassCoverage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CaseClassCoverage
  * @throws IOException if the JSON string is invalid with respect to CaseClassCoverage
  */
  public static CaseClassCoverage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CaseClassCoverage.class);
  }

 /**
  * Convert an instance of CaseClassCoverage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

