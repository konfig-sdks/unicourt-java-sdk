/*
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PartyAnalyticsAPI
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PartyAnalyticsAPI {
  public static final String SERIALIZED_NAME_ASSOCIATED_NORM_ATTORNEYS_A_P_I = "associatedNormAttorneysAPI";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_NORM_ATTORNEYS_A_P_I)
  private URI associatedNormAttorneysAPI;

  public static final String SERIALIZED_NAME_ASSOCIATED_NORM_JUDGES_A_P_I = "associatedNormJudgesAPI";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_NORM_JUDGES_A_P_I)
  private URI associatedNormJudgesAPI;

  public static final String SERIALIZED_NAME_ASSOCIATED_NORM_LAW_FIRMS_A_P_I = "associatedNormLawFirmsAPI";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_NORM_LAW_FIRMS_A_P_I)
  private URI associatedNormLawFirmsAPI;

  public static final String SERIALIZED_NAME_CASE_COUNT_ANALYTICS_BY_OPPOSING_NORM_ATTORNEY_A_P_I = "caseCountAnalyticsByOpposingNormAttorneyAPI";
  @SerializedName(SERIALIZED_NAME_CASE_COUNT_ANALYTICS_BY_OPPOSING_NORM_ATTORNEY_A_P_I)
  private URI caseCountAnalyticsByOpposingNormAttorneyAPI;

  public static final String SERIALIZED_NAME_CASE_COUNT_ANALYTICS_BY_OPPOSING_NORM_LAW_FIRM_A_P_I = "caseCountAnalyticsByOpposingNormLawFirmAPI";
  @SerializedName(SERIALIZED_NAME_CASE_COUNT_ANALYTICS_BY_OPPOSING_NORM_LAW_FIRM_A_P_I)
  private URI caseCountAnalyticsByOpposingNormLawFirmAPI;

  public static final String SERIALIZED_NAME_CASE_COUNT_ANALYTICS_BY_OPPOSING_NORM_PARTY_A_P_I = "caseCountAnalyticsByOpposingNormPartyAPI";
  @SerializedName(SERIALIZED_NAME_CASE_COUNT_ANALYTICS_BY_OPPOSING_NORM_PARTY_A_P_I)
  private URI caseCountAnalyticsByOpposingNormPartyAPI;

  public static final String SERIALIZED_NAME_NORM_PARTY_A_P_I = "normPartyAPI";
  @SerializedName(SERIALIZED_NAME_NORM_PARTY_A_P_I)
  private URI normPartyAPI;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object = "PartyAnalyticsAPI";

  public PartyAnalyticsAPI() {
  }

  public PartyAnalyticsAPI associatedNormAttorneysAPI(URI associatedNormAttorneysAPI) {
    
    
    
    
    this.associatedNormAttorneysAPI = associatedNormAttorneysAPI;
    return this;
  }

   /**
   * Get associatedNormAttorneysAPI
   * @return associatedNormAttorneysAPI
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public URI getAssociatedNormAttorneysAPI() {
    return associatedNormAttorneysAPI;
  }


  public void setAssociatedNormAttorneysAPI(URI associatedNormAttorneysAPI) {
    
    
    
    this.associatedNormAttorneysAPI = associatedNormAttorneysAPI;
  }


  public PartyAnalyticsAPI associatedNormJudgesAPI(URI associatedNormJudgesAPI) {
    
    
    
    
    this.associatedNormJudgesAPI = associatedNormJudgesAPI;
    return this;
  }

   /**
   * Get associatedNormJudgesAPI
   * @return associatedNormJudgesAPI
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public URI getAssociatedNormJudgesAPI() {
    return associatedNormJudgesAPI;
  }


  public void setAssociatedNormJudgesAPI(URI associatedNormJudgesAPI) {
    
    
    
    this.associatedNormJudgesAPI = associatedNormJudgesAPI;
  }


  public PartyAnalyticsAPI associatedNormLawFirmsAPI(URI associatedNormLawFirmsAPI) {
    
    
    
    
    this.associatedNormLawFirmsAPI = associatedNormLawFirmsAPI;
    return this;
  }

   /**
   * Get associatedNormLawFirmsAPI
   * @return associatedNormLawFirmsAPI
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public URI getAssociatedNormLawFirmsAPI() {
    return associatedNormLawFirmsAPI;
  }


  public void setAssociatedNormLawFirmsAPI(URI associatedNormLawFirmsAPI) {
    
    
    
    this.associatedNormLawFirmsAPI = associatedNormLawFirmsAPI;
  }


  public PartyAnalyticsAPI caseCountAnalyticsByOpposingNormAttorneyAPI(URI caseCountAnalyticsByOpposingNormAttorneyAPI) {
    
    
    
    
    this.caseCountAnalyticsByOpposingNormAttorneyAPI = caseCountAnalyticsByOpposingNormAttorneyAPI;
    return this;
  }

   /**
   * Get caseCountAnalyticsByOpposingNormAttorneyAPI
   * @return caseCountAnalyticsByOpposingNormAttorneyAPI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public URI getCaseCountAnalyticsByOpposingNormAttorneyAPI() {
    return caseCountAnalyticsByOpposingNormAttorneyAPI;
  }


  public void setCaseCountAnalyticsByOpposingNormAttorneyAPI(URI caseCountAnalyticsByOpposingNormAttorneyAPI) {
    
    
    
    this.caseCountAnalyticsByOpposingNormAttorneyAPI = caseCountAnalyticsByOpposingNormAttorneyAPI;
  }


  public PartyAnalyticsAPI caseCountAnalyticsByOpposingNormLawFirmAPI(URI caseCountAnalyticsByOpposingNormLawFirmAPI) {
    
    
    
    
    this.caseCountAnalyticsByOpposingNormLawFirmAPI = caseCountAnalyticsByOpposingNormLawFirmAPI;
    return this;
  }

   /**
   * Get caseCountAnalyticsByOpposingNormLawFirmAPI
   * @return caseCountAnalyticsByOpposingNormLawFirmAPI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public URI getCaseCountAnalyticsByOpposingNormLawFirmAPI() {
    return caseCountAnalyticsByOpposingNormLawFirmAPI;
  }


  public void setCaseCountAnalyticsByOpposingNormLawFirmAPI(URI caseCountAnalyticsByOpposingNormLawFirmAPI) {
    
    
    
    this.caseCountAnalyticsByOpposingNormLawFirmAPI = caseCountAnalyticsByOpposingNormLawFirmAPI;
  }


  public PartyAnalyticsAPI caseCountAnalyticsByOpposingNormPartyAPI(URI caseCountAnalyticsByOpposingNormPartyAPI) {
    
    
    
    
    this.caseCountAnalyticsByOpposingNormPartyAPI = caseCountAnalyticsByOpposingNormPartyAPI;
    return this;
  }

   /**
   * Get caseCountAnalyticsByOpposingNormPartyAPI
   * @return caseCountAnalyticsByOpposingNormPartyAPI
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public URI getCaseCountAnalyticsByOpposingNormPartyAPI() {
    return caseCountAnalyticsByOpposingNormPartyAPI;
  }


  public void setCaseCountAnalyticsByOpposingNormPartyAPI(URI caseCountAnalyticsByOpposingNormPartyAPI) {
    
    
    
    this.caseCountAnalyticsByOpposingNormPartyAPI = caseCountAnalyticsByOpposingNormPartyAPI;
  }


  public PartyAnalyticsAPI normPartyAPI(URI normPartyAPI) {
    
    
    
    
    this.normPartyAPI = normPartyAPI;
    return this;
  }

   /**
   * Link to Details for the Party.
   * @return normPartyAPI
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Link to Details for the Party.")

  public URI getNormPartyAPI() {
    return normPartyAPI;
  }


  public void setNormPartyAPI(URI normPartyAPI) {
    
    
    
    this.normPartyAPI = normPartyAPI;
  }


  public PartyAnalyticsAPI _object(String _object) {
    
    
    
    
    this._object = _object;
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "PartyAnalyticsAPI", required = true, value = "")

  public String getObject() {
    return _object;
  }


  public void setObject(String _object) {
    
    
    
    this._object = _object;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PartyAnalyticsAPI instance itself
   */
  public PartyAnalyticsAPI putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartyAnalyticsAPI partyAnalyticsAPI = (PartyAnalyticsAPI) o;
    return Objects.equals(this.associatedNormAttorneysAPI, partyAnalyticsAPI.associatedNormAttorneysAPI) &&
        Objects.equals(this.associatedNormJudgesAPI, partyAnalyticsAPI.associatedNormJudgesAPI) &&
        Objects.equals(this.associatedNormLawFirmsAPI, partyAnalyticsAPI.associatedNormLawFirmsAPI) &&
        Objects.equals(this.caseCountAnalyticsByOpposingNormAttorneyAPI, partyAnalyticsAPI.caseCountAnalyticsByOpposingNormAttorneyAPI) &&
        Objects.equals(this.caseCountAnalyticsByOpposingNormLawFirmAPI, partyAnalyticsAPI.caseCountAnalyticsByOpposingNormLawFirmAPI) &&
        Objects.equals(this.caseCountAnalyticsByOpposingNormPartyAPI, partyAnalyticsAPI.caseCountAnalyticsByOpposingNormPartyAPI) &&
        Objects.equals(this.normPartyAPI, partyAnalyticsAPI.normPartyAPI) &&
        Objects.equals(this._object, partyAnalyticsAPI._object)&&
        Objects.equals(this.additionalProperties, partyAnalyticsAPI.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(associatedNormAttorneysAPI, associatedNormJudgesAPI, associatedNormLawFirmsAPI, caseCountAnalyticsByOpposingNormAttorneyAPI, caseCountAnalyticsByOpposingNormLawFirmAPI, caseCountAnalyticsByOpposingNormPartyAPI, normPartyAPI, _object, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartyAnalyticsAPI {\n");
    sb.append("    associatedNormAttorneysAPI: ").append(toIndentedString(associatedNormAttorneysAPI)).append("\n");
    sb.append("    associatedNormJudgesAPI: ").append(toIndentedString(associatedNormJudgesAPI)).append("\n");
    sb.append("    associatedNormLawFirmsAPI: ").append(toIndentedString(associatedNormLawFirmsAPI)).append("\n");
    sb.append("    caseCountAnalyticsByOpposingNormAttorneyAPI: ").append(toIndentedString(caseCountAnalyticsByOpposingNormAttorneyAPI)).append("\n");
    sb.append("    caseCountAnalyticsByOpposingNormLawFirmAPI: ").append(toIndentedString(caseCountAnalyticsByOpposingNormLawFirmAPI)).append("\n");
    sb.append("    caseCountAnalyticsByOpposingNormPartyAPI: ").append(toIndentedString(caseCountAnalyticsByOpposingNormPartyAPI)).append("\n");
    sb.append("    normPartyAPI: ").append(toIndentedString(normPartyAPI)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("associatedNormAttorneysAPI");
    openapiFields.add("associatedNormJudgesAPI");
    openapiFields.add("associatedNormLawFirmsAPI");
    openapiFields.add("caseCountAnalyticsByOpposingNormAttorneyAPI");
    openapiFields.add("caseCountAnalyticsByOpposingNormLawFirmAPI");
    openapiFields.add("caseCountAnalyticsByOpposingNormPartyAPI");
    openapiFields.add("normPartyAPI");
    openapiFields.add("object");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("associatedNormAttorneysAPI");
    openapiRequiredFields.add("associatedNormJudgesAPI");
    openapiRequiredFields.add("associatedNormLawFirmsAPI");
    openapiRequiredFields.add("caseCountAnalyticsByOpposingNormAttorneyAPI");
    openapiRequiredFields.add("caseCountAnalyticsByOpposingNormLawFirmAPI");
    openapiRequiredFields.add("caseCountAnalyticsByOpposingNormPartyAPI");
    openapiRequiredFields.add("normPartyAPI");
    openapiRequiredFields.add("object");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PartyAnalyticsAPI
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PartyAnalyticsAPI.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PartyAnalyticsAPI is not found in the empty JSON string", PartyAnalyticsAPI.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PartyAnalyticsAPI.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("associatedNormAttorneysAPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `associatedNormAttorneysAPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("associatedNormAttorneysAPI").toString()));
      }
      if (!jsonObj.get("associatedNormJudgesAPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `associatedNormJudgesAPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("associatedNormJudgesAPI").toString()));
      }
      if (!jsonObj.get("associatedNormLawFirmsAPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `associatedNormLawFirmsAPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("associatedNormLawFirmsAPI").toString()));
      }
      if (!jsonObj.get("caseCountAnalyticsByOpposingNormAttorneyAPI").isJsonNull() && !jsonObj.get("caseCountAnalyticsByOpposingNormAttorneyAPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caseCountAnalyticsByOpposingNormAttorneyAPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caseCountAnalyticsByOpposingNormAttorneyAPI").toString()));
      }
      if (!jsonObj.get("caseCountAnalyticsByOpposingNormLawFirmAPI").isJsonNull() && !jsonObj.get("caseCountAnalyticsByOpposingNormLawFirmAPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caseCountAnalyticsByOpposingNormLawFirmAPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caseCountAnalyticsByOpposingNormLawFirmAPI").toString()));
      }
      if (!jsonObj.get("caseCountAnalyticsByOpposingNormPartyAPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caseCountAnalyticsByOpposingNormPartyAPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caseCountAnalyticsByOpposingNormPartyAPI").toString()));
      }
      if (!jsonObj.get("normPartyAPI").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `normPartyAPI` to be a primitive type in the JSON string but got `%s`", jsonObj.get("normPartyAPI").toString()));
      }
      if (!jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PartyAnalyticsAPI.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PartyAnalyticsAPI' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PartyAnalyticsAPI> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PartyAnalyticsAPI.class));

       return (TypeAdapter<T>) new TypeAdapter<PartyAnalyticsAPI>() {
           @Override
           public void write(JsonWriter out, PartyAnalyticsAPI value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PartyAnalyticsAPI read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PartyAnalyticsAPI instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PartyAnalyticsAPI given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PartyAnalyticsAPI
  * @throws IOException if the JSON string is invalid with respect to PartyAnalyticsAPI
  */
  public static PartyAnalyticsAPI fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PartyAnalyticsAPI.class);
  }

 /**
  * Convert an instance of PartyAnalyticsAPI to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

