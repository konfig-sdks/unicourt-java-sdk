/*
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CaseUpdatePacerOptionsResponseAdditionalPageArrayInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CaseUpdatePacerOptionsResponseAdditionalPageArrayInner {
  public static final String SERIALIZED_NAME_FETCH_IF_OLDER_THAN_DAYS = "fetchIfOlderThanDays";
  @SerializedName(SERIALIZED_NAME_FETCH_IF_OLDER_THAN_DAYS)
  private Integer fetchIfOlderThanDays = 0;

  /**
   * Gets or Sets page
   */
  @JsonAdapter(PageEnum.Adapter.class)
 public enum PageEnum {
    ASSOCIATEDCASES("associatedCases"),
    
    CASESUMMARY("caseSummary"),
    
    LISTOFCREDITORS("listOfCreditors");

    private String value;

    PageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PageEnum fromValue(String value) {
      for (PageEnum b : PageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PageEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private PageEnum page;

  public CaseUpdatePacerOptionsResponseAdditionalPageArrayInner() {
  }

  public CaseUpdatePacerOptionsResponseAdditionalPageArrayInner fetchIfOlderThanDays(Integer fetchIfOlderThanDays) {
    if (fetchIfOlderThanDays != null && fetchIfOlderThanDays < 0) {
      throw new IllegalArgumentException("Invalid value for fetchIfOlderThanDays. Must be greater than or equal to 0.");
    }
    if (fetchIfOlderThanDays != null && fetchIfOlderThanDays > 100) {
      throw new IllegalArgumentException("Invalid value for fetchIfOlderThanDays. Must be less than or equal to 100.");
    }
    
    
    this.fetchIfOlderThanDays = fetchIfOlderThanDays;
    return this;
  }

   /**
   * You can limit how often this page information is fetched to reduce your PACER fees.  Min days is 0 and Max days is 100.  Example: 1.  Specifying a value of 0 ensures that this page is fetched from PACER for this case update irrespective of when the page was last fetched. 2.  Specifying a value of 30 ensures that this page is fetched from PACER for this case update only if the last fetch was older than 30 days. 
   * minimum: 0
   * maximum: 100
   * @return fetchIfOlderThanDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "30", value = "You can limit how often this page information is fetched to reduce your PACER fees.  Min days is 0 and Max days is 100.  Example: 1.  Specifying a value of 0 ensures that this page is fetched from PACER for this case update irrespective of when the page was last fetched. 2.  Specifying a value of 30 ensures that this page is fetched from PACER for this case update only if the last fetch was older than 30 days. ")

  public Integer getFetchIfOlderThanDays() {
    return fetchIfOlderThanDays;
  }


  public void setFetchIfOlderThanDays(Integer fetchIfOlderThanDays) {
    if (fetchIfOlderThanDays != null && fetchIfOlderThanDays < 0) {
      throw new IllegalArgumentException("Invalid value for fetchIfOlderThanDays. Must be greater than or equal to 0.");
    }
    if (fetchIfOlderThanDays != null && fetchIfOlderThanDays > 100) {
      throw new IllegalArgumentException("Invalid value for fetchIfOlderThanDays. Must be less than or equal to 100.");
    }
    
    this.fetchIfOlderThanDays = fetchIfOlderThanDays;
  }


  public CaseUpdatePacerOptionsResponseAdditionalPageArrayInner page(PageEnum page) {
    
    
    if (page != null && page.length() < 11) {
      throw new IllegalArgumentException("Invalid value for page. Length must be greater than or equal to 11.");
    }
    
    this.page = page;
    return this;
  }

   /**
   * Get page
   * @return page
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CASESUMMARY", value = "")

  public PageEnum getPage() {
    return page;
  }


  public void setPage(PageEnum page) {
    
    
    if (page != null && page.length() < 11) {
      throw new IllegalArgumentException("Invalid value for page. Length must be greater than or equal to 11.");
    }
    this.page = page;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CaseUpdatePacerOptionsResponseAdditionalPageArrayInner instance itself
   */
  public CaseUpdatePacerOptionsResponseAdditionalPageArrayInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseUpdatePacerOptionsResponseAdditionalPageArrayInner caseUpdatePacerOptionsResponseAdditionalPageArrayInner = (CaseUpdatePacerOptionsResponseAdditionalPageArrayInner) o;
    return Objects.equals(this.fetchIfOlderThanDays, caseUpdatePacerOptionsResponseAdditionalPageArrayInner.fetchIfOlderThanDays) &&
        Objects.equals(this.page, caseUpdatePacerOptionsResponseAdditionalPageArrayInner.page)&&
        Objects.equals(this.additionalProperties, caseUpdatePacerOptionsResponseAdditionalPageArrayInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fetchIfOlderThanDays, page, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseUpdatePacerOptionsResponseAdditionalPageArrayInner {\n");
    sb.append("    fetchIfOlderThanDays: ").append(toIndentedString(fetchIfOlderThanDays)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fetchIfOlderThanDays");
    openapiFields.add("page");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CaseUpdatePacerOptionsResponseAdditionalPageArrayInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CaseUpdatePacerOptionsResponseAdditionalPageArrayInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CaseUpdatePacerOptionsResponseAdditionalPageArrayInner is not found in the empty JSON string", CaseUpdatePacerOptionsResponseAdditionalPageArrayInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("page") != null && !jsonObj.get("page").isJsonNull()) && !jsonObj.get("page").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `page` to be a primitive type in the JSON string but got `%s`", jsonObj.get("page").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CaseUpdatePacerOptionsResponseAdditionalPageArrayInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CaseUpdatePacerOptionsResponseAdditionalPageArrayInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CaseUpdatePacerOptionsResponseAdditionalPageArrayInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CaseUpdatePacerOptionsResponseAdditionalPageArrayInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CaseUpdatePacerOptionsResponseAdditionalPageArrayInner>() {
           @Override
           public void write(JsonWriter out, CaseUpdatePacerOptionsResponseAdditionalPageArrayInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CaseUpdatePacerOptionsResponseAdditionalPageArrayInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CaseUpdatePacerOptionsResponseAdditionalPageArrayInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CaseUpdatePacerOptionsResponseAdditionalPageArrayInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CaseUpdatePacerOptionsResponseAdditionalPageArrayInner
  * @throws IOException if the JSON string is invalid with respect to CaseUpdatePacerOptionsResponseAdditionalPageArrayInner
  */
  public static CaseUpdatePacerOptionsResponseAdditionalPageArrayInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CaseUpdatePacerOptionsResponseAdditionalPageArrayInner.class);
  }

 /**
  * Convert an instance of CaseUpdatePacerOptionsResponseAdditionalPageArrayInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

