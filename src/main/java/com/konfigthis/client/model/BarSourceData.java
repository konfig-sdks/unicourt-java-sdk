/*
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BarSourceDataAdministrativeActionsArrayInner;
import com.konfigthis.client.model.BarSourceDataAdvancedDegreeArrayInner;
import com.konfigthis.client.model.BarSourceDataBarStatusArrayInner;
import com.konfigthis.client.model.BarSourceDataBoardCertificationsArrayInner;
import com.konfigthis.client.model.BarSourceDataCommitteesArrayInner;
import com.konfigthis.client.model.BarSourceDataCourtHistoryArrayInner;
import com.konfigthis.client.model.BarSourceDataCourtOfAdmissions;
import com.konfigthis.client.model.BarSourceDataDisciplinaryHistoryArrayInner;
import com.konfigthis.client.model.BarSourceDataDisciplineSummariesArrayInner;
import com.konfigthis.client.model.BarSourceDataEmploymentHistoryArrayInner;
import com.konfigthis.client.model.BarSourceDataFeesOptionsArrayInner;
import com.konfigthis.client.model.BarSourceDataInvolvementsArrayInner;
import com.konfigthis.client.model.BarSourceDataLawSchoolArrayInner;
import com.konfigthis.client.model.BarSourceDataName;
import com.konfigthis.client.model.BarSourceDataOpenActionStatusArrayInner;
import com.konfigthis.client.model.BarSourceDataOtherJurisdictionArrayInner;
import com.konfigthis.client.model.BarSourceDataPublicHearingArrayInner;
import com.konfigthis.client.model.BarSourceDataReasonForInactivation;
import com.konfigthis.client.model.BarSourceDataRelatedCasesArrayInner;
import com.konfigthis.client.model.BarSourceDataSourceInfo;
import com.konfigthis.client.model.BarSourceDataStatewideGrievanceCommitteeHistoryArrayInner;
import com.konfigthis.client.model.BarSourceDataStatusHistoryArrayInner;
import com.konfigthis.client.model.BarSourceDataTenYearDisciplineArrayInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * BarSourceData
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class BarSourceData {
  public static final String SERIALIZED_NAME_ADMINISTRATIVE_ACTIONS_ARRAY = "administrativeActionsArray";
  @SerializedName(SERIALIZED_NAME_ADMINISTRATIVE_ACTIONS_ARRAY)
  private List<BarSourceDataAdministrativeActionsArrayInner> administrativeActionsArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADMISSION_TYPE = "admissionType";
  @SerializedName(SERIALIZED_NAME_ADMISSION_TYPE)
  private String admissionType;

  public static final String SERIALIZED_NAME_ADVANCED_DEGREE_ARRAY = "advancedDegreeArray";
  @SerializedName(SERIALIZED_NAME_ADVANCED_DEGREE_ARRAY)
  private List<BarSourceDataAdvancedDegreeArrayInner> advancedDegreeArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_APPELLATE_COURT_DISTRICT = "appellateCourtDistrict";
  @SerializedName(SERIALIZED_NAME_APPELLATE_COURT_DISTRICT)
  private String appellateCourtDistrict;

  public static final String SERIALIZED_NAME_APPELLATE_DIVISION_DEPARTMENT = "appellateDivisionDepartment";
  @SerializedName(SERIALIZED_NAME_APPELLATE_DIVISION_DEPARTMENT)
  private String appellateDivisionDepartment;

  public static final String SERIALIZED_NAME_ATTORNEY_GROUP = "attorneyGroup";
  @SerializedName(SERIALIZED_NAME_ATTORNEY_GROUP)
  private String attorneyGroup;

  public static final String SERIALIZED_NAME_AUTHORIZED = "authorized";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED)
  private String authorized;

  public static final String SERIALIZED_NAME_BAR_LAW_FIRM = "barLawFirm";
  @SerializedName(SERIALIZED_NAME_BAR_LAW_FIRM)
  private String barLawFirm;

  public static final String SERIALIZED_NAME_BAR_SERVICE_CLASS = "barServiceClass";
  @SerializedName(SERIALIZED_NAME_BAR_SERVICE_CLASS)
  private String barServiceClass;

  public static final String SERIALIZED_NAME_BAR_STATUS_ARRAY = "barStatusArray";
  @SerializedName(SERIALIZED_NAME_BAR_STATUS_ARRAY)
  private List<BarSourceDataBarStatusArrayInner> barStatusArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_BIO = "bio";
  @SerializedName(SERIALIZED_NAME_BIO)
  private String bio;

  public static final String SERIALIZED_NAME_BOARD_CERTIFICATIONS_ARRAY = "boardCertificationsArray";
  @SerializedName(SERIALIZED_NAME_BOARD_CERTIFICATIONS_ARRAY)
  private List<BarSourceDataBoardCertificationsArrayInner> boardCertificationsArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOARD_DISTRICT = "boardDistrict";
  @SerializedName(SERIALIZED_NAME_BOARD_DISTRICT)
  private String boardDistrict;

  public static final String SERIALIZED_NAME_CIRCUIT = "circuit";
  @SerializedName(SERIALIZED_NAME_CIRCUIT)
  private String circuit;

  public static final String SERIALIZED_NAME_CLIENTS_REPRESENTED_ARRAY = "clientsRepresentedArray";
  @SerializedName(SERIALIZED_NAME_CLIENTS_REPRESENTED_ARRAY)
  private List<String> clientsRepresentedArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_COMMITTEES_ARRAY = "committeesArray";
  @SerializedName(SERIALIZED_NAME_COMMITTEES_ARRAY)
  private List<BarSourceDataCommitteesArrayInner> committeesArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_COURT_HISTORY_ARRAY = "courtHistoryArray";
  @SerializedName(SERIALIZED_NAME_COURT_HISTORY_ARRAY)
  private List<BarSourceDataCourtHistoryArrayInner> courtHistoryArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_COURT_OF_ADMISSIONS = "courtOfAdmissions";
  @SerializedName(SERIALIZED_NAME_COURT_OF_ADMISSIONS)
  private BarSourceDataCourtOfAdmissions courtOfAdmissions;

  public static final String SERIALIZED_NAME_COURT_SERVICE_EMAIL = "courtServiceEmail";
  @SerializedName(SERIALIZED_NAME_COURT_SERVICE_EMAIL)
  private String courtServiceEmail;

  public static final String SERIALIZED_NAME_DISCIPLINARY_HISTORY_ARRAY = "disciplinaryHistoryArray";
  @SerializedName(SERIALIZED_NAME_DISCIPLINARY_HISTORY_ARRAY)
  private List<BarSourceDataDisciplinaryHistoryArrayInner> disciplinaryHistoryArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISCIPLINE_SUMMARIES_ARRAY = "disciplineSummariesArray";
  @SerializedName(SERIALIZED_NAME_DISCIPLINE_SUMMARIES_ARRAY)
  private List<BarSourceDataDisciplineSummariesArrayInner> disciplineSummariesArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISMISSALS_ARRAY = "dismissalsArray";
  @SerializedName(SERIALIZED_NAME_DISMISSALS_ARRAY)
  private List<String> dismissalsArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISTRICT = "district";
  @SerializedName(SERIALIZED_NAME_DISTRICT)
  private String district;

  public static final String SERIALIZED_NAME_EMPLOYMENT_HISTORY_ARRAY = "employmentHistoryArray";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_HISTORY_ARRAY)
  private List<BarSourceDataEmploymentHistoryArrayInner> employmentHistoryArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expirationDate";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private OffsetDateTime expirationDate;

  public static final String SERIALIZED_NAME_FEES_OPTIONS_ARRAY = "feesOptionsArray";
  @SerializedName(SERIALIZED_NAME_FEES_OPTIONS_ARRAY)
  private List<BarSourceDataFeesOptionsArrayInner> feesOptionsArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_FIRM_SIZE = "firmSize";
  @SerializedName(SERIALIZED_NAME_FIRM_SIZE)
  private String firmSize;

  public static final String SERIALIZED_NAME_FIRM_WEBSITE = "firmWebsite";
  @SerializedName(SERIALIZED_NAME_FIRM_WEBSITE)
  private String firmWebsite;

  public static final String SERIALIZED_NAME_FIRST_ADMITTED_DATE = "firstAdmittedDate";
  @SerializedName(SERIALIZED_NAME_FIRST_ADMITTED_DATE)
  private OffsetDateTime firstAdmittedDate;

  public static final String SERIALIZED_NAME_FIRST_ADMITTED_YEAR = "firstAdmittedYear";
  @SerializedName(SERIALIZED_NAME_FIRST_ADMITTED_YEAR)
  private Integer firstAdmittedYear;

  public static final String SERIALIZED_NAME_HOME_COUNTY = "homeCounty";
  @SerializedName(SERIALIZED_NAME_HOME_COUNTY)
  private String homeCounty;

  public static final String SERIALIZED_NAME_IN_GOOD_STANDING = "inGoodStanding";
  @SerializedName(SERIALIZED_NAME_IN_GOOD_STANDING)
  private String inGoodStanding;

  public static final String SERIALIZED_NAME_INSURANCE = "insurance";
  @SerializedName(SERIALIZED_NAME_INSURANCE)
  private String insurance;

  public static final String SERIALIZED_NAME_INVOLVEMENTS_ARRAY = "involvementsArray";
  @SerializedName(SERIALIZED_NAME_INVOLVEMENTS_ARRAY)
  private List<BarSourceDataInvolvementsArrayInner> involvementsArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_JUDICIAL_DISTRICT = "judicialDistrict";
  @SerializedName(SERIALIZED_NAME_JUDICIAL_DISTRICT)
  private String judicialDistrict;

  public static final String SERIALIZED_NAME_JURIS_TYPE = "jurisType";
  @SerializedName(SERIALIZED_NAME_JURIS_TYPE)
  private String jurisType;

  public static final String SERIALIZED_NAME_LANGUAGES_ARRAY = "languagesArray";
  @SerializedName(SERIALIZED_NAME_LANGUAGES_ARRAY)
  private List<String> languagesArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_RENEWAL_DATE = "lastRenewalDate";
  @SerializedName(SERIALIZED_NAME_LAST_RENEWAL_DATE)
  private OffsetDateTime lastRenewalDate;

  public static final String SERIALIZED_NAME_LAW_SCHOOL_ARRAY = "lawSchoolArray";
  @SerializedName(SERIALIZED_NAME_LAW_SCHOOL_ARRAY)
  private List<BarSourceDataLawSchoolArrayInner> lawSchoolArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_LEGAL_SPECIALITY_ARRAY = "legalSpecialityArray";
  @SerializedName(SERIALIZED_NAME_LEGAL_SPECIALITY_ARRAY)
  private List<String> legalSpecialityArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "licenseType";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  private String licenseType;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private BarSourceDataName name;

  public static final String SERIALIZED_NAME_NEXT_REGISTRATION = "nextRegistration";
  @SerializedName(SERIALIZED_NAME_NEXT_REGISTRATION)
  private OffsetDateTime nextRegistration;

  public static final String SERIALIZED_NAME_NEXT_RENEWAL_DATE = "nextRenewalDate";
  @SerializedName(SERIALIZED_NAME_NEXT_RENEWAL_DATE)
  private OffsetDateTime nextRenewalDate;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object = "BarSourceData";

  public static final String SERIALIZED_NAME_OPEN_ACTION_STATUS_ARRAY = "openActionStatusArray";
  @SerializedName(SERIALIZED_NAME_OPEN_ACTION_STATUS_ARRAY)
  private List<BarSourceDataOpenActionStatusArrayInner> openActionStatusArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_OTHER_JURISDICTION_ARRAY = "otherJurisdictionArray";
  @SerializedName(SERIALIZED_NAME_OTHER_JURISDICTION_ARRAY)
  private List<BarSourceDataOtherJurisdictionArrayInner> otherJurisdictionArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_OTHER_NAME_ARRAY = "otherNameArray";
  @SerializedName(SERIALIZED_NAME_OTHER_NAME_ARRAY)
  private List<String> otherNameArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARISH = "parish";
  @SerializedName(SERIALIZED_NAME_PARISH)
  private String parish;

  public static final String SERIALIZED_NAME_PENDING_PROCEEDING_ARRAY = "pendingProceedingArray";
  @SerializedName(SERIALIZED_NAME_PENDING_PROCEEDING_ARRAY)
  private List<String> pendingProceedingArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_PRACTICE_AREA_ARRAY = "practiceAreaArray";
  @SerializedName(SERIALIZED_NAME_PRACTICE_AREA_ARRAY)
  private List<String> practiceAreaArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRACTICE_LOCATION_ARRAY = "practiceLocationArray";
  @SerializedName(SERIALIZED_NAME_PRACTICE_LOCATION_ARRAY)
  private List<String> practiceLocationArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRIVATE_LAW_PRACTICE = "privateLawPractice";
  @SerializedName(SERIALIZED_NAME_PRIVATE_LAW_PRACTICE)
  private String privateLawPractice;

  public static final String SERIALIZED_NAME_PROFILE_LAST_CERTIFIED = "profileLastCertified";
  @SerializedName(SERIALIZED_NAME_PROFILE_LAST_CERTIFIED)
  private OffsetDateTime profileLastCertified;

  public static final String SERIALIZED_NAME_PUBLIC_HEARING_ARRAY = "publicHearingArray";
  @SerializedName(SERIALIZED_NAME_PUBLIC_HEARING_ARRAY)
  private List<BarSourceDataPublicHearingArrayInner> publicHearingArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_REASON_FOR_INACTIVATION = "reasonForInactivation";
  @SerializedName(SERIALIZED_NAME_REASON_FOR_INACTIVATION)
  private BarSourceDataReasonForInactivation reasonForInactivation;

  public static final String SERIALIZED_NAME_RELATED_CASES_ARRAY = "relatedCasesArray";
  @SerializedName(SERIALIZED_NAME_RELATED_CASES_ARRAY)
  private List<BarSourceDataRelatedCasesArrayInner> relatedCasesArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_SECTIONS_ARRAY = "sectionsArray";
  @SerializedName(SERIALIZED_NAME_SECTIONS_ARRAY)
  private List<String> sectionsArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICES_ARRAY = "servicesArray";
  @SerializedName(SERIALIZED_NAME_SERVICES_ARRAY)
  private List<String> servicesArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOURCE_INFO = "sourceInfo";
  @SerializedName(SERIALIZED_NAME_SOURCE_INFO)
  private BarSourceDataSourceInfo sourceInfo;

  public static final String SERIALIZED_NAME_STATEWIDE_GRIEVANCE_COMMITTEE_HISTORY_ARRAY = "statewideGrievanceCommitteeHistoryArray";
  @SerializedName(SERIALIZED_NAME_STATEWIDE_GRIEVANCE_COMMITTEE_HISTORY_ARRAY)
  private List<BarSourceDataStatewideGrievanceCommitteeHistoryArrayInner> statewideGrievanceCommitteeHistoryArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_DATE = "statusDate";
  @SerializedName(SERIALIZED_NAME_STATUS_DATE)
  private OffsetDateTime statusDate;

  public static final String SERIALIZED_NAME_STATUS_HINT = "statusHint";
  @SerializedName(SERIALIZED_NAME_STATUS_HINT)
  private String statusHint;

  public static final String SERIALIZED_NAME_STATUS_HISTORY_ARRAY = "statusHistoryArray";
  @SerializedName(SERIALIZED_NAME_STATUS_HISTORY_ARRAY)
  private List<BarSourceDataStatusHistoryArrayInner> statusHistoryArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEN_YEAR_DISCIPLINE_ARRAY = "tenYearDisciplineArray";
  @SerializedName(SERIALIZED_NAME_TEN_YEAR_DISCIPLINE_ARRAY)
  private List<BarSourceDataTenYearDisciplineArrayInner> tenYearDisciplineArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_UNDERGRADUATE_SCHOOL = "undergraduateSchool";
  @SerializedName(SERIALIZED_NAME_UNDERGRADUATE_SCHOOL)
  private String undergraduateSchool;

  public static final String SERIALIZED_NAME_YEARS_OF_PRACTICE = "yearsOfPractice";
  @SerializedName(SERIALIZED_NAME_YEARS_OF_PRACTICE)
  private String yearsOfPractice;

  public BarSourceData() {
  }

  public BarSourceData administrativeActionsArray(List<BarSourceDataAdministrativeActionsArrayInner> administrativeActionsArray) {
    
    
    
    
    this.administrativeActionsArray = administrativeActionsArray;
    return this;
  }

  public BarSourceData addAdministrativeActionsArrayItem(BarSourceDataAdministrativeActionsArrayInner administrativeActionsArrayItem) {
    this.administrativeActionsArray.add(administrativeActionsArrayItem);
    return this;
  }

   /**
   * Get administrativeActionsArray
   * @return administrativeActionsArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataAdministrativeActionsArrayInner> getAdministrativeActionsArray() {
    return administrativeActionsArray;
  }


  public void setAdministrativeActionsArray(List<BarSourceDataAdministrativeActionsArrayInner> administrativeActionsArray) {
    
    
    
    this.administrativeActionsArray = administrativeActionsArray;
  }


  public BarSourceData admissionType(String admissionType) {
    
    
    
    
    this.admissionType = admissionType;
    return this;
  }

   /**
   * Get admissionType
   * @return admissionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getAdmissionType() {
    return admissionType;
  }


  public void setAdmissionType(String admissionType) {
    
    
    
    this.admissionType = admissionType;
  }


  public BarSourceData advancedDegreeArray(List<BarSourceDataAdvancedDegreeArrayInner> advancedDegreeArray) {
    
    
    
    
    this.advancedDegreeArray = advancedDegreeArray;
    return this;
  }

  public BarSourceData addAdvancedDegreeArrayItem(BarSourceDataAdvancedDegreeArrayInner advancedDegreeArrayItem) {
    this.advancedDegreeArray.add(advancedDegreeArrayItem);
    return this;
  }

   /**
   * Get advancedDegreeArray
   * @return advancedDegreeArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataAdvancedDegreeArrayInner> getAdvancedDegreeArray() {
    return advancedDegreeArray;
  }


  public void setAdvancedDegreeArray(List<BarSourceDataAdvancedDegreeArrayInner> advancedDegreeArray) {
    
    
    
    this.advancedDegreeArray = advancedDegreeArray;
  }


  public BarSourceData appellateCourtDistrict(String appellateCourtDistrict) {
    
    
    
    
    this.appellateCourtDistrict = appellateCourtDistrict;
    return this;
  }

   /**
   * Get appellateCourtDistrict
   * @return appellateCourtDistrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getAppellateCourtDistrict() {
    return appellateCourtDistrict;
  }


  public void setAppellateCourtDistrict(String appellateCourtDistrict) {
    
    
    
    this.appellateCourtDistrict = appellateCourtDistrict;
  }


  public BarSourceData appellateDivisionDepartment(String appellateDivisionDepartment) {
    
    
    
    
    this.appellateDivisionDepartment = appellateDivisionDepartment;
    return this;
  }

   /**
   * Get appellateDivisionDepartment
   * @return appellateDivisionDepartment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getAppellateDivisionDepartment() {
    return appellateDivisionDepartment;
  }


  public void setAppellateDivisionDepartment(String appellateDivisionDepartment) {
    
    
    
    this.appellateDivisionDepartment = appellateDivisionDepartment;
  }


  public BarSourceData attorneyGroup(String attorneyGroup) {
    
    
    
    
    this.attorneyGroup = attorneyGroup;
    return this;
  }

   /**
   * Get attorneyGroup
   * @return attorneyGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getAttorneyGroup() {
    return attorneyGroup;
  }


  public void setAttorneyGroup(String attorneyGroup) {
    
    
    
    this.attorneyGroup = attorneyGroup;
  }


  public BarSourceData authorized(String authorized) {
    
    
    
    
    this.authorized = authorized;
    return this;
  }

   /**
   * Get authorized
   * @return authorized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getAuthorized() {
    return authorized;
  }


  public void setAuthorized(String authorized) {
    
    
    
    this.authorized = authorized;
  }


  public BarSourceData barLawFirm(String barLawFirm) {
    
    
    
    
    this.barLawFirm = barLawFirm;
    return this;
  }

   /**
   * Get barLawFirm
   * @return barLawFirm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getBarLawFirm() {
    return barLawFirm;
  }


  public void setBarLawFirm(String barLawFirm) {
    
    
    
    this.barLawFirm = barLawFirm;
  }


  public BarSourceData barServiceClass(String barServiceClass) {
    
    
    
    
    this.barServiceClass = barServiceClass;
    return this;
  }

   /**
   * Get barServiceClass
   * @return barServiceClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getBarServiceClass() {
    return barServiceClass;
  }


  public void setBarServiceClass(String barServiceClass) {
    
    
    
    this.barServiceClass = barServiceClass;
  }


  public BarSourceData barStatusArray(List<BarSourceDataBarStatusArrayInner> barStatusArray) {
    
    
    
    
    this.barStatusArray = barStatusArray;
    return this;
  }

  public BarSourceData addBarStatusArrayItem(BarSourceDataBarStatusArrayInner barStatusArrayItem) {
    this.barStatusArray.add(barStatusArrayItem);
    return this;
  }

   /**
   * Get barStatusArray
   * @return barStatusArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataBarStatusArrayInner> getBarStatusArray() {
    return barStatusArray;
  }


  public void setBarStatusArray(List<BarSourceDataBarStatusArrayInner> barStatusArray) {
    
    
    
    this.barStatusArray = barStatusArray;
  }


  public BarSourceData bio(String bio) {
    
    
    
    
    this.bio = bio;
    return this;
  }

   /**
   * Get bio
   * @return bio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getBio() {
    return bio;
  }


  public void setBio(String bio) {
    
    
    
    this.bio = bio;
  }


  public BarSourceData boardCertificationsArray(List<BarSourceDataBoardCertificationsArrayInner> boardCertificationsArray) {
    
    
    
    
    this.boardCertificationsArray = boardCertificationsArray;
    return this;
  }

  public BarSourceData addBoardCertificationsArrayItem(BarSourceDataBoardCertificationsArrayInner boardCertificationsArrayItem) {
    this.boardCertificationsArray.add(boardCertificationsArrayItem);
    return this;
  }

   /**
   * Get boardCertificationsArray
   * @return boardCertificationsArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataBoardCertificationsArrayInner> getBoardCertificationsArray() {
    return boardCertificationsArray;
  }


  public void setBoardCertificationsArray(List<BarSourceDataBoardCertificationsArrayInner> boardCertificationsArray) {
    
    
    
    this.boardCertificationsArray = boardCertificationsArray;
  }


  public BarSourceData boardDistrict(String boardDistrict) {
    
    
    
    
    this.boardDistrict = boardDistrict;
    return this;
  }

   /**
   * Get boardDistrict
   * @return boardDistrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getBoardDistrict() {
    return boardDistrict;
  }


  public void setBoardDistrict(String boardDistrict) {
    
    
    
    this.boardDistrict = boardDistrict;
  }


  public BarSourceData circuit(String circuit) {
    
    
    
    
    this.circuit = circuit;
    return this;
  }

   /**
   * Get circuit
   * @return circuit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getCircuit() {
    return circuit;
  }


  public void setCircuit(String circuit) {
    
    
    
    this.circuit = circuit;
  }


  public BarSourceData clientsRepresentedArray(List<String> clientsRepresentedArray) {
    
    
    
    
    this.clientsRepresentedArray = clientsRepresentedArray;
    return this;
  }

  public BarSourceData addClientsRepresentedArrayItem(String clientsRepresentedArrayItem) {
    this.clientsRepresentedArray.add(clientsRepresentedArrayItem);
    return this;
  }

   /**
   * Get clientsRepresentedArray
   * @return clientsRepresentedArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getClientsRepresentedArray() {
    return clientsRepresentedArray;
  }


  public void setClientsRepresentedArray(List<String> clientsRepresentedArray) {
    
    
    
    this.clientsRepresentedArray = clientsRepresentedArray;
  }


  public BarSourceData comments(String comments) {
    
    
    
    
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    
    
    
    this.comments = comments;
  }


  public BarSourceData committeesArray(List<BarSourceDataCommitteesArrayInner> committeesArray) {
    
    
    
    
    this.committeesArray = committeesArray;
    return this;
  }

  public BarSourceData addCommitteesArrayItem(BarSourceDataCommitteesArrayInner committeesArrayItem) {
    this.committeesArray.add(committeesArrayItem);
    return this;
  }

   /**
   * Get committeesArray
   * @return committeesArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataCommitteesArrayInner> getCommitteesArray() {
    return committeesArray;
  }


  public void setCommitteesArray(List<BarSourceDataCommitteesArrayInner> committeesArray) {
    
    
    
    this.committeesArray = committeesArray;
  }


  public BarSourceData courtHistoryArray(List<BarSourceDataCourtHistoryArrayInner> courtHistoryArray) {
    
    
    
    
    this.courtHistoryArray = courtHistoryArray;
    return this;
  }

  public BarSourceData addCourtHistoryArrayItem(BarSourceDataCourtHistoryArrayInner courtHistoryArrayItem) {
    this.courtHistoryArray.add(courtHistoryArrayItem);
    return this;
  }

   /**
   * Get courtHistoryArray
   * @return courtHistoryArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataCourtHistoryArrayInner> getCourtHistoryArray() {
    return courtHistoryArray;
  }


  public void setCourtHistoryArray(List<BarSourceDataCourtHistoryArrayInner> courtHistoryArray) {
    
    
    
    this.courtHistoryArray = courtHistoryArray;
  }


  public BarSourceData courtOfAdmissions(BarSourceDataCourtOfAdmissions courtOfAdmissions) {
    
    
    
    
    this.courtOfAdmissions = courtOfAdmissions;
    return this;
  }

   /**
   * Get courtOfAdmissions
   * @return courtOfAdmissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public BarSourceDataCourtOfAdmissions getCourtOfAdmissions() {
    return courtOfAdmissions;
  }


  public void setCourtOfAdmissions(BarSourceDataCourtOfAdmissions courtOfAdmissions) {
    
    
    
    this.courtOfAdmissions = courtOfAdmissions;
  }


  public BarSourceData courtServiceEmail(String courtServiceEmail) {
    
    
    
    
    this.courtServiceEmail = courtServiceEmail;
    return this;
  }

   /**
   * Get courtServiceEmail
   * @return courtServiceEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getCourtServiceEmail() {
    return courtServiceEmail;
  }


  public void setCourtServiceEmail(String courtServiceEmail) {
    
    
    
    this.courtServiceEmail = courtServiceEmail;
  }


  public BarSourceData disciplinaryHistoryArray(List<BarSourceDataDisciplinaryHistoryArrayInner> disciplinaryHistoryArray) {
    
    
    
    
    this.disciplinaryHistoryArray = disciplinaryHistoryArray;
    return this;
  }

  public BarSourceData addDisciplinaryHistoryArrayItem(BarSourceDataDisciplinaryHistoryArrayInner disciplinaryHistoryArrayItem) {
    this.disciplinaryHistoryArray.add(disciplinaryHistoryArrayItem);
    return this;
  }

   /**
   * Get disciplinaryHistoryArray
   * @return disciplinaryHistoryArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataDisciplinaryHistoryArrayInner> getDisciplinaryHistoryArray() {
    return disciplinaryHistoryArray;
  }


  public void setDisciplinaryHistoryArray(List<BarSourceDataDisciplinaryHistoryArrayInner> disciplinaryHistoryArray) {
    
    
    
    this.disciplinaryHistoryArray = disciplinaryHistoryArray;
  }


  public BarSourceData disciplineSummariesArray(List<BarSourceDataDisciplineSummariesArrayInner> disciplineSummariesArray) {
    
    
    
    
    this.disciplineSummariesArray = disciplineSummariesArray;
    return this;
  }

  public BarSourceData addDisciplineSummariesArrayItem(BarSourceDataDisciplineSummariesArrayInner disciplineSummariesArrayItem) {
    this.disciplineSummariesArray.add(disciplineSummariesArrayItem);
    return this;
  }

   /**
   * Get disciplineSummariesArray
   * @return disciplineSummariesArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataDisciplineSummariesArrayInner> getDisciplineSummariesArray() {
    return disciplineSummariesArray;
  }


  public void setDisciplineSummariesArray(List<BarSourceDataDisciplineSummariesArrayInner> disciplineSummariesArray) {
    
    
    
    this.disciplineSummariesArray = disciplineSummariesArray;
  }


  public BarSourceData dismissalsArray(List<String> dismissalsArray) {
    
    
    
    
    this.dismissalsArray = dismissalsArray;
    return this;
  }

  public BarSourceData addDismissalsArrayItem(String dismissalsArrayItem) {
    this.dismissalsArray.add(dismissalsArrayItem);
    return this;
  }

   /**
   * Get dismissalsArray
   * @return dismissalsArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getDismissalsArray() {
    return dismissalsArray;
  }


  public void setDismissalsArray(List<String> dismissalsArray) {
    
    
    
    this.dismissalsArray = dismissalsArray;
  }


  public BarSourceData district(String district) {
    
    
    
    
    this.district = district;
    return this;
  }

   /**
   * Get district
   * @return district
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getDistrict() {
    return district;
  }


  public void setDistrict(String district) {
    
    
    
    this.district = district;
  }


  public BarSourceData employmentHistoryArray(List<BarSourceDataEmploymentHistoryArrayInner> employmentHistoryArray) {
    
    
    
    
    this.employmentHistoryArray = employmentHistoryArray;
    return this;
  }

  public BarSourceData addEmploymentHistoryArrayItem(BarSourceDataEmploymentHistoryArrayInner employmentHistoryArrayItem) {
    this.employmentHistoryArray.add(employmentHistoryArrayItem);
    return this;
  }

   /**
   * Get employmentHistoryArray
   * @return employmentHistoryArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataEmploymentHistoryArrayInner> getEmploymentHistoryArray() {
    return employmentHistoryArray;
  }


  public void setEmploymentHistoryArray(List<BarSourceDataEmploymentHistoryArrayInner> employmentHistoryArray) {
    
    
    
    this.employmentHistoryArray = employmentHistoryArray;
  }


  public BarSourceData expirationDate(OffsetDateTime expirationDate) {
    
    
    
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(OffsetDateTime expirationDate) {
    
    
    
    this.expirationDate = expirationDate;
  }


  public BarSourceData feesOptionsArray(List<BarSourceDataFeesOptionsArrayInner> feesOptionsArray) {
    
    
    
    
    this.feesOptionsArray = feesOptionsArray;
    return this;
  }

  public BarSourceData addFeesOptionsArrayItem(BarSourceDataFeesOptionsArrayInner feesOptionsArrayItem) {
    this.feesOptionsArray.add(feesOptionsArrayItem);
    return this;
  }

   /**
   * Get feesOptionsArray
   * @return feesOptionsArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataFeesOptionsArrayInner> getFeesOptionsArray() {
    return feesOptionsArray;
  }


  public void setFeesOptionsArray(List<BarSourceDataFeesOptionsArrayInner> feesOptionsArray) {
    
    
    
    this.feesOptionsArray = feesOptionsArray;
  }


  public BarSourceData firmSize(String firmSize) {
    
    
    
    
    this.firmSize = firmSize;
    return this;
  }

   /**
   * Get firmSize
   * @return firmSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getFirmSize() {
    return firmSize;
  }


  public void setFirmSize(String firmSize) {
    
    
    
    this.firmSize = firmSize;
  }


  public BarSourceData firmWebsite(String firmWebsite) {
    
    
    
    
    this.firmWebsite = firmWebsite;
    return this;
  }

   /**
   * Get firmWebsite
   * @return firmWebsite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getFirmWebsite() {
    return firmWebsite;
  }


  public void setFirmWebsite(String firmWebsite) {
    
    
    
    this.firmWebsite = firmWebsite;
  }


  public BarSourceData firstAdmittedDate(OffsetDateTime firstAdmittedDate) {
    
    
    
    
    this.firstAdmittedDate = firstAdmittedDate;
    return this;
  }

   /**
   * The firstAdmittedDate is the date when an attorney was admitted to the bar for the very first time regardless of which U.S state.
   * @return firstAdmittedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The firstAdmittedDate is the date when an attorney was admitted to the bar for the very first time regardless of which U.S state.")

  public OffsetDateTime getFirstAdmittedDate() {
    return firstAdmittedDate;
  }


  public void setFirstAdmittedDate(OffsetDateTime firstAdmittedDate) {
    
    
    
    this.firstAdmittedDate = firstAdmittedDate;
  }


  public BarSourceData firstAdmittedYear(Integer firstAdmittedYear) {
    
    
    
    
    this.firstAdmittedYear = firstAdmittedYear;
    return this;
  }

   /**
   * Get firstAdmittedYear
   * @return firstAdmittedYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Integer getFirstAdmittedYear() {
    return firstAdmittedYear;
  }


  public void setFirstAdmittedYear(Integer firstAdmittedYear) {
    
    
    
    this.firstAdmittedYear = firstAdmittedYear;
  }


  public BarSourceData homeCounty(String homeCounty) {
    
    
    
    
    this.homeCounty = homeCounty;
    return this;
  }

   /**
   * Get homeCounty
   * @return homeCounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getHomeCounty() {
    return homeCounty;
  }


  public void setHomeCounty(String homeCounty) {
    
    
    
    this.homeCounty = homeCounty;
  }


  public BarSourceData inGoodStanding(String inGoodStanding) {
    
    
    
    
    this.inGoodStanding = inGoodStanding;
    return this;
  }

   /**
   * Get inGoodStanding
   * @return inGoodStanding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getInGoodStanding() {
    return inGoodStanding;
  }


  public void setInGoodStanding(String inGoodStanding) {
    
    
    
    this.inGoodStanding = inGoodStanding;
  }


  public BarSourceData insurance(String insurance) {
    
    
    
    
    this.insurance = insurance;
    return this;
  }

   /**
   * Get insurance
   * @return insurance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getInsurance() {
    return insurance;
  }


  public void setInsurance(String insurance) {
    
    
    
    this.insurance = insurance;
  }


  public BarSourceData involvementsArray(List<BarSourceDataInvolvementsArrayInner> involvementsArray) {
    
    
    
    
    this.involvementsArray = involvementsArray;
    return this;
  }

  public BarSourceData addInvolvementsArrayItem(BarSourceDataInvolvementsArrayInner involvementsArrayItem) {
    this.involvementsArray.add(involvementsArrayItem);
    return this;
  }

   /**
   * Get involvementsArray
   * @return involvementsArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataInvolvementsArrayInner> getInvolvementsArray() {
    return involvementsArray;
  }


  public void setInvolvementsArray(List<BarSourceDataInvolvementsArrayInner> involvementsArray) {
    
    
    
    this.involvementsArray = involvementsArray;
  }


  public BarSourceData judicialDistrict(String judicialDistrict) {
    
    
    
    
    this.judicialDistrict = judicialDistrict;
    return this;
  }

   /**
   * Get judicialDistrict
   * @return judicialDistrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getJudicialDistrict() {
    return judicialDistrict;
  }


  public void setJudicialDistrict(String judicialDistrict) {
    
    
    
    this.judicialDistrict = judicialDistrict;
  }


  public BarSourceData jurisType(String jurisType) {
    
    
    
    
    this.jurisType = jurisType;
    return this;
  }

   /**
   * Get jurisType
   * @return jurisType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getJurisType() {
    return jurisType;
  }


  public void setJurisType(String jurisType) {
    
    
    
    this.jurisType = jurisType;
  }


  public BarSourceData languagesArray(List<String> languagesArray) {
    
    
    
    
    this.languagesArray = languagesArray;
    return this;
  }

  public BarSourceData addLanguagesArrayItem(String languagesArrayItem) {
    this.languagesArray.add(languagesArrayItem);
    return this;
  }

   /**
   * Get languagesArray
   * @return languagesArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getLanguagesArray() {
    return languagesArray;
  }


  public void setLanguagesArray(List<String> languagesArray) {
    
    
    
    this.languagesArray = languagesArray;
  }


  public BarSourceData lastRenewalDate(OffsetDateTime lastRenewalDate) {
    
    
    
    
    this.lastRenewalDate = lastRenewalDate;
    return this;
  }

   /**
   * Get lastRenewalDate
   * @return lastRenewalDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getLastRenewalDate() {
    return lastRenewalDate;
  }


  public void setLastRenewalDate(OffsetDateTime lastRenewalDate) {
    
    
    
    this.lastRenewalDate = lastRenewalDate;
  }


  public BarSourceData lawSchoolArray(List<BarSourceDataLawSchoolArrayInner> lawSchoolArray) {
    
    
    
    
    this.lawSchoolArray = lawSchoolArray;
    return this;
  }

  public BarSourceData addLawSchoolArrayItem(BarSourceDataLawSchoolArrayInner lawSchoolArrayItem) {
    this.lawSchoolArray.add(lawSchoolArrayItem);
    return this;
  }

   /**
   * Get lawSchoolArray
   * @return lawSchoolArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataLawSchoolArrayInner> getLawSchoolArray() {
    return lawSchoolArray;
  }


  public void setLawSchoolArray(List<BarSourceDataLawSchoolArrayInner> lawSchoolArray) {
    
    
    
    this.lawSchoolArray = lawSchoolArray;
  }


  public BarSourceData legalSpecialityArray(List<String> legalSpecialityArray) {
    
    
    
    
    this.legalSpecialityArray = legalSpecialityArray;
    return this;
  }

  public BarSourceData addLegalSpecialityArrayItem(String legalSpecialityArrayItem) {
    this.legalSpecialityArray.add(legalSpecialityArrayItem);
    return this;
  }

   /**
   * Get legalSpecialityArray
   * @return legalSpecialityArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getLegalSpecialityArray() {
    return legalSpecialityArray;
  }


  public void setLegalSpecialityArray(List<String> legalSpecialityArray) {
    
    
    
    this.legalSpecialityArray = legalSpecialityArray;
  }


  public BarSourceData licenseType(String licenseType) {
    
    
    
    
    this.licenseType = licenseType;
    return this;
  }

   /**
   * Get licenseType
   * @return licenseType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getLicenseType() {
    return licenseType;
  }


  public void setLicenseType(String licenseType) {
    
    
    
    this.licenseType = licenseType;
  }


  public BarSourceData name(BarSourceDataName name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BarSourceDataName getName() {
    return name;
  }


  public void setName(BarSourceDataName name) {
    
    
    
    this.name = name;
  }


  public BarSourceData nextRegistration(OffsetDateTime nextRegistration) {
    
    
    
    
    this.nextRegistration = nextRegistration;
    return this;
  }

   /**
   * Get nextRegistration
   * @return nextRegistration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getNextRegistration() {
    return nextRegistration;
  }


  public void setNextRegistration(OffsetDateTime nextRegistration) {
    
    
    
    this.nextRegistration = nextRegistration;
  }


  public BarSourceData nextRenewalDate(OffsetDateTime nextRenewalDate) {
    
    
    
    
    this.nextRenewalDate = nextRenewalDate;
    return this;
  }

   /**
   * Get nextRenewalDate
   * @return nextRenewalDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getNextRenewalDate() {
    return nextRenewalDate;
  }


  public void setNextRenewalDate(OffsetDateTime nextRenewalDate) {
    
    
    
    this.nextRenewalDate = nextRenewalDate;
  }


  public BarSourceData _object(String _object) {
    
    
    
    
    this._object = _object;
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "BarSourceData", required = true, value = "")

  public String getObject() {
    return _object;
  }


  public void setObject(String _object) {
    
    
    
    this._object = _object;
  }


  public BarSourceData openActionStatusArray(List<BarSourceDataOpenActionStatusArrayInner> openActionStatusArray) {
    
    
    
    
    this.openActionStatusArray = openActionStatusArray;
    return this;
  }

  public BarSourceData addOpenActionStatusArrayItem(BarSourceDataOpenActionStatusArrayInner openActionStatusArrayItem) {
    this.openActionStatusArray.add(openActionStatusArrayItem);
    return this;
  }

   /**
   * Get openActionStatusArray
   * @return openActionStatusArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataOpenActionStatusArrayInner> getOpenActionStatusArray() {
    return openActionStatusArray;
  }


  public void setOpenActionStatusArray(List<BarSourceDataOpenActionStatusArrayInner> openActionStatusArray) {
    
    
    
    this.openActionStatusArray = openActionStatusArray;
  }


  public BarSourceData otherJurisdictionArray(List<BarSourceDataOtherJurisdictionArrayInner> otherJurisdictionArray) {
    
    
    
    
    this.otherJurisdictionArray = otherJurisdictionArray;
    return this;
  }

  public BarSourceData addOtherJurisdictionArrayItem(BarSourceDataOtherJurisdictionArrayInner otherJurisdictionArrayItem) {
    this.otherJurisdictionArray.add(otherJurisdictionArrayItem);
    return this;
  }

   /**
   * Get otherJurisdictionArray
   * @return otherJurisdictionArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataOtherJurisdictionArrayInner> getOtherJurisdictionArray() {
    return otherJurisdictionArray;
  }


  public void setOtherJurisdictionArray(List<BarSourceDataOtherJurisdictionArrayInner> otherJurisdictionArray) {
    
    
    
    this.otherJurisdictionArray = otherJurisdictionArray;
  }


  public BarSourceData otherNameArray(List<String> otherNameArray) {
    
    
    
    
    this.otherNameArray = otherNameArray;
    return this;
  }

  public BarSourceData addOtherNameArrayItem(String otherNameArrayItem) {
    this.otherNameArray.add(otherNameArrayItem);
    return this;
  }

   /**
   * Get otherNameArray
   * @return otherNameArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getOtherNameArray() {
    return otherNameArray;
  }


  public void setOtherNameArray(List<String> otherNameArray) {
    
    
    
    this.otherNameArray = otherNameArray;
  }


  public BarSourceData parish(String parish) {
    
    
    
    
    this.parish = parish;
    return this;
  }

   /**
   * Get parish
   * @return parish
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getParish() {
    return parish;
  }


  public void setParish(String parish) {
    
    
    
    this.parish = parish;
  }


  public BarSourceData pendingProceedingArray(List<String> pendingProceedingArray) {
    
    
    
    
    this.pendingProceedingArray = pendingProceedingArray;
    return this;
  }

  public BarSourceData addPendingProceedingArrayItem(String pendingProceedingArrayItem) {
    this.pendingProceedingArray.add(pendingProceedingArrayItem);
    return this;
  }

   /**
   * Get pendingProceedingArray
   * @return pendingProceedingArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getPendingProceedingArray() {
    return pendingProceedingArray;
  }


  public void setPendingProceedingArray(List<String> pendingProceedingArray) {
    
    
    
    this.pendingProceedingArray = pendingProceedingArray;
  }


  public BarSourceData position(String position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getPosition() {
    return position;
  }


  public void setPosition(String position) {
    
    
    
    this.position = position;
  }


  public BarSourceData practiceAreaArray(List<String> practiceAreaArray) {
    
    
    
    
    this.practiceAreaArray = practiceAreaArray;
    return this;
  }

  public BarSourceData addPracticeAreaArrayItem(String practiceAreaArrayItem) {
    this.practiceAreaArray.add(practiceAreaArrayItem);
    return this;
  }

   /**
   * Get practiceAreaArray
   * @return practiceAreaArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getPracticeAreaArray() {
    return practiceAreaArray;
  }


  public void setPracticeAreaArray(List<String> practiceAreaArray) {
    
    
    
    this.practiceAreaArray = practiceAreaArray;
  }


  public BarSourceData practiceLocationArray(List<String> practiceLocationArray) {
    
    
    
    
    this.practiceLocationArray = practiceLocationArray;
    return this;
  }

  public BarSourceData addPracticeLocationArrayItem(String practiceLocationArrayItem) {
    this.practiceLocationArray.add(practiceLocationArrayItem);
    return this;
  }

   /**
   * Get practiceLocationArray
   * @return practiceLocationArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getPracticeLocationArray() {
    return practiceLocationArray;
  }


  public void setPracticeLocationArray(List<String> practiceLocationArray) {
    
    
    
    this.practiceLocationArray = practiceLocationArray;
  }


  public BarSourceData privateLawPractice(String privateLawPractice) {
    
    
    
    
    this.privateLawPractice = privateLawPractice;
    return this;
  }

   /**
   * Get privateLawPractice
   * @return privateLawPractice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getPrivateLawPractice() {
    return privateLawPractice;
  }


  public void setPrivateLawPractice(String privateLawPractice) {
    
    
    
    this.privateLawPractice = privateLawPractice;
  }


  public BarSourceData profileLastCertified(OffsetDateTime profileLastCertified) {
    
    
    
    
    this.profileLastCertified = profileLastCertified;
    return this;
  }

   /**
   * Get profileLastCertified
   * @return profileLastCertified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getProfileLastCertified() {
    return profileLastCertified;
  }


  public void setProfileLastCertified(OffsetDateTime profileLastCertified) {
    
    
    
    this.profileLastCertified = profileLastCertified;
  }


  public BarSourceData publicHearingArray(List<BarSourceDataPublicHearingArrayInner> publicHearingArray) {
    
    
    
    
    this.publicHearingArray = publicHearingArray;
    return this;
  }

  public BarSourceData addPublicHearingArrayItem(BarSourceDataPublicHearingArrayInner publicHearingArrayItem) {
    this.publicHearingArray.add(publicHearingArrayItem);
    return this;
  }

   /**
   * Get publicHearingArray
   * @return publicHearingArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataPublicHearingArrayInner> getPublicHearingArray() {
    return publicHearingArray;
  }


  public void setPublicHearingArray(List<BarSourceDataPublicHearingArrayInner> publicHearingArray) {
    
    
    
    this.publicHearingArray = publicHearingArray;
  }


  public BarSourceData reasonForInactivation(BarSourceDataReasonForInactivation reasonForInactivation) {
    
    
    
    
    this.reasonForInactivation = reasonForInactivation;
    return this;
  }

   /**
   * Get reasonForInactivation
   * @return reasonForInactivation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public BarSourceDataReasonForInactivation getReasonForInactivation() {
    return reasonForInactivation;
  }


  public void setReasonForInactivation(BarSourceDataReasonForInactivation reasonForInactivation) {
    
    
    
    this.reasonForInactivation = reasonForInactivation;
  }


  public BarSourceData relatedCasesArray(List<BarSourceDataRelatedCasesArrayInner> relatedCasesArray) {
    
    
    
    
    this.relatedCasesArray = relatedCasesArray;
    return this;
  }

  public BarSourceData addRelatedCasesArrayItem(BarSourceDataRelatedCasesArrayInner relatedCasesArrayItem) {
    this.relatedCasesArray.add(relatedCasesArrayItem);
    return this;
  }

   /**
   * Get relatedCasesArray
   * @return relatedCasesArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataRelatedCasesArrayInner> getRelatedCasesArray() {
    return relatedCasesArray;
  }


  public void setRelatedCasesArray(List<BarSourceDataRelatedCasesArrayInner> relatedCasesArray) {
    
    
    
    this.relatedCasesArray = relatedCasesArray;
  }


  public BarSourceData sectionsArray(List<String> sectionsArray) {
    
    
    
    
    this.sectionsArray = sectionsArray;
    return this;
  }

  public BarSourceData addSectionsArrayItem(String sectionsArrayItem) {
    this.sectionsArray.add(sectionsArrayItem);
    return this;
  }

   /**
   * Get sectionsArray
   * @return sectionsArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getSectionsArray() {
    return sectionsArray;
  }


  public void setSectionsArray(List<String> sectionsArray) {
    
    
    
    this.sectionsArray = sectionsArray;
  }


  public BarSourceData servicesArray(List<String> servicesArray) {
    
    
    
    
    this.servicesArray = servicesArray;
    return this;
  }

  public BarSourceData addServicesArrayItem(String servicesArrayItem) {
    this.servicesArray.add(servicesArrayItem);
    return this;
  }

   /**
   * Get servicesArray
   * @return servicesArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<String> getServicesArray() {
    return servicesArray;
  }


  public void setServicesArray(List<String> servicesArray) {
    
    
    
    this.servicesArray = servicesArray;
  }


  public BarSourceData sourceInfo(BarSourceDataSourceInfo sourceInfo) {
    
    
    
    
    this.sourceInfo = sourceInfo;
    return this;
  }

   /**
   * Get sourceInfo
   * @return sourceInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public BarSourceDataSourceInfo getSourceInfo() {
    return sourceInfo;
  }


  public void setSourceInfo(BarSourceDataSourceInfo sourceInfo) {
    
    
    
    this.sourceInfo = sourceInfo;
  }


  public BarSourceData statewideGrievanceCommitteeHistoryArray(List<BarSourceDataStatewideGrievanceCommitteeHistoryArrayInner> statewideGrievanceCommitteeHistoryArray) {
    
    
    
    
    this.statewideGrievanceCommitteeHistoryArray = statewideGrievanceCommitteeHistoryArray;
    return this;
  }

  public BarSourceData addStatewideGrievanceCommitteeHistoryArrayItem(BarSourceDataStatewideGrievanceCommitteeHistoryArrayInner statewideGrievanceCommitteeHistoryArrayItem) {
    this.statewideGrievanceCommitteeHistoryArray.add(statewideGrievanceCommitteeHistoryArrayItem);
    return this;
  }

   /**
   * Get statewideGrievanceCommitteeHistoryArray
   * @return statewideGrievanceCommitteeHistoryArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataStatewideGrievanceCommitteeHistoryArrayInner> getStatewideGrievanceCommitteeHistoryArray() {
    return statewideGrievanceCommitteeHistoryArray;
  }


  public void setStatewideGrievanceCommitteeHistoryArray(List<BarSourceDataStatewideGrievanceCommitteeHistoryArrayInner> statewideGrievanceCommitteeHistoryArray) {
    
    
    
    this.statewideGrievanceCommitteeHistoryArray = statewideGrievanceCommitteeHistoryArray;
  }


  public BarSourceData status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public BarSourceData statusDate(OffsetDateTime statusDate) {
    
    
    
    
    this.statusDate = statusDate;
    return this;
  }

   /**
   * Get statusDate
   * @return statusDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getStatusDate() {
    return statusDate;
  }


  public void setStatusDate(OffsetDateTime statusDate) {
    
    
    
    this.statusDate = statusDate;
  }


  public BarSourceData statusHint(String statusHint) {
    
    
    
    
    this.statusHint = statusHint;
    return this;
  }

   /**
   * Get statusHint
   * @return statusHint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getStatusHint() {
    return statusHint;
  }


  public void setStatusHint(String statusHint) {
    
    
    
    this.statusHint = statusHint;
  }


  public BarSourceData statusHistoryArray(List<BarSourceDataStatusHistoryArrayInner> statusHistoryArray) {
    
    
    
    
    this.statusHistoryArray = statusHistoryArray;
    return this;
  }

  public BarSourceData addStatusHistoryArrayItem(BarSourceDataStatusHistoryArrayInner statusHistoryArrayItem) {
    this.statusHistoryArray.add(statusHistoryArrayItem);
    return this;
  }

   /**
   * Get statusHistoryArray
   * @return statusHistoryArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataStatusHistoryArrayInner> getStatusHistoryArray() {
    return statusHistoryArray;
  }


  public void setStatusHistoryArray(List<BarSourceDataStatusHistoryArrayInner> statusHistoryArray) {
    
    
    
    this.statusHistoryArray = statusHistoryArray;
  }


  public BarSourceData tenYearDisciplineArray(List<BarSourceDataTenYearDisciplineArrayInner> tenYearDisciplineArray) {
    
    
    
    
    this.tenYearDisciplineArray = tenYearDisciplineArray;
    return this;
  }

  public BarSourceData addTenYearDisciplineArrayItem(BarSourceDataTenYearDisciplineArrayInner tenYearDisciplineArrayItem) {
    this.tenYearDisciplineArray.add(tenYearDisciplineArrayItem);
    return this;
  }

   /**
   * Get tenYearDisciplineArray
   * @return tenYearDisciplineArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<BarSourceDataTenYearDisciplineArrayInner> getTenYearDisciplineArray() {
    return tenYearDisciplineArray;
  }


  public void setTenYearDisciplineArray(List<BarSourceDataTenYearDisciplineArrayInner> tenYearDisciplineArray) {
    
    
    
    this.tenYearDisciplineArray = tenYearDisciplineArray;
  }


  public BarSourceData undergraduateSchool(String undergraduateSchool) {
    
    
    
    
    this.undergraduateSchool = undergraduateSchool;
    return this;
  }

   /**
   * Get undergraduateSchool
   * @return undergraduateSchool
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getUndergraduateSchool() {
    return undergraduateSchool;
  }


  public void setUndergraduateSchool(String undergraduateSchool) {
    
    
    
    this.undergraduateSchool = undergraduateSchool;
  }


  public BarSourceData yearsOfPractice(String yearsOfPractice) {
    
    
    
    
    this.yearsOfPractice = yearsOfPractice;
    return this;
  }

   /**
   * Get yearsOfPractice
   * @return yearsOfPractice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getYearsOfPractice() {
    return yearsOfPractice;
  }


  public void setYearsOfPractice(String yearsOfPractice) {
    
    
    
    this.yearsOfPractice = yearsOfPractice;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BarSourceData instance itself
   */
  public BarSourceData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BarSourceData barSourceData = (BarSourceData) o;
    return Objects.equals(this.administrativeActionsArray, barSourceData.administrativeActionsArray) &&
        Objects.equals(this.admissionType, barSourceData.admissionType) &&
        Objects.equals(this.advancedDegreeArray, barSourceData.advancedDegreeArray) &&
        Objects.equals(this.appellateCourtDistrict, barSourceData.appellateCourtDistrict) &&
        Objects.equals(this.appellateDivisionDepartment, barSourceData.appellateDivisionDepartment) &&
        Objects.equals(this.attorneyGroup, barSourceData.attorneyGroup) &&
        Objects.equals(this.authorized, barSourceData.authorized) &&
        Objects.equals(this.barLawFirm, barSourceData.barLawFirm) &&
        Objects.equals(this.barServiceClass, barSourceData.barServiceClass) &&
        Objects.equals(this.barStatusArray, barSourceData.barStatusArray) &&
        Objects.equals(this.bio, barSourceData.bio) &&
        Objects.equals(this.boardCertificationsArray, barSourceData.boardCertificationsArray) &&
        Objects.equals(this.boardDistrict, barSourceData.boardDistrict) &&
        Objects.equals(this.circuit, barSourceData.circuit) &&
        Objects.equals(this.clientsRepresentedArray, barSourceData.clientsRepresentedArray) &&
        Objects.equals(this.comments, barSourceData.comments) &&
        Objects.equals(this.committeesArray, barSourceData.committeesArray) &&
        Objects.equals(this.courtHistoryArray, barSourceData.courtHistoryArray) &&
        Objects.equals(this.courtOfAdmissions, barSourceData.courtOfAdmissions) &&
        Objects.equals(this.courtServiceEmail, barSourceData.courtServiceEmail) &&
        Objects.equals(this.disciplinaryHistoryArray, barSourceData.disciplinaryHistoryArray) &&
        Objects.equals(this.disciplineSummariesArray, barSourceData.disciplineSummariesArray) &&
        Objects.equals(this.dismissalsArray, barSourceData.dismissalsArray) &&
        Objects.equals(this.district, barSourceData.district) &&
        Objects.equals(this.employmentHistoryArray, barSourceData.employmentHistoryArray) &&
        Objects.equals(this.expirationDate, barSourceData.expirationDate) &&
        Objects.equals(this.feesOptionsArray, barSourceData.feesOptionsArray) &&
        Objects.equals(this.firmSize, barSourceData.firmSize) &&
        Objects.equals(this.firmWebsite, barSourceData.firmWebsite) &&
        Objects.equals(this.firstAdmittedDate, barSourceData.firstAdmittedDate) &&
        Objects.equals(this.firstAdmittedYear, barSourceData.firstAdmittedYear) &&
        Objects.equals(this.homeCounty, barSourceData.homeCounty) &&
        Objects.equals(this.inGoodStanding, barSourceData.inGoodStanding) &&
        Objects.equals(this.insurance, barSourceData.insurance) &&
        Objects.equals(this.involvementsArray, barSourceData.involvementsArray) &&
        Objects.equals(this.judicialDistrict, barSourceData.judicialDistrict) &&
        Objects.equals(this.jurisType, barSourceData.jurisType) &&
        Objects.equals(this.languagesArray, barSourceData.languagesArray) &&
        Objects.equals(this.lastRenewalDate, barSourceData.lastRenewalDate) &&
        Objects.equals(this.lawSchoolArray, barSourceData.lawSchoolArray) &&
        Objects.equals(this.legalSpecialityArray, barSourceData.legalSpecialityArray) &&
        Objects.equals(this.licenseType, barSourceData.licenseType) &&
        Objects.equals(this.name, barSourceData.name) &&
        Objects.equals(this.nextRegistration, barSourceData.nextRegistration) &&
        Objects.equals(this.nextRenewalDate, barSourceData.nextRenewalDate) &&
        Objects.equals(this._object, barSourceData._object) &&
        Objects.equals(this.openActionStatusArray, barSourceData.openActionStatusArray) &&
        Objects.equals(this.otherJurisdictionArray, barSourceData.otherJurisdictionArray) &&
        Objects.equals(this.otherNameArray, barSourceData.otherNameArray) &&
        Objects.equals(this.parish, barSourceData.parish) &&
        Objects.equals(this.pendingProceedingArray, barSourceData.pendingProceedingArray) &&
        Objects.equals(this.position, barSourceData.position) &&
        Objects.equals(this.practiceAreaArray, barSourceData.practiceAreaArray) &&
        Objects.equals(this.practiceLocationArray, barSourceData.practiceLocationArray) &&
        Objects.equals(this.privateLawPractice, barSourceData.privateLawPractice) &&
        Objects.equals(this.profileLastCertified, barSourceData.profileLastCertified) &&
        Objects.equals(this.publicHearingArray, barSourceData.publicHearingArray) &&
        Objects.equals(this.reasonForInactivation, barSourceData.reasonForInactivation) &&
        Objects.equals(this.relatedCasesArray, barSourceData.relatedCasesArray) &&
        Objects.equals(this.sectionsArray, barSourceData.sectionsArray) &&
        Objects.equals(this.servicesArray, barSourceData.servicesArray) &&
        Objects.equals(this.sourceInfo, barSourceData.sourceInfo) &&
        Objects.equals(this.statewideGrievanceCommitteeHistoryArray, barSourceData.statewideGrievanceCommitteeHistoryArray) &&
        Objects.equals(this.status, barSourceData.status) &&
        Objects.equals(this.statusDate, barSourceData.statusDate) &&
        Objects.equals(this.statusHint, barSourceData.statusHint) &&
        Objects.equals(this.statusHistoryArray, barSourceData.statusHistoryArray) &&
        Objects.equals(this.tenYearDisciplineArray, barSourceData.tenYearDisciplineArray) &&
        Objects.equals(this.undergraduateSchool, barSourceData.undergraduateSchool) &&
        Objects.equals(this.yearsOfPractice, barSourceData.yearsOfPractice)&&
        Objects.equals(this.additionalProperties, barSourceData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(administrativeActionsArray, admissionType, advancedDegreeArray, appellateCourtDistrict, appellateDivisionDepartment, attorneyGroup, authorized, barLawFirm, barServiceClass, barStatusArray, bio, boardCertificationsArray, boardDistrict, circuit, clientsRepresentedArray, comments, committeesArray, courtHistoryArray, courtOfAdmissions, courtServiceEmail, disciplinaryHistoryArray, disciplineSummariesArray, dismissalsArray, district, employmentHistoryArray, expirationDate, feesOptionsArray, firmSize, firmWebsite, firstAdmittedDate, firstAdmittedYear, homeCounty, inGoodStanding, insurance, involvementsArray, judicialDistrict, jurisType, languagesArray, lastRenewalDate, lawSchoolArray, legalSpecialityArray, licenseType, name, nextRegistration, nextRenewalDate, _object, openActionStatusArray, otherJurisdictionArray, otherNameArray, parish, pendingProceedingArray, position, practiceAreaArray, practiceLocationArray, privateLawPractice, profileLastCertified, publicHearingArray, reasonForInactivation, relatedCasesArray, sectionsArray, servicesArray, sourceInfo, statewideGrievanceCommitteeHistoryArray, status, statusDate, statusHint, statusHistoryArray, tenYearDisciplineArray, undergraduateSchool, yearsOfPractice, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BarSourceData {\n");
    sb.append("    administrativeActionsArray: ").append(toIndentedString(administrativeActionsArray)).append("\n");
    sb.append("    admissionType: ").append(toIndentedString(admissionType)).append("\n");
    sb.append("    advancedDegreeArray: ").append(toIndentedString(advancedDegreeArray)).append("\n");
    sb.append("    appellateCourtDistrict: ").append(toIndentedString(appellateCourtDistrict)).append("\n");
    sb.append("    appellateDivisionDepartment: ").append(toIndentedString(appellateDivisionDepartment)).append("\n");
    sb.append("    attorneyGroup: ").append(toIndentedString(attorneyGroup)).append("\n");
    sb.append("    authorized: ").append(toIndentedString(authorized)).append("\n");
    sb.append("    barLawFirm: ").append(toIndentedString(barLawFirm)).append("\n");
    sb.append("    barServiceClass: ").append(toIndentedString(barServiceClass)).append("\n");
    sb.append("    barStatusArray: ").append(toIndentedString(barStatusArray)).append("\n");
    sb.append("    bio: ").append(toIndentedString(bio)).append("\n");
    sb.append("    boardCertificationsArray: ").append(toIndentedString(boardCertificationsArray)).append("\n");
    sb.append("    boardDistrict: ").append(toIndentedString(boardDistrict)).append("\n");
    sb.append("    circuit: ").append(toIndentedString(circuit)).append("\n");
    sb.append("    clientsRepresentedArray: ").append(toIndentedString(clientsRepresentedArray)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    committeesArray: ").append(toIndentedString(committeesArray)).append("\n");
    sb.append("    courtHistoryArray: ").append(toIndentedString(courtHistoryArray)).append("\n");
    sb.append("    courtOfAdmissions: ").append(toIndentedString(courtOfAdmissions)).append("\n");
    sb.append("    courtServiceEmail: ").append(toIndentedString(courtServiceEmail)).append("\n");
    sb.append("    disciplinaryHistoryArray: ").append(toIndentedString(disciplinaryHistoryArray)).append("\n");
    sb.append("    disciplineSummariesArray: ").append(toIndentedString(disciplineSummariesArray)).append("\n");
    sb.append("    dismissalsArray: ").append(toIndentedString(dismissalsArray)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    employmentHistoryArray: ").append(toIndentedString(employmentHistoryArray)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    feesOptionsArray: ").append(toIndentedString(feesOptionsArray)).append("\n");
    sb.append("    firmSize: ").append(toIndentedString(firmSize)).append("\n");
    sb.append("    firmWebsite: ").append(toIndentedString(firmWebsite)).append("\n");
    sb.append("    firstAdmittedDate: ").append(toIndentedString(firstAdmittedDate)).append("\n");
    sb.append("    firstAdmittedYear: ").append(toIndentedString(firstAdmittedYear)).append("\n");
    sb.append("    homeCounty: ").append(toIndentedString(homeCounty)).append("\n");
    sb.append("    inGoodStanding: ").append(toIndentedString(inGoodStanding)).append("\n");
    sb.append("    insurance: ").append(toIndentedString(insurance)).append("\n");
    sb.append("    involvementsArray: ").append(toIndentedString(involvementsArray)).append("\n");
    sb.append("    judicialDistrict: ").append(toIndentedString(judicialDistrict)).append("\n");
    sb.append("    jurisType: ").append(toIndentedString(jurisType)).append("\n");
    sb.append("    languagesArray: ").append(toIndentedString(languagesArray)).append("\n");
    sb.append("    lastRenewalDate: ").append(toIndentedString(lastRenewalDate)).append("\n");
    sb.append("    lawSchoolArray: ").append(toIndentedString(lawSchoolArray)).append("\n");
    sb.append("    legalSpecialityArray: ").append(toIndentedString(legalSpecialityArray)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nextRegistration: ").append(toIndentedString(nextRegistration)).append("\n");
    sb.append("    nextRenewalDate: ").append(toIndentedString(nextRenewalDate)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    openActionStatusArray: ").append(toIndentedString(openActionStatusArray)).append("\n");
    sb.append("    otherJurisdictionArray: ").append(toIndentedString(otherJurisdictionArray)).append("\n");
    sb.append("    otherNameArray: ").append(toIndentedString(otherNameArray)).append("\n");
    sb.append("    parish: ").append(toIndentedString(parish)).append("\n");
    sb.append("    pendingProceedingArray: ").append(toIndentedString(pendingProceedingArray)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    practiceAreaArray: ").append(toIndentedString(practiceAreaArray)).append("\n");
    sb.append("    practiceLocationArray: ").append(toIndentedString(practiceLocationArray)).append("\n");
    sb.append("    privateLawPractice: ").append(toIndentedString(privateLawPractice)).append("\n");
    sb.append("    profileLastCertified: ").append(toIndentedString(profileLastCertified)).append("\n");
    sb.append("    publicHearingArray: ").append(toIndentedString(publicHearingArray)).append("\n");
    sb.append("    reasonForInactivation: ").append(toIndentedString(reasonForInactivation)).append("\n");
    sb.append("    relatedCasesArray: ").append(toIndentedString(relatedCasesArray)).append("\n");
    sb.append("    sectionsArray: ").append(toIndentedString(sectionsArray)).append("\n");
    sb.append("    servicesArray: ").append(toIndentedString(servicesArray)).append("\n");
    sb.append("    sourceInfo: ").append(toIndentedString(sourceInfo)).append("\n");
    sb.append("    statewideGrievanceCommitteeHistoryArray: ").append(toIndentedString(statewideGrievanceCommitteeHistoryArray)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDate: ").append(toIndentedString(statusDate)).append("\n");
    sb.append("    statusHint: ").append(toIndentedString(statusHint)).append("\n");
    sb.append("    statusHistoryArray: ").append(toIndentedString(statusHistoryArray)).append("\n");
    sb.append("    tenYearDisciplineArray: ").append(toIndentedString(tenYearDisciplineArray)).append("\n");
    sb.append("    undergraduateSchool: ").append(toIndentedString(undergraduateSchool)).append("\n");
    sb.append("    yearsOfPractice: ").append(toIndentedString(yearsOfPractice)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("administrativeActionsArray");
    openapiFields.add("admissionType");
    openapiFields.add("advancedDegreeArray");
    openapiFields.add("appellateCourtDistrict");
    openapiFields.add("appellateDivisionDepartment");
    openapiFields.add("attorneyGroup");
    openapiFields.add("authorized");
    openapiFields.add("barLawFirm");
    openapiFields.add("barServiceClass");
    openapiFields.add("barStatusArray");
    openapiFields.add("bio");
    openapiFields.add("boardCertificationsArray");
    openapiFields.add("boardDistrict");
    openapiFields.add("circuit");
    openapiFields.add("clientsRepresentedArray");
    openapiFields.add("comments");
    openapiFields.add("committeesArray");
    openapiFields.add("courtHistoryArray");
    openapiFields.add("courtOfAdmissions");
    openapiFields.add("courtServiceEmail");
    openapiFields.add("disciplinaryHistoryArray");
    openapiFields.add("disciplineSummariesArray");
    openapiFields.add("dismissalsArray");
    openapiFields.add("district");
    openapiFields.add("employmentHistoryArray");
    openapiFields.add("expirationDate");
    openapiFields.add("feesOptionsArray");
    openapiFields.add("firmSize");
    openapiFields.add("firmWebsite");
    openapiFields.add("firstAdmittedDate");
    openapiFields.add("firstAdmittedYear");
    openapiFields.add("homeCounty");
    openapiFields.add("inGoodStanding");
    openapiFields.add("insurance");
    openapiFields.add("involvementsArray");
    openapiFields.add("judicialDistrict");
    openapiFields.add("jurisType");
    openapiFields.add("languagesArray");
    openapiFields.add("lastRenewalDate");
    openapiFields.add("lawSchoolArray");
    openapiFields.add("legalSpecialityArray");
    openapiFields.add("licenseType");
    openapiFields.add("name");
    openapiFields.add("nextRegistration");
    openapiFields.add("nextRenewalDate");
    openapiFields.add("object");
    openapiFields.add("openActionStatusArray");
    openapiFields.add("otherJurisdictionArray");
    openapiFields.add("otherNameArray");
    openapiFields.add("parish");
    openapiFields.add("pendingProceedingArray");
    openapiFields.add("position");
    openapiFields.add("practiceAreaArray");
    openapiFields.add("practiceLocationArray");
    openapiFields.add("privateLawPractice");
    openapiFields.add("profileLastCertified");
    openapiFields.add("publicHearingArray");
    openapiFields.add("reasonForInactivation");
    openapiFields.add("relatedCasesArray");
    openapiFields.add("sectionsArray");
    openapiFields.add("servicesArray");
    openapiFields.add("sourceInfo");
    openapiFields.add("statewideGrievanceCommitteeHistoryArray");
    openapiFields.add("status");
    openapiFields.add("statusDate");
    openapiFields.add("statusHint");
    openapiFields.add("statusHistoryArray");
    openapiFields.add("tenYearDisciplineArray");
    openapiFields.add("undergraduateSchool");
    openapiFields.add("yearsOfPractice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("administrativeActionsArray");
    openapiRequiredFields.add("admissionType");
    openapiRequiredFields.add("advancedDegreeArray");
    openapiRequiredFields.add("appellateCourtDistrict");
    openapiRequiredFields.add("appellateDivisionDepartment");
    openapiRequiredFields.add("attorneyGroup");
    openapiRequiredFields.add("authorized");
    openapiRequiredFields.add("barLawFirm");
    openapiRequiredFields.add("barServiceClass");
    openapiRequiredFields.add("barStatusArray");
    openapiRequiredFields.add("bio");
    openapiRequiredFields.add("boardCertificationsArray");
    openapiRequiredFields.add("boardDistrict");
    openapiRequiredFields.add("circuit");
    openapiRequiredFields.add("clientsRepresentedArray");
    openapiRequiredFields.add("comments");
    openapiRequiredFields.add("committeesArray");
    openapiRequiredFields.add("courtHistoryArray");
    openapiRequiredFields.add("courtOfAdmissions");
    openapiRequiredFields.add("courtServiceEmail");
    openapiRequiredFields.add("disciplinaryHistoryArray");
    openapiRequiredFields.add("disciplineSummariesArray");
    openapiRequiredFields.add("dismissalsArray");
    openapiRequiredFields.add("district");
    openapiRequiredFields.add("employmentHistoryArray");
    openapiRequiredFields.add("expirationDate");
    openapiRequiredFields.add("feesOptionsArray");
    openapiRequiredFields.add("firmSize");
    openapiRequiredFields.add("firmWebsite");
    openapiRequiredFields.add("firstAdmittedDate");
    openapiRequiredFields.add("firstAdmittedYear");
    openapiRequiredFields.add("homeCounty");
    openapiRequiredFields.add("inGoodStanding");
    openapiRequiredFields.add("insurance");
    openapiRequiredFields.add("involvementsArray");
    openapiRequiredFields.add("judicialDistrict");
    openapiRequiredFields.add("jurisType");
    openapiRequiredFields.add("languagesArray");
    openapiRequiredFields.add("lastRenewalDate");
    openapiRequiredFields.add("lawSchoolArray");
    openapiRequiredFields.add("legalSpecialityArray");
    openapiRequiredFields.add("licenseType");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("nextRegistration");
    openapiRequiredFields.add("nextRenewalDate");
    openapiRequiredFields.add("object");
    openapiRequiredFields.add("openActionStatusArray");
    openapiRequiredFields.add("otherJurisdictionArray");
    openapiRequiredFields.add("otherNameArray");
    openapiRequiredFields.add("parish");
    openapiRequiredFields.add("pendingProceedingArray");
    openapiRequiredFields.add("position");
    openapiRequiredFields.add("practiceAreaArray");
    openapiRequiredFields.add("practiceLocationArray");
    openapiRequiredFields.add("privateLawPractice");
    openapiRequiredFields.add("profileLastCertified");
    openapiRequiredFields.add("publicHearingArray");
    openapiRequiredFields.add("reasonForInactivation");
    openapiRequiredFields.add("relatedCasesArray");
    openapiRequiredFields.add("sectionsArray");
    openapiRequiredFields.add("servicesArray");
    openapiRequiredFields.add("sourceInfo");
    openapiRequiredFields.add("statewideGrievanceCommitteeHistoryArray");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("statusDate");
    openapiRequiredFields.add("statusHint");
    openapiRequiredFields.add("statusHistoryArray");
    openapiRequiredFields.add("tenYearDisciplineArray");
    openapiRequiredFields.add("undergraduateSchool");
    openapiRequiredFields.add("yearsOfPractice");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BarSourceData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BarSourceData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BarSourceData is not found in the empty JSON string", BarSourceData.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BarSourceData.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("administrativeActionsArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `administrativeActionsArray` to be an array in the JSON string but got `%s`", jsonObj.get("administrativeActionsArray").toString()));
      }

      JsonArray jsonArrayadministrativeActionsArray = jsonObj.getAsJsonArray("administrativeActionsArray");
      // validate the required field `administrativeActionsArray` (array)
      for (int i = 0; i < jsonArrayadministrativeActionsArray.size(); i++) {
        BarSourceDataAdministrativeActionsArrayInner.validateJsonObject(jsonArrayadministrativeActionsArray.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("admissionType").isJsonNull() && !jsonObj.get("admissionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `admissionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("admissionType").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("advancedDegreeArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `advancedDegreeArray` to be an array in the JSON string but got `%s`", jsonObj.get("advancedDegreeArray").toString()));
      }

      JsonArray jsonArrayadvancedDegreeArray = jsonObj.getAsJsonArray("advancedDegreeArray");
      // validate the required field `advancedDegreeArray` (array)
      for (int i = 0; i < jsonArrayadvancedDegreeArray.size(); i++) {
        BarSourceDataAdvancedDegreeArrayInner.validateJsonObject(jsonArrayadvancedDegreeArray.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("appellateCourtDistrict").isJsonNull() && !jsonObj.get("appellateCourtDistrict").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appellateCourtDistrict` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appellateCourtDistrict").toString()));
      }
      if (!jsonObj.get("appellateDivisionDepartment").isJsonNull() && !jsonObj.get("appellateDivisionDepartment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appellateDivisionDepartment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appellateDivisionDepartment").toString()));
      }
      if (!jsonObj.get("attorneyGroup").isJsonNull() && !jsonObj.get("attorneyGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attorneyGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attorneyGroup").toString()));
      }
      if (!jsonObj.get("authorized").isJsonNull() && !jsonObj.get("authorized").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorized` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorized").toString()));
      }
      if (!jsonObj.get("barLawFirm").isJsonNull() && !jsonObj.get("barLawFirm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barLawFirm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barLawFirm").toString()));
      }
      if (!jsonObj.get("barServiceClass").isJsonNull() && !jsonObj.get("barServiceClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `barServiceClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("barServiceClass").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("barStatusArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `barStatusArray` to be an array in the JSON string but got `%s`", jsonObj.get("barStatusArray").toString()));
      }

      JsonArray jsonArraybarStatusArray = jsonObj.getAsJsonArray("barStatusArray");
      // validate the required field `barStatusArray` (array)
      for (int i = 0; i < jsonArraybarStatusArray.size(); i++) {
        BarSourceDataBarStatusArrayInner.validateJsonObject(jsonArraybarStatusArray.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("bio").isJsonNull() && !jsonObj.get("bio").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bio` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bio").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("boardCertificationsArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `boardCertificationsArray` to be an array in the JSON string but got `%s`", jsonObj.get("boardCertificationsArray").toString()));
      }

      JsonArray jsonArrayboardCertificationsArray = jsonObj.getAsJsonArray("boardCertificationsArray");
      // validate the required field `boardCertificationsArray` (array)
      for (int i = 0; i < jsonArrayboardCertificationsArray.size(); i++) {
        BarSourceDataBoardCertificationsArrayInner.validateJsonObject(jsonArrayboardCertificationsArray.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("boardDistrict").isJsonNull() && !jsonObj.get("boardDistrict").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `boardDistrict` to be a primitive type in the JSON string but got `%s`", jsonObj.get("boardDistrict").toString()));
      }
      if (!jsonObj.get("circuit").isJsonNull() && !jsonObj.get("circuit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `circuit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("circuit").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("clientsRepresentedArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("clientsRepresentedArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientsRepresentedArray` to be an array in the JSON string but got `%s`", jsonObj.get("clientsRepresentedArray").toString()));
      }
      if (!jsonObj.get("comments").isJsonNull() && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("committeesArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `committeesArray` to be an array in the JSON string but got `%s`", jsonObj.get("committeesArray").toString()));
      }

      JsonArray jsonArraycommitteesArray = jsonObj.getAsJsonArray("committeesArray");
      // validate the required field `committeesArray` (array)
      for (int i = 0; i < jsonArraycommitteesArray.size(); i++) {
        BarSourceDataCommitteesArrayInner.validateJsonObject(jsonArraycommitteesArray.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("courtHistoryArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `courtHistoryArray` to be an array in the JSON string but got `%s`", jsonObj.get("courtHistoryArray").toString()));
      }

      JsonArray jsonArraycourtHistoryArray = jsonObj.getAsJsonArray("courtHistoryArray");
      // validate the required field `courtHistoryArray` (array)
      for (int i = 0; i < jsonArraycourtHistoryArray.size(); i++) {
        BarSourceDataCourtHistoryArrayInner.validateJsonObject(jsonArraycourtHistoryArray.get(i).getAsJsonObject());
      };
      // validate the required field `courtOfAdmissions`
      BarSourceDataCourtOfAdmissions.validateJsonObject(jsonObj.getAsJsonObject("courtOfAdmissions"));
      if (!jsonObj.get("courtServiceEmail").isJsonNull() && !jsonObj.get("courtServiceEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `courtServiceEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("courtServiceEmail").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("disciplinaryHistoryArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `disciplinaryHistoryArray` to be an array in the JSON string but got `%s`", jsonObj.get("disciplinaryHistoryArray").toString()));
      }

      JsonArray jsonArraydisciplinaryHistoryArray = jsonObj.getAsJsonArray("disciplinaryHistoryArray");
      // validate the required field `disciplinaryHistoryArray` (array)
      for (int i = 0; i < jsonArraydisciplinaryHistoryArray.size(); i++) {
        BarSourceDataDisciplinaryHistoryArrayInner.validateJsonObject(jsonArraydisciplinaryHistoryArray.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("disciplineSummariesArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `disciplineSummariesArray` to be an array in the JSON string but got `%s`", jsonObj.get("disciplineSummariesArray").toString()));
      }

      JsonArray jsonArraydisciplineSummariesArray = jsonObj.getAsJsonArray("disciplineSummariesArray");
      // validate the required field `disciplineSummariesArray` (array)
      for (int i = 0; i < jsonArraydisciplineSummariesArray.size(); i++) {
        BarSourceDataDisciplineSummariesArrayInner.validateJsonObject(jsonArraydisciplineSummariesArray.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("dismissalsArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("dismissalsArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dismissalsArray` to be an array in the JSON string but got `%s`", jsonObj.get("dismissalsArray").toString()));
      }
      if (!jsonObj.get("district").isJsonNull() && !jsonObj.get("district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("district").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("employmentHistoryArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentHistoryArray` to be an array in the JSON string but got `%s`", jsonObj.get("employmentHistoryArray").toString()));
      }

      JsonArray jsonArrayemploymentHistoryArray = jsonObj.getAsJsonArray("employmentHistoryArray");
      // validate the required field `employmentHistoryArray` (array)
      for (int i = 0; i < jsonArrayemploymentHistoryArray.size(); i++) {
        BarSourceDataEmploymentHistoryArrayInner.validateJsonObject(jsonArrayemploymentHistoryArray.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("feesOptionsArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `feesOptionsArray` to be an array in the JSON string but got `%s`", jsonObj.get("feesOptionsArray").toString()));
      }

      JsonArray jsonArrayfeesOptionsArray = jsonObj.getAsJsonArray("feesOptionsArray");
      // validate the required field `feesOptionsArray` (array)
      for (int i = 0; i < jsonArrayfeesOptionsArray.size(); i++) {
        BarSourceDataFeesOptionsArrayInner.validateJsonObject(jsonArrayfeesOptionsArray.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("firmSize").isJsonNull() && !jsonObj.get("firmSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firmSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firmSize").toString()));
      }
      if (!jsonObj.get("firmWebsite").isJsonNull() && !jsonObj.get("firmWebsite").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firmWebsite` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firmWebsite").toString()));
      }
      if (!jsonObj.get("homeCounty").isJsonNull() && !jsonObj.get("homeCounty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeCounty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeCounty").toString()));
      }
      if (!jsonObj.get("inGoodStanding").isJsonNull() && !jsonObj.get("inGoodStanding").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inGoodStanding` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inGoodStanding").toString()));
      }
      if (!jsonObj.get("insurance").isJsonNull() && !jsonObj.get("insurance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `insurance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("insurance").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("involvementsArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `involvementsArray` to be an array in the JSON string but got `%s`", jsonObj.get("involvementsArray").toString()));
      }

      JsonArray jsonArrayinvolvementsArray = jsonObj.getAsJsonArray("involvementsArray");
      // validate the required field `involvementsArray` (array)
      for (int i = 0; i < jsonArrayinvolvementsArray.size(); i++) {
        BarSourceDataInvolvementsArrayInner.validateJsonObject(jsonArrayinvolvementsArray.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("judicialDistrict").isJsonNull() && !jsonObj.get("judicialDistrict").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `judicialDistrict` to be a primitive type in the JSON string but got `%s`", jsonObj.get("judicialDistrict").toString()));
      }
      if (!jsonObj.get("jurisType").isJsonNull() && !jsonObj.get("jurisType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jurisType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jurisType").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("languagesArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("languagesArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `languagesArray` to be an array in the JSON string but got `%s`", jsonObj.get("languagesArray").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("lawSchoolArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `lawSchoolArray` to be an array in the JSON string but got `%s`", jsonObj.get("lawSchoolArray").toString()));
      }

      JsonArray jsonArraylawSchoolArray = jsonObj.getAsJsonArray("lawSchoolArray");
      // validate the required field `lawSchoolArray` (array)
      for (int i = 0; i < jsonArraylawSchoolArray.size(); i++) {
        BarSourceDataLawSchoolArrayInner.validateJsonObject(jsonArraylawSchoolArray.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("legalSpecialityArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("legalSpecialityArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalSpecialityArray` to be an array in the JSON string but got `%s`", jsonObj.get("legalSpecialityArray").toString()));
      }
      if (!jsonObj.get("licenseType").isJsonNull() && !jsonObj.get("licenseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `licenseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("licenseType").toString()));
      }
      // validate the required field `name`
      BarSourceDataName.validateJsonObject(jsonObj.getAsJsonObject("name"));
      if (!jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("openActionStatusArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `openActionStatusArray` to be an array in the JSON string but got `%s`", jsonObj.get("openActionStatusArray").toString()));
      }

      JsonArray jsonArrayopenActionStatusArray = jsonObj.getAsJsonArray("openActionStatusArray");
      // validate the required field `openActionStatusArray` (array)
      for (int i = 0; i < jsonArrayopenActionStatusArray.size(); i++) {
        BarSourceDataOpenActionStatusArrayInner.validateJsonObject(jsonArrayopenActionStatusArray.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("otherJurisdictionArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherJurisdictionArray` to be an array in the JSON string but got `%s`", jsonObj.get("otherJurisdictionArray").toString()));
      }

      JsonArray jsonArrayotherJurisdictionArray = jsonObj.getAsJsonArray("otherJurisdictionArray");
      // validate the required field `otherJurisdictionArray` (array)
      for (int i = 0; i < jsonArrayotherJurisdictionArray.size(); i++) {
        BarSourceDataOtherJurisdictionArrayInner.validateJsonObject(jsonArrayotherJurisdictionArray.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("otherNameArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("otherNameArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherNameArray` to be an array in the JSON string but got `%s`", jsonObj.get("otherNameArray").toString()));
      }
      if (!jsonObj.get("parish").isJsonNull() && !jsonObj.get("parish").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parish` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parish").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("pendingProceedingArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("pendingProceedingArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pendingProceedingArray` to be an array in the JSON string but got `%s`", jsonObj.get("pendingProceedingArray").toString()));
      }
      if (!jsonObj.get("position").isJsonNull() && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("practiceAreaArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("practiceAreaArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `practiceAreaArray` to be an array in the JSON string but got `%s`", jsonObj.get("practiceAreaArray").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("practiceLocationArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("practiceLocationArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `practiceLocationArray` to be an array in the JSON string but got `%s`", jsonObj.get("practiceLocationArray").toString()));
      }
      if (!jsonObj.get("privateLawPractice").isJsonNull() && !jsonObj.get("privateLawPractice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateLawPractice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateLawPractice").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("publicHearingArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicHearingArray` to be an array in the JSON string but got `%s`", jsonObj.get("publicHearingArray").toString()));
      }

      JsonArray jsonArraypublicHearingArray = jsonObj.getAsJsonArray("publicHearingArray");
      // validate the required field `publicHearingArray` (array)
      for (int i = 0; i < jsonArraypublicHearingArray.size(); i++) {
        BarSourceDataPublicHearingArrayInner.validateJsonObject(jsonArraypublicHearingArray.get(i).getAsJsonObject());
      };
      // validate the required field `reasonForInactivation`
      BarSourceDataReasonForInactivation.validateJsonObject(jsonObj.getAsJsonObject("reasonForInactivation"));
      // ensure the json data is an array
      if (!jsonObj.get("relatedCasesArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `relatedCasesArray` to be an array in the JSON string but got `%s`", jsonObj.get("relatedCasesArray").toString()));
      }

      JsonArray jsonArrayrelatedCasesArray = jsonObj.getAsJsonArray("relatedCasesArray");
      // validate the required field `relatedCasesArray` (array)
      for (int i = 0; i < jsonArrayrelatedCasesArray.size(); i++) {
        BarSourceDataRelatedCasesArrayInner.validateJsonObject(jsonArrayrelatedCasesArray.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("sectionsArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("sectionsArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sectionsArray` to be an array in the JSON string but got `%s`", jsonObj.get("sectionsArray").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("servicesArray") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("servicesArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `servicesArray` to be an array in the JSON string but got `%s`", jsonObj.get("servicesArray").toString()));
      }
      // validate the required field `sourceInfo`
      BarSourceDataSourceInfo.validateJsonObject(jsonObj.getAsJsonObject("sourceInfo"));
      // ensure the json data is an array
      if (!jsonObj.get("statewideGrievanceCommitteeHistoryArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `statewideGrievanceCommitteeHistoryArray` to be an array in the JSON string but got `%s`", jsonObj.get("statewideGrievanceCommitteeHistoryArray").toString()));
      }

      JsonArray jsonArraystatewideGrievanceCommitteeHistoryArray = jsonObj.getAsJsonArray("statewideGrievanceCommitteeHistoryArray");
      // validate the required field `statewideGrievanceCommitteeHistoryArray` (array)
      for (int i = 0; i < jsonArraystatewideGrievanceCommitteeHistoryArray.size(); i++) {
        BarSourceDataStatewideGrievanceCommitteeHistoryArrayInner.validateJsonObject(jsonArraystatewideGrievanceCommitteeHistoryArray.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("status").isJsonNull() && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (!jsonObj.get("statusHint").isJsonNull() && !jsonObj.get("statusHint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusHint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusHint").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("statusHistoryArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusHistoryArray` to be an array in the JSON string but got `%s`", jsonObj.get("statusHistoryArray").toString()));
      }

      JsonArray jsonArraystatusHistoryArray = jsonObj.getAsJsonArray("statusHistoryArray");
      // validate the required field `statusHistoryArray` (array)
      for (int i = 0; i < jsonArraystatusHistoryArray.size(); i++) {
        BarSourceDataStatusHistoryArrayInner.validateJsonObject(jsonArraystatusHistoryArray.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("tenYearDisciplineArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenYearDisciplineArray` to be an array in the JSON string but got `%s`", jsonObj.get("tenYearDisciplineArray").toString()));
      }

      JsonArray jsonArraytenYearDisciplineArray = jsonObj.getAsJsonArray("tenYearDisciplineArray");
      // validate the required field `tenYearDisciplineArray` (array)
      for (int i = 0; i < jsonArraytenYearDisciplineArray.size(); i++) {
        BarSourceDataTenYearDisciplineArrayInner.validateJsonObject(jsonArraytenYearDisciplineArray.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("undergraduateSchool").isJsonNull() && !jsonObj.get("undergraduateSchool").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `undergraduateSchool` to be a primitive type in the JSON string but got `%s`", jsonObj.get("undergraduateSchool").toString()));
      }
      if (!jsonObj.get("yearsOfPractice").isJsonNull() && !jsonObj.get("yearsOfPractice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `yearsOfPractice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("yearsOfPractice").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BarSourceData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BarSourceData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BarSourceData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BarSourceData.class));

       return (TypeAdapter<T>) new TypeAdapter<BarSourceData>() {
           @Override
           public void write(JsonWriter out, BarSourceData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BarSourceData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             BarSourceData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BarSourceData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BarSourceData
  * @throws IOException if the JSON string is invalid with respect to BarSourceData
  */
  public static BarSourceData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BarSourceData.class);
  }

 /**
  * Convert an instance of BarSourceData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

