/*
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CaseClassCoverage;
import com.konfigthis.client.model.Court;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CourtCoverage
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CourtCoverage {
  public static final String SERIALIZED_NAME_CASE_CLASS_COVERAGE_ARRAY = "caseClassCoverageArray";
  @SerializedName(SERIALIZED_NAME_CASE_CLASS_COVERAGE_ARRAY)
  private List<CaseClassCoverage> caseClassCoverageArray = new ArrayList<>();

  public static final String SERIALIZED_NAME_COURT = "court";
  @SerializedName(SERIALIZED_NAME_COURT)
  private Court court;

  public static final String SERIALIZED_NAME_LAST_UPDATE_COUNT_DATE = "lastUpdateCountDate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_COUNT_DATE)
  private String lastUpdateCountDate;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object = "CourtCoverage";

  public static final String SERIALIZED_NAME_TOTAL_CASE_COUNT = "totalCaseCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_CASE_COUNT)
  private Integer totalCaseCount;

  public static final String SERIALIZED_NAME_TOTAL_CASE_DOCUMENT_IN_LIBRARY_COUNT = "totalCaseDocumentInLibraryCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_CASE_DOCUMENT_IN_LIBRARY_COUNT)
  private Integer totalCaseDocumentInLibraryCount;

  public static final String SERIALIZED_NAME_TOTAL_CASE_DOCUMENT_IN_LIBRARY_IN_LAST_THIRTY_DAYS_COUNT = "totalCaseDocumentInLibraryInLastThirtyDaysCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_CASE_DOCUMENT_IN_LIBRARY_IN_LAST_THIRTY_DAYS_COUNT)
  private Integer totalCaseDocumentInLibraryInLastThirtyDaysCount;

  public static final String SERIALIZED_NAME_TOTAL_CASES_IN_LAST_THIRTY_DAYS_COUNT = "totalCasesInLastThirtyDaysCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_CASES_IN_LAST_THIRTY_DAYS_COUNT)
  private Integer totalCasesInLastThirtyDaysCount;

  public static final String SERIALIZED_NAME_TOTAL_FREE_CASE_DOCUMENT_COUNT = "totalFreeCaseDocumentCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_FREE_CASE_DOCUMENT_COUNT)
  private Integer totalFreeCaseDocumentCount;

  public static final String SERIALIZED_NAME_TOTAL_FREE_CASE_DOCUMENTS_IN_LAST_THIRTY_DAYS_COUNT = "totalFreeCaseDocumentsInLastThirtyDaysCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_FREE_CASE_DOCUMENTS_IN_LAST_THIRTY_DAYS_COUNT)
  private Integer totalFreeCaseDocumentsInLastThirtyDaysCount;

  public static final String SERIALIZED_NAME_TOTAL_PAID_CASE_DOCUMENT_COUNT = "totalPaidCaseDocumentCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAID_CASE_DOCUMENT_COUNT)
  private Integer totalPaidCaseDocumentCount;

  public static final String SERIALIZED_NAME_TOTAL_PAID_CASE_DOCUMENTS_IN_LAST_THIRTY_DAYS_COUNT = "totalPaidCaseDocumentsInLastThirtyDaysCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_PAID_CASE_DOCUMENTS_IN_LAST_THIRTY_DAYS_COUNT)
  private Integer totalPaidCaseDocumentsInLastThirtyDaysCount;

  public CourtCoverage() {
  }

  public CourtCoverage caseClassCoverageArray(List<CaseClassCoverage> caseClassCoverageArray) {
    
    
    
    
    this.caseClassCoverageArray = caseClassCoverageArray;
    return this;
  }

  public CourtCoverage addCaseClassCoverageArrayItem(CaseClassCoverage caseClassCoverageArrayItem) {
    this.caseClassCoverageArray.add(caseClassCoverageArrayItem);
    return this;
  }

   /**
   * Get caseClassCoverageArray
   * @return caseClassCoverageArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<CaseClassCoverage> getCaseClassCoverageArray() {
    return caseClassCoverageArray;
  }


  public void setCaseClassCoverageArray(List<CaseClassCoverage> caseClassCoverageArray) {
    
    
    
    this.caseClassCoverageArray = caseClassCoverageArray;
  }


  public CourtCoverage court(Court court) {
    
    
    
    
    this.court = court;
    return this;
  }

   /**
   * Get court
   * @return court
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Court getCourt() {
    return court;
  }


  public void setCourt(Court court) {
    
    
    
    this.court = court;
  }


  public CourtCoverage lastUpdateCountDate(String lastUpdateCountDate) {
    
    
    if (lastUpdateCountDate != null && lastUpdateCountDate.length() < 25) {
      throw new IllegalArgumentException("Invalid value for lastUpdateCountDate. Length must be greater than or equal to 25.");
    }
    
    this.lastUpdateCountDate = lastUpdateCountDate;
    return this;
  }

   /**
   * Date when it was last updated.
   * @return lastUpdateCountDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2020-08-05T17:32:28.000Z", required = true, value = "Date when it was last updated.")

  public String getLastUpdateCountDate() {
    return lastUpdateCountDate;
  }


  public void setLastUpdateCountDate(String lastUpdateCountDate) {
    
    
    if (lastUpdateCountDate != null && lastUpdateCountDate.length() < 25) {
      throw new IllegalArgumentException("Invalid value for lastUpdateCountDate. Length must be greater than or equal to 25.");
    }
    this.lastUpdateCountDate = lastUpdateCountDate;
  }


  public CourtCoverage _object(String _object) {
    
    
    if (_object != null && _object.length() < 13) {
      throw new IllegalArgumentException("Invalid value for _object. Length must be greater than or equal to 13.");
    }
    
    this._object = _object;
    return this;
  }

   /**
   * Name of the object
   * @return _object
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "CourtCoverage", required = true, value = "Name of the object")

  public String getObject() {
    return _object;
  }


  public void setObject(String _object) {
    
    
    if (_object != null && _object.length() < 13) {
      throw new IllegalArgumentException("Invalid value for _object. Length must be greater than or equal to 13.");
    }
    this._object = _object;
  }


  public CourtCoverage totalCaseCount(Integer totalCaseCount) {
    
    
    
    
    this.totalCaseCount = totalCaseCount;
    return this;
  }

   /**
   * Total Cases for a specific court.
   * @return totalCaseCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1480157", required = true, value = "Total Cases for a specific court.")

  public Integer getTotalCaseCount() {
    return totalCaseCount;
  }


  public void setTotalCaseCount(Integer totalCaseCount) {
    
    
    
    this.totalCaseCount = totalCaseCount;
  }


  public CourtCoverage totalCaseDocumentInLibraryCount(Integer totalCaseDocumentInLibraryCount) {
    
    
    
    
    this.totalCaseDocumentInLibraryCount = totalCaseDocumentInLibraryCount;
    return this;
  }

   /**
   * Count of total Case Documents added in UniCourt Library.
   * @return totalCaseDocumentInLibraryCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "25466", required = true, value = "Count of total Case Documents added in UniCourt Library.")

  public Integer getTotalCaseDocumentInLibraryCount() {
    return totalCaseDocumentInLibraryCount;
  }


  public void setTotalCaseDocumentInLibraryCount(Integer totalCaseDocumentInLibraryCount) {
    
    
    
    this.totalCaseDocumentInLibraryCount = totalCaseDocumentInLibraryCount;
  }


  public CourtCoverage totalCaseDocumentInLibraryInLastThirtyDaysCount(Integer totalCaseDocumentInLibraryInLastThirtyDaysCount) {
    
    
    
    
    this.totalCaseDocumentInLibraryInLastThirtyDaysCount = totalCaseDocumentInLibraryInLastThirtyDaysCount;
    return this;
  }

   /**
   * Count of total Case Documents added in UniCourt Library in last 30 days
   * @return totalCaseDocumentInLibraryInLastThirtyDaysCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "25466", required = true, value = "Count of total Case Documents added in UniCourt Library in last 30 days")

  public Integer getTotalCaseDocumentInLibraryInLastThirtyDaysCount() {
    return totalCaseDocumentInLibraryInLastThirtyDaysCount;
  }


  public void setTotalCaseDocumentInLibraryInLastThirtyDaysCount(Integer totalCaseDocumentInLibraryInLastThirtyDaysCount) {
    
    
    
    this.totalCaseDocumentInLibraryInLastThirtyDaysCount = totalCaseDocumentInLibraryInLastThirtyDaysCount;
  }


  public CourtCoverage totalCasesInLastThirtyDaysCount(Integer totalCasesInLastThirtyDaysCount) {
    
    
    
    
    this.totalCasesInLastThirtyDaysCount = totalCasesInLastThirtyDaysCount;
    return this;
  }

   /**
   * Total Cases in last 30 days that were added to UniCourt
   * @return totalCasesInLastThirtyDaysCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "8889", required = true, value = "Total Cases in last 30 days that were added to UniCourt")

  public Integer getTotalCasesInLastThirtyDaysCount() {
    return totalCasesInLastThirtyDaysCount;
  }


  public void setTotalCasesInLastThirtyDaysCount(Integer totalCasesInLastThirtyDaysCount) {
    
    
    
    this.totalCasesInLastThirtyDaysCount = totalCasesInLastThirtyDaysCount;
  }


  public CourtCoverage totalFreeCaseDocumentCount(Integer totalFreeCaseDocumentCount) {
    
    
    
    
    this.totalFreeCaseDocumentCount = totalFreeCaseDocumentCount;
    return this;
  }

   /**
   * Total Free Case Documents for a specific court.
   * @return totalFreeCaseDocumentCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "12545", required = true, value = "Total Free Case Documents for a specific court.")

  public Integer getTotalFreeCaseDocumentCount() {
    return totalFreeCaseDocumentCount;
  }


  public void setTotalFreeCaseDocumentCount(Integer totalFreeCaseDocumentCount) {
    
    
    
    this.totalFreeCaseDocumentCount = totalFreeCaseDocumentCount;
  }


  public CourtCoverage totalFreeCaseDocumentsInLastThirtyDaysCount(Integer totalFreeCaseDocumentsInLastThirtyDaysCount) {
    
    
    
    
    this.totalFreeCaseDocumentsInLastThirtyDaysCount = totalFreeCaseDocumentsInLastThirtyDaysCount;
    return this;
  }

   /**
   * Total Free Case Documents in last 30 days that were added to UniCourt
   * @return totalFreeCaseDocumentsInLastThirtyDaysCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "125", required = true, value = "Total Free Case Documents in last 30 days that were added to UniCourt")

  public Integer getTotalFreeCaseDocumentsInLastThirtyDaysCount() {
    return totalFreeCaseDocumentsInLastThirtyDaysCount;
  }


  public void setTotalFreeCaseDocumentsInLastThirtyDaysCount(Integer totalFreeCaseDocumentsInLastThirtyDaysCount) {
    
    
    
    this.totalFreeCaseDocumentsInLastThirtyDaysCount = totalFreeCaseDocumentsInLastThirtyDaysCount;
  }


  public CourtCoverage totalPaidCaseDocumentCount(Integer totalPaidCaseDocumentCount) {
    
    
    
    
    this.totalPaidCaseDocumentCount = totalPaidCaseDocumentCount;
    return this;
  }

   /**
   * Total Paid Case Documents for a specific court.
   * @return totalPaidCaseDocumentCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1480157", required = true, value = "Total Paid Case Documents for a specific court.")

  public Integer getTotalPaidCaseDocumentCount() {
    return totalPaidCaseDocumentCount;
  }


  public void setTotalPaidCaseDocumentCount(Integer totalPaidCaseDocumentCount) {
    
    
    
    this.totalPaidCaseDocumentCount = totalPaidCaseDocumentCount;
  }


  public CourtCoverage totalPaidCaseDocumentsInLastThirtyDaysCount(Integer totalPaidCaseDocumentsInLastThirtyDaysCount) {
    
    
    
    
    this.totalPaidCaseDocumentsInLastThirtyDaysCount = totalPaidCaseDocumentsInLastThirtyDaysCount;
    return this;
  }

   /**
   * Total Paid Case Documents in last 30 days that were added to UniCourt
   * @return totalPaidCaseDocumentsInLastThirtyDaysCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "25466", required = true, value = "Total Paid Case Documents in last 30 days that were added to UniCourt")

  public Integer getTotalPaidCaseDocumentsInLastThirtyDaysCount() {
    return totalPaidCaseDocumentsInLastThirtyDaysCount;
  }


  public void setTotalPaidCaseDocumentsInLastThirtyDaysCount(Integer totalPaidCaseDocumentsInLastThirtyDaysCount) {
    
    
    
    this.totalPaidCaseDocumentsInLastThirtyDaysCount = totalPaidCaseDocumentsInLastThirtyDaysCount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CourtCoverage instance itself
   */
  public CourtCoverage putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CourtCoverage courtCoverage = (CourtCoverage) o;
    return Objects.equals(this.caseClassCoverageArray, courtCoverage.caseClassCoverageArray) &&
        Objects.equals(this.court, courtCoverage.court) &&
        Objects.equals(this.lastUpdateCountDate, courtCoverage.lastUpdateCountDate) &&
        Objects.equals(this._object, courtCoverage._object) &&
        Objects.equals(this.totalCaseCount, courtCoverage.totalCaseCount) &&
        Objects.equals(this.totalCaseDocumentInLibraryCount, courtCoverage.totalCaseDocumentInLibraryCount) &&
        Objects.equals(this.totalCaseDocumentInLibraryInLastThirtyDaysCount, courtCoverage.totalCaseDocumentInLibraryInLastThirtyDaysCount) &&
        Objects.equals(this.totalCasesInLastThirtyDaysCount, courtCoverage.totalCasesInLastThirtyDaysCount) &&
        Objects.equals(this.totalFreeCaseDocumentCount, courtCoverage.totalFreeCaseDocumentCount) &&
        Objects.equals(this.totalFreeCaseDocumentsInLastThirtyDaysCount, courtCoverage.totalFreeCaseDocumentsInLastThirtyDaysCount) &&
        Objects.equals(this.totalPaidCaseDocumentCount, courtCoverage.totalPaidCaseDocumentCount) &&
        Objects.equals(this.totalPaidCaseDocumentsInLastThirtyDaysCount, courtCoverage.totalPaidCaseDocumentsInLastThirtyDaysCount)&&
        Objects.equals(this.additionalProperties, courtCoverage.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caseClassCoverageArray, court, lastUpdateCountDate, _object, totalCaseCount, totalCaseDocumentInLibraryCount, totalCaseDocumentInLibraryInLastThirtyDaysCount, totalCasesInLastThirtyDaysCount, totalFreeCaseDocumentCount, totalFreeCaseDocumentsInLastThirtyDaysCount, totalPaidCaseDocumentCount, totalPaidCaseDocumentsInLastThirtyDaysCount, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CourtCoverage {\n");
    sb.append("    caseClassCoverageArray: ").append(toIndentedString(caseClassCoverageArray)).append("\n");
    sb.append("    court: ").append(toIndentedString(court)).append("\n");
    sb.append("    lastUpdateCountDate: ").append(toIndentedString(lastUpdateCountDate)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    totalCaseCount: ").append(toIndentedString(totalCaseCount)).append("\n");
    sb.append("    totalCaseDocumentInLibraryCount: ").append(toIndentedString(totalCaseDocumentInLibraryCount)).append("\n");
    sb.append("    totalCaseDocumentInLibraryInLastThirtyDaysCount: ").append(toIndentedString(totalCaseDocumentInLibraryInLastThirtyDaysCount)).append("\n");
    sb.append("    totalCasesInLastThirtyDaysCount: ").append(toIndentedString(totalCasesInLastThirtyDaysCount)).append("\n");
    sb.append("    totalFreeCaseDocumentCount: ").append(toIndentedString(totalFreeCaseDocumentCount)).append("\n");
    sb.append("    totalFreeCaseDocumentsInLastThirtyDaysCount: ").append(toIndentedString(totalFreeCaseDocumentsInLastThirtyDaysCount)).append("\n");
    sb.append("    totalPaidCaseDocumentCount: ").append(toIndentedString(totalPaidCaseDocumentCount)).append("\n");
    sb.append("    totalPaidCaseDocumentsInLastThirtyDaysCount: ").append(toIndentedString(totalPaidCaseDocumentsInLastThirtyDaysCount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("caseClassCoverageArray");
    openapiFields.add("court");
    openapiFields.add("lastUpdateCountDate");
    openapiFields.add("object");
    openapiFields.add("totalCaseCount");
    openapiFields.add("totalCaseDocumentInLibraryCount");
    openapiFields.add("totalCaseDocumentInLibraryInLastThirtyDaysCount");
    openapiFields.add("totalCasesInLastThirtyDaysCount");
    openapiFields.add("totalFreeCaseDocumentCount");
    openapiFields.add("totalFreeCaseDocumentsInLastThirtyDaysCount");
    openapiFields.add("totalPaidCaseDocumentCount");
    openapiFields.add("totalPaidCaseDocumentsInLastThirtyDaysCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("caseClassCoverageArray");
    openapiRequiredFields.add("court");
    openapiRequiredFields.add("lastUpdateCountDate");
    openapiRequiredFields.add("object");
    openapiRequiredFields.add("totalCaseCount");
    openapiRequiredFields.add("totalCaseDocumentInLibraryCount");
    openapiRequiredFields.add("totalCaseDocumentInLibraryInLastThirtyDaysCount");
    openapiRequiredFields.add("totalCasesInLastThirtyDaysCount");
    openapiRequiredFields.add("totalFreeCaseDocumentCount");
    openapiRequiredFields.add("totalFreeCaseDocumentsInLastThirtyDaysCount");
    openapiRequiredFields.add("totalPaidCaseDocumentCount");
    openapiRequiredFields.add("totalPaidCaseDocumentsInLastThirtyDaysCount");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CourtCoverage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CourtCoverage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CourtCoverage is not found in the empty JSON string", CourtCoverage.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CourtCoverage.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("caseClassCoverageArray").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `caseClassCoverageArray` to be an array in the JSON string but got `%s`", jsonObj.get("caseClassCoverageArray").toString()));
      }

      JsonArray jsonArraycaseClassCoverageArray = jsonObj.getAsJsonArray("caseClassCoverageArray");
      // validate the required field `caseClassCoverageArray` (array)
      for (int i = 0; i < jsonArraycaseClassCoverageArray.size(); i++) {
        CaseClassCoverage.validateJsonObject(jsonArraycaseClassCoverageArray.get(i).getAsJsonObject());
      };
      // validate the required field `court`
      Court.validateJsonObject(jsonObj.getAsJsonObject("court"));
      if (!jsonObj.get("lastUpdateCountDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdateCountDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdateCountDate").toString()));
      }
      if (!jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CourtCoverage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CourtCoverage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CourtCoverage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CourtCoverage.class));

       return (TypeAdapter<T>) new TypeAdapter<CourtCoverage>() {
           @Override
           public void write(JsonWriter out, CourtCoverage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CourtCoverage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CourtCoverage instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CourtCoverage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CourtCoverage
  * @throws IOException if the JSON string is invalid with respect to CourtCoverage
  */
  public static CourtCoverage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CourtCoverage.class);
  }

 /**
  * Convert an instance of CourtCoverage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

